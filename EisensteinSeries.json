[{"references":
  ["NontriviallyNormedField",
   "NontriviallyNormedField.mk",
   "DenselyNormedField",
   "DenselyNormedField.toNormedField",
   "DenselyNormedField.toNontriviallyNormedField.proof_1"],
  "name": "DenselyNormedField.toNontriviallyNormedField",
  "constType":
  "{α : Type u_1} → [inst : DenselyNormedField α] → NontriviallyNormedField α",
  "constCategory": "Definition"},
 {"references":
  ["EStateM.Result.ok",
   "List.cons",
   "Lean.Macro.Context",
   "Lean.Syntax.isOfKind",
   "Lean.Name.num",
   "String.toSubstring'",
   "String",
   "Lean.Macro",
   "Lean.Syntax.Preresolved.decl",
   "Lean.Syntax.Preresolved",
   "Lean.addMacroScope",
   "EStateM.Result",
   "Lean.Syntax.Preresolved.namespace",
   "Lean.Syntax",
   "Lean.MacroScope",
   "EStateM.Result.error",
   "Lean.Macro.Exception.unsupportedSyntax",
   "Lean.Name.mkStr2",
   "Bool.casesOn",
   "Lean.Macro.State",
   "List",
   "Bool.false",
   "Lean.Macro.Exception",
   "Lean.SourceInfo",
   "Lean.Syntax.ident",
   "List.nil",
   "Bool",
   "Lean.SourceInfo.fromRef",
   "Lean.Name",
   "Lean.Name.anonymous",
   "Substring",
   "Lean.Name.str"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._cstage1",
  "constType": "Lean.Macro",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "instHSub",
   "instHMul",
   "instHAdd",
   "Complex.mk",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.instMulReal",
   "Real.instSubReal",
   "Real",
   "HSub.hSub",
   "HMul.hMul",
   "Complex",
   "Mul",
   "Complex.re",
   "Mul.mk"],
  "name": "Complex.instMulComplex",
  "constType": "Mul ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "AddMonoidWithOne",
   "OfNat.ofNat",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "CharZero",
   "propext",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "instOfNatNat",
   "Nat",
   "Nat.cast_eq_zero",
   "Eq"],
  "name": "Mathlib.Algebra.CharZero.Defs._auxLemma.3",
  "constType":
  "∀ {R : Type u_1} [inst : AddMonoidWithOne R] [inst_1 : CharZero R] {n : ℕ}, (↑n = 0) = (n = 0)",
  "constCategory": "Theorem"},
 {"references": ["LinearOrderedCommMonoid", "LinearOrderedCommMonoidWithZero"],
  "name": "LinearOrderedCommMonoidWithZero.toLinearOrderedCommMonoid",
  "constType":
  "{α : Type u_1} → [self : LinearOrderedCommMonoidWithZero α] → LinearOrderedCommMonoid α",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Complex",
  "constType": "Type",
  "constCategory": "Other"},
 {"references": ["Equiv", "Function.LeftInverse", "Function.RightInverse"],
  "name": "Equiv.mk",
  "constType":
  "{α : Sort u_1} →\n  {β : Sort u_2} →\n    (toFun : α → β) → (invFun : β → α) → Function.LeftInverse invFun toFun → Function.RightInverse invFun toFun → α ≃ β",
  "constCategory": "Other"},
 {"references":
  ["IsROrC.innerProductSpace",
   "Complex.instNormedFieldComplex",
   "NormedAddCommGroup",
   "CompleteSpace",
   "OfNat.ofNat",
   "Set.instIsTransSetSubsetInstHasSubsetSet",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableOn",
   "compact_basis_nhds",
   "interior_subset",
   "DenselyNormedField.toNormedField",
   "deriv",
   "hasDerivAt_of_tendsto_locally_uniformly_on'",
   "Exists.casesOn",
   "Filter.NeBot",
   "TendstoLocallyUniformlyOn",
   "Iff.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Iff.mp",
   "NormedField.toNormedSpace",
   "DifferentiableWithinAt",
   "locally_compact_of_proper",
   "Filter",
   "And.casesOn",
   "IsOpen",
   "interior",
   "Filter.univ_mem'",
   "setOf",
   "Complex.instDenselyNormedFieldComplex",
   "NormedField.toMetricSpace",
   "TendstoLocallyUniformlyOn.tendsto_at",
   "Function.comp",
   "PseudoMetricSpace.toUniformSpace",
   "HasSubset.Subset",
   "Filter.Eventually",
   "Filter.HasBasis.mem_iff",
   "HasDerivAt",
   "DifferentiableOn.mono",
   "Set.instMembershipSet",
   "DifferentiableOn.differentiableAt",
   "And",
   "InnerProductSpace.toNormedSpace",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Exists",
   "DifferentiableAt.differentiableWithinAt",
   "Set",
   "Real",
   "SeminormedRing.toPseudoMetricSpace",
   "TendstoUniformlyOn",
   "Complex.exists_cthickening_tendstoUniformlyOn",
   "IsOpen.mem_nhds",
   "Complex.cderiv",
   "NormedSpace",
   "Filter.mp_mem",
   "Zero.toOfNat0",
   "TendstoUniformlyOn.tendstoLocallyUniformlyOn",
   "Complex.instIsROrCComplex",
   "TendstoLocallyUniformlyOn.mono",
   "isOpen_interior",
   "Metric.cthickening",
   "UniformSpace.toTopologicalSpace",
   "id",
   "instMembershipSetFilter",
   "Membership.mem",
   "MetricSpace.toEMetricSpace",
   "IsROrC.toDenselyNormedField",
   "Real.instLTReal",
   "nhds",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "HasSubset.Subset.trans",
   "HasDerivAt.differentiableAt",
   "Complex.instProperSpaceComplexToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
   "NormedField.toNormedCommRing",
   "interior_mem_nhds",
   "GT.gt",
   "Real.instZeroReal",
   "NormedCommRing.toSeminormedCommRing",
   "EMetricSpace.toPseudoEMetricSpace",
   "Set.instHasSubsetSet",
   "letFun",
   "Complex",
   "Complex.instNormedAddCommGroupComplex",
   "IsCompact",
   "NonUnitalNormedRing.toNormedAddCommGroup",
   "DenselyNormedField.toNontriviallyNormedField"],
  "name": "TendstoLocallyUniformlyOn.differentiableOn",
  "constType":
  "∀ {E : Type u_1} {ι : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℂ E] [inst_2 : CompleteSpace E]\n  {U : Set ℂ} {φ : Filter ι} {F : ι → ℂ → E} {f : ℂ → E} [inst_3 : Filter.NeBot φ],\n  TendstoLocallyUniformlyOn F f φ U → (∀ᶠ (n : ι) in φ, DifferentiableOn ℂ (F n) U) → IsOpen U → DifferentiableOn ℂ f U",
  "constCategory": "Theorem"},
 {"references":
  ["instHDiv",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "MulOneClass.toOne",
   "div_eq_mul_inv",
   "DivInvMonoid",
   "Eq.refl",
   "One.toOfNat1",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Eq",
   "DivInvMonoid.toInv",
   "instHMul",
   "Eq.mpr",
   "one_mul",
   "Eq.ndrec",
   "HMul.hMul",
   "HDiv.hDiv",
   "Inv.inv",
   "DivInvMonoid.toDiv",
   "id"],
  "name": "inv_eq_one_div",
  "constType": "∀ {G : Type u_3} [inst : DivInvMonoid G] (x : G), x⁻¹ = 1 / x",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "upper_half_plane_isOpen",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "UpperHalfPlane",
   "Complex",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace",
   "Subtype"],
  "name": "EisensteinSeries.holExtn._cstage1",
  "constType":
  "(UpperHalfPlane → ℂ) → ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Iff.intro", "False.elim", "False", "propext", "Not", "absurd", "Eq"],
  "name": "eq_false",
  "constType": "∀ {p : Prop}, ¬p → p = False",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "true_and",
   "Exists",
   "funext",
   "setOf",
   "Set",
   "Set.univ",
   "True",
   "iff_self",
   "Set.instMembershipSet",
   "Eq",
   "Set.ext",
   "Set.range",
   "And",
   "Mathlib.Data.Set.Basic._auxLemma.14",
   "Iff",
   "of_eq_true",
   "Set.image",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Set.image_univ",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} {f : α → β}, f '' Set.univ = Set.range f",
  "constCategory": "Theorem"},
 {"references":
  ["Preorder.toLT", "LT.lt", "le_of_lt", "Preorder", "LE.le", "Preorder.toLE"],
  "name": "LT.lt.le",
  "constType": "∀ {α : Type u} [inst : Preorder α] {a b : α}, a < b → a ≤ b",
  "constCategory": "Theorem"},
 {"references": ["outParam"],
  "name": "HAdd",
  "constType": "Type u → Type v → outParam (Type w) → Type (max (max u v) w)",
  "constCategory": "Other"},
 {"references":
  ["NonUnitalNonAssocRing.toHasDistribNeg",
   "CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "mul_neg",
   "CommRing.toNonUnitalCommRing",
   "Subtype.val",
   "Eq.refl",
   "instDecidableEqFin",
   "neg_neg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "CommRing",
   "Eq",
   "Subtype.property",
   "mul_comm",
   "Matrix.det",
   "Eq.mpr",
   "Ring.toNeg",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "InvolutiveNeg.toNeg",
   "Matrix",
   "HasDistribNeg.toInvolutiveNeg",
   "Ring.toSub",
   "instOfNatNat",
   "Nat",
   "neg_mul",
   "Eq.trans",
   "Nat.succ",
   "id",
   "NeZero.succ",
   "instHSub",
   "NonUnitalNonAssocRing.toMul",
   "HSub.hSub",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "One.toOfNat1",
   "Fin.fintype",
   "Neg.neg",
   "CommMagma.toMul",
   "Matrix.vecEmpty",
   "Matrix.det_fin_two",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "instHMul",
   "Eq.ndrec",
   "Matrix.SpecialLinearGroup",
   "Eq.mp",
   "letFun",
   "Fin.instOfNatFin",
   "CommRing.toRing",
   "HMul.hMul",
   "Matrix.vecCons",
   "congrArg",
   "Fin",
   "congrFun"],
  "name": "Matrix.SpecialLinearGroup.SL2_inv_expl_det",
  "constType":
  "∀ {R : Type v} [inst : CommRing R] (A : Matrix.SpecialLinearGroup (Fin 2) R),\n  Matrix.det ![![↑A 1 1, -↑A 0 1], ![-↑A 1 0, ↑A 0 0]] = 1",
  "constCategory": "Theorem"},
 {"references":
  ["Nat.commSemiring",
   "CommSemiring.toSemiring",
   "inferInstance",
   "Monoid",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Nat"],
  "name": "Nat.monoid",
  "constType": "Monoid ℕ",
  "constCategory": "Definition"},
 {"references": ["LE.mk", "Nat.le", "LE", "Nat"],
  "name": "instLENat",
  "constType": "LE ℕ",
  "constCategory": "Definition"},
 {"references":
  ["funext", "Subsingleton.intro", "Subsingleton", "Subsingleton.elim"],
  "name": "instSubsingletonForAll",
  "constType":
  "∀ {α : Sort u} {β : α → Sort v} [inst : ∀ (a : α), Subsingleton (β a)], Subsingleton ((a : α) → β a)",
  "constCategory": "Definition"},
 {"references":
  ["DistribLattice.toLattice",
   "Neg.toHasAbs",
   "SemilatticeSup.toSup",
   "LinearOrder",
   "instDistribLattice",
   "LinearOrder.toMax",
   "Max.max",
   "Neg.neg",
   "Lattice.toSemilatticeSup",
   "rfl",
   "Abs.abs",
   "Neg",
   "Eq"],
  "name": "abs_eq_max_neg",
  "constType":
  "∀ {α : Type u_1} [inst : Neg α] [inst_1 : LinearOrder α] {a : α}, |a| = max a (-a)",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "PartialOrder.toPreorder",
   "AbsoluteValue",
   "Real.isROrC",
   "Real.instSupReal",
   "Preorder.toLE",
   "Semiring.toNatCast",
   "Eq",
   "Mathlib.Data.Int.CharZero._auxLemma.2",
   "Nat.linearOrder",
   "IsROrC.charZero_isROrC",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Ring.toNeg",
   "SemilatticeSup.toSup",
   "Nat.cast",
   "Ring.toIntCast",
   "Nat",
   "EisensteinSeries.square",
   "Eq.trans",
   "Complex.abs",
   "Ne",
   "Or",
   "Prod.snd",
   "instDistribLattice",
   "eq_of_heq",
   "Finset.instMembershipFinset",
   "Real.instRingReal",
   "Prod.fst",
   "Or.casesOn",
   "Real.intCast",
   "Mathlib.Data.Int.Cast.Lemmas._auxLemma.14",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DistribLattice.toLattice",
   "False.elim",
   "HEq.refl",
   "Int.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LinearOrder.toMax",
   "Eq.mp",
   "Not",
   "congrArg",
   "Int",
   "StrictOrderedRing.toRing",
   "HEq",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "Real",
   "Eq.refl",
   "True",
   "Abs.abs",
   "Real.instNegReal",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "LinearOrderedRing.toLinearOrder",
   "max_choice",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.10",
   "Finset",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "Lattice.toSemilatticeSup",
   "Eq.symm",
   "id",
   "eq_self",
   "Membership.mem",
   "Neg.toHasAbs",
   "Ring.toAddGroupWithOne",
   "False",
   "Real.instLinearOrderedRingReal",
   "Or.inr",
   "Complex.instRingComplex",
   "FunLike.coe",
   "Nat.instMaxNat",
   "StrictOrderedSemiring.toSemiring",
   "Int.cast_natAbs",
   "Eq.ndrec",
   "Or.inl",
   "instNatCastInt",
   "letFun",
   "OrderedSemiring.toSemiring",
   "Max.max",
   "not_true_eq_false",
   "Prod",
   "Complex",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Eq.casesOn",
   "Complex.int_cast_abs",
   "OrderedSemiring.toPartialOrder",
   "Int.natAbs"],
  "name": "EisensteinSeries.Complex_abs_square_left_ne",
  "constType":
  "∀ (n : ℕ), ∀ x ∈ EisensteinSeries.square ↑n, Complex.abs ↑x.1 ≠ ↑n → Complex.abs ↑x.2 = ↑n",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.ofReal'", "propext", "Real", "Complex.ofReal_inj", "Complex", "Eq"],
  "name": "Mathlib.Data.Complex.Basic._auxLemma.1",
  "constType": "∀ {z w : ℝ}, (↑z = ↑w) = (z = w)",
  "constCategory": "Theorem"},
 {"references": ["CanLift", "Exists", "outParam", "Eq"],
  "name": "CanLift.prf",
  "constType":
  "∀ {α : Sort u_1} {β : Sort u_2} {coe : outParam (β → α)} {cond : outParam (α → Prop)} [self : CanLift α β coe cond]\n  (x : α), cond x → ∃ y, coe y = x",
  "constCategory": "Definition"},
 {"references": ["DivisionRing", "Ring"],
  "name": "DivisionRing.toRing",
  "constType": "{K : Type u} → [self : DivisionRing K] → Ring K",
  "constCategory": "Definition"},
 {"references":
  ["DifferentiableAt",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableWithinAt",
   "Set",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "DifferentiableWithinAt.mono",
   "differentiableWithinAt_univ",
   "Set.univ",
   "NormedSpace",
   "Set.subset_univ",
   "Iff.mpr"],
  "name": "DifferentiableAt.differentiableWithinAt",
  "constType":
  "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\n  {x : E} {s : Set E}, DifferentiableAt 𝕜 f x → DifferentiableWithinAt 𝕜 f s x",
  "constCategory": "Theorem"},
 {"references": ["Sub", "Int", "Int.sub", "Sub.mk"],
  "name": "Int.instSubInt",
  "constType": "Sub ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "OfNat.ofNat",
   "propext",
   "GroupWithZero",
   "MonoidWithZero.toZero",
   "GroupWithZero.toMonoidWithZero",
   "inv_eq_zero",
   "GroupWithZero.toInv",
   "Inv.inv",
   "Eq"],
  "name": "Mathlib.Algebra.GroupWithZero.Basic._auxLemma.11",
  "constType":
  "∀ {G₀ : Type u_3} [inst : GroupWithZero G₀] {a : G₀}, (a⁻¹ = 0) = (a = 0)",
  "constCategory": "Theorem"},
 {"references":
  ["Finset.disjUnion.proof_1",
   "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
   "instHAdd",
   "HAdd.hAdd",
   "Multiset",
   "Disjoint",
   "Finset",
   "Finset.val",
   "Finset.partialOrder",
   "Finset.mk",
   "Multiset.instAddMultiset"],
  "name": "Finset.disjUnion",
  "constType": "{α : Type u_1} → (s t : Finset α) → Disjoint s t → Finset α",
  "constCategory": "Definition"},
 {"references": ["String", "Lean.Name"],
  "name": "Lean.Name.str",
  "constType": "Lean.Name → String → Lean.Name",
  "constCategory": "Other"},
 {"references": ["LE.mk", "LE", "Int.le", "Int"],
  "name": "Int.instLEInt",
  "constType": "LE ℤ",
  "constCategory": "Definition"},
 {"references":
  ["SeminormedAddGroup",
   "SeminormedAddCommGroup.toAddCommGroup",
   "SeminormedAddGroup.mk",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "SeminormedAddCommGroup.toNorm",
   "SeminormedAddCommGroup",
   "AddCommGroup.toAddGroup",
   "SeminormedAddCommGroup.dist_eq"],
  "name": "SeminormedAddCommGroup.toSeminormedAddGroup",
  "constType":
  "{E : Type u_6} → [inst : SeminormedAddCommGroup E] → SeminormedAddGroup E",
  "constCategory": "Definition"},
 {"references": ["And", "propext", "and_self_iff", "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.11",
  "constType": "∀ {a : Prop}, (a ∧ a) = a",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "NonUnitalRing.mk",
   "NormedRing.toNorm",
   "AddCommMonoid.toAddMonoid",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_6",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_3",
   "NormedCommRing.mul_comm",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_12",
   "Ring.toNeg",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_4",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_8",
   "Ring.toSub",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_1",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_9",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_7",
   "NormedRing.toRing",
   "AddCommGroup.mk",
   "NonUnitalNormedCommRing.mk",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_10",
   "AddGroup.mk",
   "NormedCommRing.toNormedRing",
   "NormedRing.toMetricSpace",
   "NonUnitalNonAssocSemiring.toMul",
   "Ring.toSemiring",
   "NonUnitalNonAssocRing.mk",
   "SubNegMonoid.mk",
   "Ring.zsmul",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_13",
   "NormedCommRing",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_2",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_11",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNormedCommRing",
   "NonUnitalNormedRing.mk",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "NormedCommRing.toNonUnitalNormedCommRing.proof_5"],
  "name": "NormedCommRing.toNonUnitalNormedCommRing",
  "constType":
  "{α : Type u_1} → [β : NormedCommRing α] → NonUnitalNormedCommRing α",
  "constCategory": "Definition"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "PartialOrder.toPreorder",
   "Prod.snd",
   "Finset.instSProd",
   "Finset.Icc",
   "Eq.refl",
   "Neg.neg",
   "Int.linearOrderedCommRing",
   "Prod.fst",
   "Nat.instMaxNat",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Int.instDecidableEqInt",
   "SProd.sprod",
   "Finset",
   "Max.max",
   "Finset.filter",
   "Int.instNegInt",
   "Prod",
   "Nat",
   "EisensteinSeries.square",
   "Int",
   "Int.natAbs"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.lattice_functions.0.EisensteinSeries.square._eq_1",
  "constType":
  "∀ (m : ℤ),\n  EisensteinSeries.square m =\n    Finset.filter (fun x => ↑(max (Int.natAbs x.1) (Int.natAbs x.2)) = m) (Finset.Icc (-m) m ×ˢ Finset.Icc (-m) m)",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "OfNat.ofNat",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "PartialOrder.toPreorder",
   "mul_le_mul_of_nonpos_right",
   "instHAdd",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "MulZeroClass.zero_mul",
   "NonUnitalNonAssocSemiring.toMul",
   "ExistsAddOfLE",
   "LE.le",
   "MulZeroClass.toMul",
   "Preorder.toLE",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "instHMul",
   "Function.swap",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Eq.mp",
   "OrderedSemiring.toSemiring",
   "MulZeroClass.toZero",
   "HMul.hMul",
   "MonoidWithZero.toZero",
   "congrArg",
   "OrderedSemiring.toPartialOrder",
   "ContravariantClass",
   "congrFun"],
  "name": "mul_nonneg_of_nonpos_of_nonpos",
  "constType":
  "∀ {α : Type u} [inst : OrderedSemiring α] {a b : α} [inst_1 : ExistsAddOfLE α]\n  [inst_2 : ContravariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1], a ≤ 0 → b ≤ 0 → 0 ≤ a * b",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "Nat.rawCast",
   "One.toOfNat1",
   "NonAssocSemiring.toMulZeroOneClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "Eq",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "one_mul",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "HMul.hMul",
   "instOfNatNat",
   "Nat",
   "instMulNat",
   "congrArg",
   "Eq.trans",
   "Nat.cast_one",
   "congrFun",
   "Nat.semiring"],
  "name": "Mathlib.Tactic.Ring.coeff_one",
  "constType": "∀ (k : ℕ), Nat.rawCast k = Nat.rawCast 1 * k",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "CommSemiring.toSemiring",
   "MulOneClass.toMul",
   "instAddNat",
   "instHAdd",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "NonUnitalCommSemiring.toCommSemigroup",
   "CommSemiring.toNonUnitalCommSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "CommMagma.toMul",
   "Monoid.toMulOneClass",
   "True",
   "pow_add",
   "Eq",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "mul_mul_mul_comm",
   "of_eq_true",
   "MonoidWithZero.toMonoid",
   "CommSemigroup.toCommMagma",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instHPow",
   "CommSemiring",
   "HMul.hMul",
   "Monoid.toNatPow",
   "Nat",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {ea eb e : ℕ} {a₂ b₂ c : R} (x : R),\n  ea + eb = e → a₂ * b₂ = c → x ^ ea * a₂ * (x ^ eb * b₂) = x ^ e * c",
  "constCategory": "Theorem"},
 {"references":
  ["Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "SlashInvariantForm",
   "instDecidableEqFin",
   "Subgroup",
   "Complex",
   "UpperHalfPlane",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "SlashInvariantForm.toFun",
  "constType":
  "{Γ : outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ))} →\n  {k : outParam ℤ} → SlashInvariantForm Γ k → UpperHalfPlane → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Classical.propDecidable.proof_1", "Decidable", "Classical.choice"],
  "name": "Classical.propDecidable",
  "constType": "(a : Prop) → Decidable a",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Iff.rfl",
   "Real",
   "Set",
   "upper_half_plane_isOpen",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "Set.instMembershipSet",
   "Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "TopologicalSpace.Opens.carrier",
   "Iff",
   "LT.lt",
   "Complex",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace"],
  "name": "EisensteinSeries.mem_uhs",
  "constType":
  "∀ (x : ℂ), x ∈ { carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }.carrier ↔ 0 < x.im",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Real.linearOrderedCommRing",
   "Real",
   "LinearOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring"],
  "name": "Real.instLinearOrderedSemiringReal",
  "constType": "LinearOrderedSemiring ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "PartialOrder.toPreorder",
   "MulZeroOneClass.toMulOneClass",
   "Distrib.rightDistribClass",
   "HAdd.hAdd",
   "Semifield.toCommGroupWithZero",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "AddGroupWithOne.toAddGroup",
   "Iff.mpr",
   "Eq",
   "SubNegMonoid.toSub",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Ring.toIntCast",
   "LinearOrderedField.toLinearOrderedSemifield",
   "HDiv.hDiv",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Int.lt_floor_add_one",
   "instHSub",
   "StrictOrderedRing.toPartialOrder",
   "div_lt_iff",
   "FloorRing",
   "add_comm",
   "instHDiv",
   "MulOneClass.toOne",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "AddCommMagma.toAdd",
   "CommGroupWithZero.toCommMonoidWithZero",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "AddCancelMonoid.toIsCancelAdd",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Int.cast",
   "LT.lt",
   "Field.toDivisionRing",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "LinearOrderedSemifield.toSemifield",
   "LinearOrderedRing.toStrictOrderedRing",
   "DivisionRing.toRing",
   "CommRing.toNonUnitalCommRing",
   "LinearOrderedField.toLinearOrderedCommRing",
   "Eq.refl",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "AddMonoid.toAddZeroClass",
   "sub_lt_iff_lt_add",
   "NonAssocSemiring.toMulZeroOneClass",
   "Int.floor",
   "IsCancelAdd.toIsRightCancelAdd",
   "LinearOrderedField.toDiv",
   "Field.toCommRing",
   "Zero.toOfNat0",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "one_add_mul",
   "LinearOrderedField",
   "Preorder.toLT",
   "Ring.toSub",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Eq.symm",
   "AddCommMonoid.toAddCommSemigroup",
   "id",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "instHAdd",
   "HSub.hSub",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.toSemiring",
   "AddGroup.toSubNegMonoid",
   "DivisionSemiring.toSemiring",
   "LinearOrderedSemifield.toDiv",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "LinearOrderedField.toField",
   "OrderedCommSemiring.toOrderedSemiring",
   "SubNegMonoid.toAddMonoid",
   "HMul.hMul",
   "Semifield.toDivisionSemiring"],
  "name": "Int.sub_floor_div_mul_lt",
  "constType":
  "∀ {k : Type u_4} [inst : LinearOrderedField k] [inst_1 : FloorRing k] {b : k} (a : k), 0 < b → a - ↑⌊a / b⌋ * b < b",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Subtype.val",
   "Set",
   "upper_half_plane_isOpen",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "Set.instMembershipSet",
   "Eq",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Eisenstein_tsum",
   "Set.Elem",
   "EisensteinSeries.eisensteinSeriesRestrict",
   "UpperHalfPlane.upperHalfSpace",
   "Complex",
   "UniformSpace.toTopologicalSpace",
   "Int",
   "Subtype"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.EisensteinSeries.eisensteinSeriesRestrict._eq_1",
  "constType":
  "∀ (k : ℤ) (A B : ℝ) (x : ↑(EisensteinSeries.upperHalfSpaceSlice A B)),\n  EisensteinSeries.eisensteinSeriesRestrict k A B x = Eisenstein_tsum k ↑x",
  "constCategory": "Theorem"},
 {"references":
  ["Lean.SourceInfo.none",
   "Bool.false",
   "Bool.true",
   "Unit",
   "Lean.SourceInfo.fromRef.match_2",
   "Lean.Syntax.getTailPos?",
   "Lean.SourceInfo.fromRef.match_1",
   "Lean.SourceInfo",
   "Bool",
   "Lean.SourceInfo.synthetic",
   "optParam",
   "Lean.Syntax",
   "Lean.Syntax.getPos?",
   "String.Pos",
   "Option"],
  "name": "Lean.SourceInfo.fromRef",
  "constType": "Lean.Syntax → optParam Bool false → Lean.SourceInfo",
  "constCategory": "Definition"},
 {"references":
  ["List.cons",
   "_obj",
   "List.nil",
   "_neutral",
   "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_6"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_7._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup.toAddCommGroup",
   "NontriviallyNormedField",
   "NormedAddCommGroup",
   "nhds",
   "NontriviallyNormedField.toNormedField",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "Field.toSemifield",
   "AddCommGroup.toAddCommMonoid",
   "NormedSpace",
   "RingHom.id",
   "NormedField.toField",
   "DivisionSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "ContinuousLinearMap",
   "HasFDerivAtFilter",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Semifield.toDivisionSemiring",
   "NormedSpace.toModule",
   "UniformSpace.toTopologicalSpace"],
  "name": "HasFDerivAt",
  "constType":
  "{𝕜 : Type u_1} →\n  [inst : NontriviallyNormedField 𝕜] →\n    {E : Type u_2} →\n      [inst_1 : NormedAddCommGroup E] →\n        [inst_2 : NormedSpace 𝕜 E] →\n          {F : Type u_3} →\n            [inst_3 : NormedAddCommGroup F] → [inst_4 : NormedSpace 𝕜 F] → (E → F) → (E →L[𝕜] F) → E → Prop",
  "constCategory": "Definition"},
 {"references": ["Ring", "Neg"],
  "name": "Ring.toNeg",
  "constType": "{R : Type u} → [self : Ring R] → Neg R",
  "constCategory": "Definition"},
 {"references": ["SeminormedRing", "SeminormedCommRing"],
  "name": "SeminormedCommRing.toSeminormedRing",
  "constType":
  "{α : Type u_5} → [self : SeminormedCommRing α] → SeminormedRing α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "PartialEquiv.source",
   "PartialHomeomorph.toPartialEquiv",
   "eq_true",
   "Set",
   "chartAt",
   "ChartedSpace",
   "TopologicalSpace",
   "mem_chart_source",
   "True",
   "Eq",
   "Set.instMembershipSet"],
  "name": "Mathlib.Geometry.Manifold.ChartedSpace._auxLemma.5",
  "constType":
  "∀ (H : Type u_5) {M : Type u_6} [inst : TopologicalSpace H] [inst_1 : TopologicalSpace M] [inst_2 : ChartedSpace H M]\n  (x : M), (x ∈ (chartAt H x).toPartialEquiv.source) = True",
  "constCategory": "Theorem"},
 {"references":
  ["outParam",
   "MonadExcept",
   "tryCatchThe",
   "MonadExcept.mk",
   "throwThe",
   "MonadExceptOf"],
  "name": "instMonadExcept",
  "constType":
  "(ε : outParam (Type u)) → (m : Type v → Type w) → [inst : MonadExceptOf ε m] → MonadExcept ε m",
  "constCategory": "Definition"},
 {"references":
  ["LE.mk",
   "Nat.linearOrder.proof_1",
   "Nat.le",
   "LinearOrder",
   "PartialOrder.toPreorder",
   "PartialOrder.mk",
   "Nat.decLt",
   "Nat.lt",
   "LT.mk",
   "Nat.instMaxNat",
   "LE.le",
   "instDecidableEqNat",
   "Preorder.toLE",
   "Nat.lt_iff_le_not_le",
   "Preorder.mk",
   "Nat.le_total",
   "inferInstance",
   "Nat.linearOrder.proof_3",
   "DecidableEq",
   "Preorder.toLT",
   "LT.lt",
   "Nat.linearOrder.proof_2",
   "LinearOrder.mk",
   "Nat.le_refl",
   "Nat.le_trans",
   "instOrdNat",
   "Nat",
   "Nat.le_antisymm",
   "instMinNat",
   "Nat.decLe",
   "DecidableRel"],
  "name": "Nat.linearOrder",
  "constType": "LinearOrder ℕ",
  "constCategory": "Definition"},
 {"references": ["Real", "Real.wrapped._@.Mathlib.Data.Real.Basic._hyg.3933"],
  "name": "_private.Mathlib.Data.Real.Basic.0.Real.lt",
  "constType": "ℝ → ℝ → Prop",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Nonempty",
  "constType": "Sort u → Prop",
  "constCategory": "Other"},
 {"references": ["LE", "Preorder"],
  "name": "Preorder.toLE",
  "constType": "{α : Type u} → [self : Preorder α] → LE α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "upper_half_plane_isOpen",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Coe",
   "UpperHalfPlane",
   "Complex",
   "UpperHalfPlane.upperHalfSpace",
   "Coe.mk",
   "UniformSpace.toTopologicalSpace",
   "Subtype"],
  "name":
  "EisensteinSeries.instCoeForAllUpperHalfPlaneComplexForAllSubtypeMemOpensToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexInstMembershipInstSetLikeOpensMkUpperHalfSpaceUpper_half_plane_isOpen._cstage1",
  "constType":
  "Coe (UpperHalfPlane → ℂ) (↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ)",
  "constCategory": "Definition"},
 {"references":
  ["PartialHomeomorph.toPartialEquiv",
   "PartialHomeomorph",
   "TopologicalSpace",
   "PartialEquiv.toFun"],
  "name": "PartialHomeomorph.toFun'",
  "constType":
  "{α : Type u_1} →\n  {β : Type u_2} → [inst : TopologicalSpace α] → [inst_1 : TopologicalSpace β] → PartialHomeomorph α β → α → β",
  "constCategory": "Definition"},
 {"references":
  ["AddGroupWithOne.toAddMonoidWithOne",
   "AddMonoid.toAddSemigroup",
   "AddSemigroup.toAdd",
   "instHAdd",
   "AddGroupWithOne.toIntCast",
   "Int.cast",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne",
   "Int.cast_add",
   "Eq.symm",
   "Int",
   "Eq",
   "Int.instAddInt"],
  "name": "Mathlib.Data.Int.Cast.Basic._auxLemma.7",
  "constType":
  "∀ {R : Type u} [inst : AddGroupWithOne R] (m n : ℤ), ↑m + ↑n = ↑(m + n)",
  "constCategory": "Theorem"},
 {"references": ["MulOneClass", "MulZeroOneClass"],
  "name": "MulZeroOneClass.toMulOneClass",
  "constType": "{M₀ : Type u} → [self : MulZeroOneClass M₀] → MulOneClass M₀",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "mul_neg",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "sub_eq_add_neg",
   "AddMonoid.toAddZeroClass",
   "AddGroupWithOne.toAddGroup",
   "Ring.toNonAssocRing",
   "True",
   "Eq",
   "SubNegMonoid.toSub",
   "InvolutiveNeg.toNeg",
   "Ring.toSub",
   "Ring",
   "HasDistribNeg.toInvolutiveNeg",
   "Eq.trans",
   "eq_self",
   "instHSub",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "instHAdd",
   "HSub.hSub",
   "Neg.neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddGroup.toSubNegMonoid",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Distrib.leftDistribClass",
   "instHMul",
   "of_eq_true",
   "SubNegMonoid.toAddMonoid",
   "HMul.hMul",
   "congr",
   "congrArg",
   "left_distrib"],
  "name": "CancelDenoms.sub_subst",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {n e1 e2 t1 t2 : α}, n * e1 = t1 → n * e2 = t2 → n * (e1 - e2) = t1 - t2",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "inferInstance",
   "CommRing.toNonUnitalCommRing",
   "Real",
   "Real.commRing",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "AddCommMonoid"],
  "name": "Real.instAddCommMonoidReal",
  "constType": "AddCommMonoid ℝ",
  "constCategory": "Definition"},
 {"references":
  ["IsROrC.innerProductSpace",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "OfNat.ofNat",
   "PartialHomeomorph.toPartialEquiv",
   "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.3",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "upper_half_plane_isOpen",
   "dite",
   "PartialHomeomorph.toFun'",
   "Metric.isOpen_iff",
   "SetLike.instMembership",
   "ite",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "PartialEquiv.trans_refl",
   "Set.Elem",
   "Continuous",
   "NormedField.toNormedSpace",
   "DifferentiableWithinAt",
   "ChartedSpace.chartAt",
   "Filter",
   "UpperHalfPlane.upperHalfSpace",
   "Metric.ball",
   "IsOpen",
   "Eq.trans",
   "Subtype",
   "Subtype.coe_eta",
   "MDifferentiableAt",
   "MDifferentiable",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "dif_pos",
   "Classical.propDecidable",
   "eq_of_heq",
   "Function.comp",
   "PseudoMetricSpace.toUniformSpace",
   "ContinuousAt",
   "HasSubset.Subset",
   "PartialEquiv.refl",
   "Eq.mpr_prop",
   "PartialHomeomorph.symm",
   "Set.instMembershipSet",
   "PartialEquiv",
   "DifferentiableOn.differentiableAt",
   "InnerProductSpace.toNormedSpace",
   "And",
   "Std.Classes.Order._auxLemma.4",
   "TopologicalSpace.Opens.carrier",
   "HEq.refl",
   "propext",
   "LT.lt",
   "HEq.casesOn",
   "Eq.mp",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "congr",
   "Not",
   "dite_eq_ite",
   "And.intro",
   "PartialEquiv.symm",
   "congrArg",
   "ContinuousOn",
   "SetLike.coe",
   "congrFun",
   "Exists",
   "TopologicalSpace.Opens",
   "HEq",
   "Subtype.val",
   "Real",
   "Set",
   "EisensteinSeries.ext_chart",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "IsHolomorphicOn",
   "dite_congr",
   "heq_of_eq",
   "TopologicalSpace.Opens.mk",
   "isHolomorphicOn_iff_differentiableOn",
   "Subtype.property",
   "Zero.toOfNat0",
   "Set.range",
   "TopologicalSpace.Opens.instChartedSpace",
   "Complex.instIsROrCComplex",
   "forall_congr",
   "TopologicalSpace",
   "DifferentiableOn.continuousOn",
   "PartialEquiv.toFun",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "DifferentiableOn.congr",
   "instMembershipSetFilter",
   "id",
   "Membership.mem",
   "funext",
   "Real.instLTReal",
   "nhds",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "extendByZero",
   "continuousOn_iff_continuous_restrict",
   "chartAt",
   "NormedField.toNormedCommRing",
   "chartedSpaceSelf",
   "Set.univ",
   "GT.gt",
   "Continuous.continuousAt",
   "Set.restrict",
   "Real.instZeroReal",
   "NormedCommRing.toSeminormedCommRing",
   "DifferentiableAt",
   "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.2",
   "Set.instHasSubsetSet",
   "Eq.ndrec",
   "Set.range_id",
   "letFun",
   "instTopologicalSpaceSubtype",
   "Complex",
   "Eq.casesOn",
   "Complex.instNormedAddCommGroupComplex",
   "PartialEquiv.trans",
   "Subtype.mk",
   "modelWithCornersSelf",
   "DenselyNormedField.toNontriviallyNormedField"],
  "name": "EisensteinSeries.holo_to_mdiff",
  "constType":
  "∀ (f : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ),\n  IsHolomorphicOn f → MDifferentiable (modelWithCornersSelf ℂ ℂ) (modelWithCornersSelf ℂ ℂ) f",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "AddZeroClass.toAdd",
   "Distrib.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommGroup.toDivisionAddCommMonoid",
   "add_comm",
   "instHAdd",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "Neg.neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddMonoid.toAddZeroClass",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommMagma.toAdd",
   "True",
   "Ring.toNonAssocRing",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Ring.toNeg",
   "Eq.ndrec",
   "of_eq_true",
   "SubtractionMonoid.toSubNegMonoid",
   "SubNegMonoid.toAddMonoid",
   "Ring",
   "Ring.toAddCommGroup",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "congrArg",
   "AddCommMonoid.toAddCommSemigroup",
   "Eq.trans",
   "neg_add_rev",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.neg_add",
  "constType":
  "∀ {R : Type u_1} [inst : Ring R] {a₁ a₂ b₁ b₂ : R}, -a₁ = b₁ → -a₂ = b₂ → -(a₁ + a₂) = b₁ + b₂",
  "constCategory": "Theorem"},
 {"references": ["maxOfLe", "instLENat", "Max", "Nat", "Nat.decLe"],
  "name": "Nat.instMaxNat",
  "constType": "Max ℕ",
  "constCategory": "Definition"},
 {"references": ["Exists", "instHAdd", "HAdd.hAdd", "Add", "Eq"],
  "name": "Even",
  "constType": "{α : Type u_2} → [inst : Add α] → α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Neg.toHasAbs",
   "DivisionRing.toRing",
   "Real",
   "Rat",
   "Rat.instLinearOrderedRingRat",
   "Real.ofCauchy",
   "Abs.abs",
   "Rat.instSupRat",
   "instHMul",
   "IsAbsoluteValue.abs_isAbsoluteValue",
   "Rat.divisionRing",
   "Real.definition.match_1._@.Mathlib.Data.Real.Basic._hyg.827",
   "Rat.instNegRat",
   "CauSeq.Completion.Cauchy",
   "HMul.hMul",
   "CauSeq.Completion.instMulCauchy",
   "Rat.instLinearOrderedFieldRat"],
  "name": "Real.definition._@.Mathlib.Data.Real.Basic._hyg.1157",
  "constType": "ℝ → ℝ → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "AddGroupWithOne.toAddMonoidWithOne",
   "StrictOrderedSemiring.to_charZero",
   "Ring.toAddGroupWithOne",
   "Real.strictOrderedSemiring",
   "Real",
   "instNontrivial",
   "Real.instRingReal",
   "Nontrivial"],
  "name": "Real.nontrivial",
  "constType": "Nontrivial ℝ",
  "constCategory": "Definition"},
 {"references": ["False", "Not"],
  "name": "Not.intro",
  "constType": "∀ {a : Prop}, (a → False) → ¬a",
  "constCategory": "Theorem"},
 {"references":
  ["DivisionCommMonoid.mk",
   "DivisionMonoid",
   "DivisionMonoid.mul_inv_rev",
   "CommGroupWithZero.toGroupWithZero",
   "DivisionMonoid.inv_inv",
   "CommGroupWithZero",
   "GroupWithZero.toDivisionMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionCommMonoid",
   "DivisionMonoid.mk",
   "DivisionMonoid.inv_eq_of_mul",
   "CommGroupWithZero.toDivisionCommMonoid.proof_1"],
  "name": "CommGroupWithZero.toDivisionCommMonoid",
  "constType":
  "{G₀ : Type u_3} → [inst : CommGroupWithZero G₀] → DivisionCommMonoid G₀",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Lean.ParserDescr",
  "constType": "Type",
  "constCategory": "Other"},
 {"references": ["OrderedAddCommMonoid", "CanonicallyOrderedAddCommMonoid"],
  "name": "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
  "constType":
  "{α : Type u_1} → [self : CanonicallyOrderedAddCommMonoid α] → OrderedAddCommMonoid α",
  "constCategory": "Definition"},
 {"references": ["UniformSpace", "TopologicalSpace"],
  "name": "UniformSpace.toTopologicalSpace",
  "constType": "{α : Type u} → [self : UniformSpace α] → TopologicalSpace α",
  "constCategory": "Definition"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Eq.refl",
   "Eq",
   "PProd",
   "OneHomClass.toFunLike",
   "Eq.mpr",
   "instHPow",
   "PUnit",
   "MonoidHomClass.toOneHomClass",
   "map_mul",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "Nat.succ",
   "id",
   "HPow.hPow",
   "Nat.below",
   "Nat.brecOn",
   "Monoid",
   "instAddNat",
   "MonoidHomClass.toMulHomClass",
   "MulOneClass.toOne",
   "instHAdd",
   "Unit",
   "map_one",
   "MulHomClass.toFunLike",
   "One.toOfNat1",
   "FunLike.coe",
   "Monoid.toMulOneClass",
   "pow_zero",
   "instHMul",
   "MonoidHomClass",
   "Nat.rec",
   "PProd.fst",
   "map_pow.match_1",
   "Eq.ndrec",
   "HMul.hMul",
   "pow_succ"],
  "name": "map_pow",
  "constType":
  "∀ {G : Type u_6} {H : Type u_7} {F : Type u_8} [inst : Monoid G] [inst_1 : Monoid H] [inst_2 : MonoidHomClass F G H]\n  (f : F) (a : G) (n : ℕ), f (a ^ n) = f a ^ n",
  "constCategory": "Theorem"},
 {"references": ["Complex.im", "Real", "UpperHalfPlane.coe", "UpperHalfPlane"],
  "name": "UpperHalfPlane.im",
  "constType": "UpperHalfPlane → ℝ",
  "constCategory": "Definition"},
 {"references": ["eq_true", "Iff", "Iff.rfl", "True", "Eq"],
  "name": "iff_self",
  "constType": "∀ (p : Prop), (p ↔ p) = True",
  "constCategory": "Theorem"},
 {"references":
  ["RingHom.id.proof_1",
   "RingHom",
   "RingHom.id.proof_3",
   "MulZeroOneClass.toMulOneClass",
   "MulOneClass.toOne",
   "OneHom.mk",
   "MonoidHom.mk",
   "RingHom.id.proof_4",
   "NonAssocSemiring.toMulZeroOneClass",
   "RingHom.mk",
   "RingHom.id.proof_2",
   "NonAssocSemiring",
   "id"],
  "name": "RingHom.id",
  "constType": "(α : Type u_5) → [inst : NonAssocSemiring α] → α →+* α",
  "constCategory": "Definition"},
 {"references":
  ["cond.match_1",
   "Lean.Name.mkStr",
   "List.cons",
   "Lean.Name.instBEqName",
   "Lean.MacroScopesView",
   "Unit",
   "Lean.MacroScopesView.review",
   "Lean.Name.hasMacroScopes",
   "Lean.MacroScopesView.mainModule",
   "Lean.MacroScopesView.name",
   "List.foldl",
   "Lean.MacroScope",
   "BEq.beq",
   "Lean.Name.mkNum",
   "Lean.MacroScopesView.mk",
   "List.nil",
   "Bool",
   "Lean.MacroScopesView.imported",
   "Lean.Name.appendCore",
   "Lean.Name",
   "Lean.extractMacroScopes",
   "Nat",
   "Lean.MacroScopesView.scopes"],
  "name": "Lean.addMacroScope",
  "constType": "Lean.Name → Lean.Name → Lean.MacroScope → Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "PartialOrder.toPreorder",
   "LT.lt.le",
   "instHAdd",
   "HAdd.hAdd",
   "LE.le",
   "Preorder.toLE",
   "Iff.mpr",
   "LT.lt.ne",
   "PartialOrder",
   "CovariantClass.elim",
   "Function.swap",
   "LE.le.lt_of_ne",
   "Preorder.toLT",
   "LT.lt",
   "add_ne_add_left",
   "IsRightCancelAdd",
   "CovariantClass",
   "Add",
   "CovariantClass.mk"],
  "name": "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
  "constType":
  "∀ (N : Type u_2) [inst : Add N] [inst_1 : IsRightCancelAdd N] [inst_2 : PartialOrder N]\n  [inst_3 : CovariantClass N N (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1],\n  CovariantClass N N (Function.swap fun x x_1 => x + x_1) fun x x_1 => x < x_1",
  "constCategory": "Definition"},
 {"references":
  ["Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "OfNat.ofNat",
   "FunLike",
   "Matrix.SpecialLinearGroup",
   "instDecidableEqFin",
   "Subgroup",
   "Complex",
   "UpperHalfPlane",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin",
   "SlashInvariantFormClass"],
  "name": "SlashInvariantFormClass.toFunLike",
  "constType":
  "{F : Type u_1} →\n  {Γ : outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ))} →\n    {k : outParam ℤ} → [self : SlashInvariantFormClass F Γ k] → FunLike F UpperHalfPlane fun x => ℂ",
  "constCategory": "Definition"},
 {"references": ["Subtype"],
  "name": "Subtype.val",
  "constType": "{α : Sort u} → {p : α → Prop} → Subtype p → α",
  "constCategory": "Definition"},
 {"references": ["String", "Lean.Name", "Lean.Name.str"],
  "name": "Lean.Name.mkStr",
  "constType": "Lean.Name → String → Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "ModularFormClass",
   "SlashInvariantFormClass.mk",
   "ModularForm.holo'",
   "SlashInvariantForm.toFun",
   "FunLike.mk",
   "instDecidableEqFin",
   "Fin.fintype",
   "ModularForm.bdd_at_infty'",
   "ModularForm",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "ModularFormClass.modularForm.proof_2",
   "Matrix.SpecialLinearGroup",
   "ModularFormClass.mk",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Complex",
   "Nat",
   "ModularFormClass.modularForm.proof_1",
   "Int",
   "ModularForm.toSlashInvariantForm",
   "Fin",
   "Int.instCommRingInt"],
  "name": "ModularFormClass.modularForm",
  "constType":
  "(Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) → (k : ℤ) → ModularFormClass (ModularForm Γ k) Γ k",
  "constCategory": "Definition"},
 {"references": ["Inv"],
  "name": "Inv.inv",
  "constType": "{α : Type u} → [self : Inv α] → α → α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Set",
   "TopologicalSpace",
   "ContinuousWithinAt",
   "Set.instMembershipSet"],
  "name": "ContinuousOn",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → [inst : TopologicalSpace α] → [inst : TopologicalSpace β] → (α → β) → Set α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "PosMulMono",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocSemiring.toMul",
   "LE.le",
   "Preorder.toLE",
   "Subtype.property",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "OrderedSemiring.mul_le_mul_of_nonneg_left",
   "CovariantClass.mk",
   "MonoidWithZero.toZero",
   "Subtype",
   "OrderedSemiring.toPartialOrder"],
  "name": "OrderedSemiring.toPosMulMono",
  "constType": "∀ {α : Type u} [inst : OrderedSemiring α], PosMulMono α",
  "constCategory": "Definition"},
 {"references":
  ["DivisionMonoid",
   "DivInvOneMonoid",
   "DivInvOneMonoid.mk",
   "DivisionMonoid.toDivInvOneMonoid.proof_1",
   "DivInvMonoid.zpow_succ'",
   "DivInvMonoid.zpow_zero'",
   "DivisionMonoid.toDivInvMonoid",
   "DivInvMonoid",
   "DivInvMonoid.div_eq_mul_inv",
   "DivInvMonoid.mk",
   "DivInvMonoid.toMonoid",
   "DivInvMonoid.zpow_neg'",
   "DivInvMonoid.zpow",
   "DivInvMonoid.toDiv",
   "DivInvMonoid.toInv"],
  "name": "DivisionMonoid.toDivInvOneMonoid",
  "constType": "{α : Type u_1} → [inst : DivisionMonoid α] → DivInvOneMonoid α",
  "constCategory": "Definition"},
 {"references": ["Field", "Div"],
  "name": "Field.toDiv",
  "constType": "{K : Type u} → [self : Field K] → Div K",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "eq_self",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "instHAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq",
   "Zero.toOfNat0",
   "zero_add",
   "AddZeroClass.toZero",
   "Semiring.toNonAssocSemiring",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "CommSemiring.toCommMonoidWithZero",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.add_pf_zero_add",
  "constType": "∀ {R : Type u_1} [inst : CommSemiring R] (b : R), 0 + b = b",
  "constCategory": "Theorem"},
 {"references":
  ["And",
   "MetricSpace",
   "CompleteSpace",
   "SecondCountableTopology",
   "PseudoMetricSpace.toUniformSpace",
   "TopologicalSpace",
   "MetricSpace.toPseudoMetricSpace",
   "And.intro",
   "Exists.intro",
   "PolishSpace",
   "UniformSpace.toTopologicalSpace",
   "rfl",
   "Eq",
   "PolishSpace.mk"],
  "name": "polishSpace_of_complete_second_countable",
  "constType":
  "∀ {α : Type u_1} [m : MetricSpace α] [inst : SecondCountableTopology α] [h' : CompleteSpace α], PolishSpace α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
   "propext",
   "Disjoint",
   "Finset",
   "Not",
   "Finset.instMembershipFinset",
   "Finset.partialOrder",
   "Finset.disjoint_left",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.2",
  "constType":
  "∀ {α : Type u_1} {s t : Finset α}, Disjoint s t = ∀ ⦃a : α⦄, a ∈ s → a ∉ t",
  "constCategory": "Theorem"},
 {"references": ["trivial", "Decidable", "Decidable.isTrue", "True"],
  "name": "instDecidableTrue",
  "constType": "Decidable True",
  "constCategory": "Definition"},
 {"references":
  ["NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "nhds",
   "NontriviallyNormedField.toNormedField",
   "PseudoMetricSpace.toUniformSpace",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "SeminormedRing.toPseudoMetricSpace",
   "HasDerivAtFilter",
   "NormedField.toNormedCommRing",
   "UniformSpace.toTopologicalSpace",
   "NormedSpace"],
  "name": "HasDerivAt",
  "constType":
  "{𝕜 : Type u} →\n  [inst : NontriviallyNormedField 𝕜] →\n    {F : Type v} → [inst_1 : NormedAddCommGroup F] → [inst : NormedSpace 𝕜 F] → (𝕜 → F) → F → 𝕜 → Prop",
  "constCategory": "Definition"},
 {"references": ["StrictOrderedCommSemiring", "LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
  "constType":
  "{α : Type u_2} → [self : LinearOrderedCommSemiring α] → StrictOrderedCommSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "OfNat.ofNat",
   "Iff",
   "neg_zero",
   "InvolutiveNeg.toNeg",
   "Function.Injective.eq_iff'",
   "neg_injective",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "SubtractionMonoid.toInvolutiveNeg",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Eq"],
  "name": "neg_eq_zero",
  "constType":
  "∀ {α : Type u_1} [inst : SubtractionMonoid α] {a : α}, -a = 0 ↔ a = 0",
  "constCategory": "Theorem"},
 {"references": ["outParam", "HPow"],
  "name": "HPow.hPow",
  "constType":
  "{α : Type u} → {β : Type v} → {γ : outParam (Type w)} → [self : HPow α β γ] → α → β → γ",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Int.instMulInt",
   "Prod.snd",
   "EisensteinSeries.MoebiusPerm.proof_1",
   "Subtype.val",
   "instHAdd",
   "HAdd.hAdd",
   "instDecidableEqFin",
   "One.toOfNat1",
   "Fin.fintype",
   "Prod.fst",
   "Eq",
   "Int.instAddInt",
   "Semiring.toOne",
   "Matrix.det",
   "CommRing.toCommSemiring",
   "instHMul",
   "Matrix.SpecialLinearGroup",
   "Prod.mk",
   "Matrix",
   "Fin.instOfNatFin",
   "HMul.hMul",
   "instOfNatNat",
   "Prod",
   "Nat",
   "Int",
   "Fin",
   "Int.instCommRingInt"],
  "name": "EisensteinSeries.MoebiusPerm",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ → ℤ × ℤ → ℤ × ℤ",
  "constCategory": "Definition"},
 {"references": ["outParam", "HSMul"],
  "name": "HSMul.hSMul",
  "constType":
  "{α : Type u} → {β : Type v} → {γ : outParam (Type w)} → [self : HSMul α β γ] → α → β → γ",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "StrictOrderedSemiring",
   "Real.strictOrderedCommSemiring",
   "Real",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring"],
  "name": "Real.strictOrderedSemiring",
  "constType": "StrictOrderedSemiring ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "RingHom.instRingHomClass",
   "CommSemiring.toSemiring",
   "zpowRec",
   "MulOneClass.toMul",
   "Complex.inv_zero",
   "instHSMul",
   "MulZeroOneClass.toMulOneClass",
   "Real.instAddMonoidReal",
   "NonUnitalRingHomClass.toMulHomClass",
   "Complex.instRatCastComplex",
   "Complex.instField.proof_9",
   "Complex.instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "Semiring.toNonAssocSemiring",
   "DistribSMul.toSMulZeroClass",
   "Semiring.npow",
   "Complex.instField.proof_6",
   "Div.mk",
   "Field",
   "Complex.normSq",
   "HSMul.hSMul",
   "MonoidWithZeroHom",
   "Semigroup.mk",
   "Complex.instNontrivialComplex",
   "Complex.commRing",
   "Rat.distribSMul",
   "Complex.instSMulRealComplex",
   "Field.mk",
   "Complex.instField.proof_11",
   "Complex.instField.proof_10",
   "SMulZeroClass.toSMul",
   "instHMul",
   "Complex.instField.proof_5",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommRing.toRing",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Inv.inv",
   "RingHom",
   "Monoid.mk",
   "_private.Mathlib.Data.Real.Basic.0.Real.inv'",
   "Real",
   "Complex.mul_inv_cancel",
   "Complex.instField.proof_4",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "AddMonoid.toAddZeroClass",
   "Complex.instInvComplex",
   "Complex.instField.proof_8",
   "NonAssocSemiring.toMulZeroOneClass",
   "Complex.instField.proof_1",
   "Inv.mk",
   "RingHomClass.toNonUnitalRingHomClass",
   "Complex.instSemiringComplex",
   "starRingEnd",
   "Complex.ofReal'",
   "Complex.instCommSemiringComplex",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "Complex.instField.proof_7",
   "MonoidHomClass.toMulHomClass",
   "Rat",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "Complex.instField.proof_2",
   "NonUnitalNonAssocSemiring.toMul",
   "DivInvMonoid.div'",
   "Ring.toSemiring",
   "Real.instDivisionRingReal",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Real.semiring",
   "HMul.hMul",
   "Complex",
   "Complex.instMulComplex",
   "Complex.instField.proof_3"],
  "name": "Complex.instField",
  "constType": "Field ℂ",
  "constCategory": "Definition"},
 {"references": ["SubNegMonoid", "Sub"],
  "name": "SubNegMonoid.toSub",
  "constType": "{G : Type u} → [self : SubNegMonoid G] → Sub G",
  "constCategory": "Definition"},
 {"references":
  ["Equiv",
   "OfNat.ofNat",
   "EisensteinSeries.MoebiusPerm_left_inv",
   "instDecidableEqFin",
   "Fin.fintype",
   "Matrix.SpecialLinearGroup",
   "Matrix.SpecialLinearGroup.hasInv",
   "EisensteinSeries.MoebiusPerm_right_inv",
   "Equiv.mk",
   "instOfNatNat",
   "Prod",
   "Nat",
   "EisensteinSeries.MoebiusPerm",
   "Int",
   "Fin",
   "Int.instCommRingInt",
   "Inv.inv"],
  "name": "EisensteinSeries.MoebiusEquiv",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ → ℤ × ℤ ≃ ℤ × ℤ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "DivisionRing.toDivisionSemiring",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "DivisionRing.toRing",
   "GroupWithZero.toDivisionMonoid",
   "Semiring.toMonoidWithZero",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "Ring.toNonAssocRing",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "mul_inv_rev",
   "InvOneClass.toInv",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "HPow.hPow",
   "inv_pow",
   "NonUnitalNonAssocRing.toMul",
   "DivisionRing",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "One.toOfNat1",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "DivisionRing.toInv",
   "DivInvMonoid.toInv",
   "DivisionSemiring.toSemiring",
   "instHMul",
   "Eq.ndrec",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvMonoid",
   "congr",
   "HMul.hMul",
   "mul_one",
   "congrArg",
   "DivisionMonoid.toDivInvOneMonoid",
   "Inv.inv"],
  "name": "Mathlib.Tactic.Ring.inv_mul",
  "constType":
  "∀ {R : Type u_1} [inst : DivisionRing R] {a₁ : R} {a₂ : ℕ} {a₃ b₁ b₃ c : R},\n  a₁⁻¹ = b₁ → a₃⁻¹ = b₃ → b₃ * (b₁ ^ a₂ * Nat.rawCast 1) = c → (a₁ ^ a₂ * a₃)⁻¹ = c",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Exists",
   "OfNat.ofNat",
   "instOfNatInt",
   "Real",
   "Real.instLEReal",
   "CanLift.prf",
   "pow_le_pow_left",
   "DivInvMonoid.Pow",
   "Real.orderedSemiring",
   "Exists.casesOn",
   "LE.le",
   "Eq",
   "Real.instDivisionRingReal",
   "Zero.toOfNat0",
   "Real.instZeroReal",
   "Eq.ndrec",
   "Nat.cast",
   "instNatCastInt",
   "instHPow",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Nat",
   "DivisionRing.toDivInvMonoid",
   "Int",
   "Int.instLEInt"],
  "name": "EisensteinSeries.sdf",
  "constType": "∀ (a b : ℝ) (k : ℤ), 0 ≤ k → 0 ≤ a → a ≤ b → a ^ k ≤ b ^ k",
  "constCategory": "Theorem"},
 {"references": ["Zero", "OfNat.ofNat", "OfNat", "Zero.mk"],
  "name": "Zero.ofOfNat0",
  "constType": "{α : Type u_1} → [inst : OfNat α 0] → Zero α",
  "constCategory": "Definition"},
 {"references":
  ["Zero",
   "OfNat.ofNat",
   "ModularForm.instZero.proof_2",
   "instDecidableEqFin",
   "Fin.fintype",
   "ModularForm",
   "ModularForm.mk",
   "Zero.toOfNat0",
   "ModularForm.instZero.proof_1",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Matrix.SpecialLinearGroup",
   "SlashInvariantForm",
   "Subgroup",
   "Zero.mk",
   "SlashInvariantForm.instZero",
   "instOfNatNat",
   "Nat",
   "Int",
   "Fin",
   "Int.instCommRingInt"],
  "name": "ModularForm.instZero",
  "constType":
  "{Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)} → {k : ℤ} → Zero (ModularForm Γ k)",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Lean.Name",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["Equiv",
   "CommMonoidWithZero.toZero",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "CommRing.toNonUnitalCommRing",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "One.toOfNat1",
   "LinearMap.instFunLike",
   "FunLike.coe",
   "RingHom.id",
   "CommRing",
   "Pi.single",
   "Equiv.instFunLikeEquiv",
   "Semiring.toOne",
   "Matrix.cramer",
   "CommRing.toCommSemiring",
   "Fintype",
   "Semiring.toNonAssocSemiring",
   "Pi.addCommMonoid",
   "DecidableEq",
   "Matrix.of",
   "Matrix",
   "Matrix.transpose",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "CommSemiring.toCommMonoidWithZero",
   "Pi.module",
   "LinearMap",
   "Semiring.toModule",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring"],
  "name": "Matrix.adjugate",
  "constType":
  "{n : Type v} →\n  {α : Type w} → [inst : DecidableEq n] → [inst : Fintype n] → [inst : CommRing α] → Matrix n n α → Matrix n n α",
  "constCategory": "Definition"},
 {"references":
  ["Int.ofNat",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "AddGroupWithOne.toIntCast",
   "NonAssocSemiring.toMulZeroOneClass",
   "Ring.toNonAssocRing",
   "True",
   "Semiring.toNatCast",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Ring",
   "instOfNatNat",
   "Nat",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "NonUnitalNonAssocRing.toMul",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Mathlib.Meta.NormNum.IsNat.to_isInt.match_1",
   "Mathlib.Meta.NormNum.IsRat",
   "One.toOfNat1",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Mathlib.Meta.NormNum.IsRat.mk",
   "Ring.toSemiring",
   "Int.cast_ofNat",
   "Semiring.toOne",
   "instHMul",
   "instNatCastInt",
   "Mathlib.Meta.NormNum.IsNat",
   "of_eq_true",
   "AddMonoidWithOne.toOne",
   "Int.cast",
   "HMul.hMul",
   "Invertible.mk",
   "mul_one",
   "congrArg",
   "Int",
   "congrFun"],
  "name": "Mathlib.Meta.NormNum.IsNat.to_isRat",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {a : α} {n : ℕ},\n  Mathlib.Meta.NormNum.IsNat a n → Mathlib.Meta.NormNum.IsRat a (Int.ofNat n) 1",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "NormedAlgebra.toAlgebra",
   "OfNat.ofNat",
   "Real",
   "Semiring.toMonoidWithZero",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "instDecidableEqFin",
   "Matrix.GeneralLinearGroup",
   "SlashAction",
   "Ring.toNonAssocRing",
   "SetLike.instMembership",
   "Matrix.SpecialLinearGroup.monoid",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Complex.instSemiringComplex",
   "SeminormedCommRing.toSeminormedRing",
   "Int.castRingHom",
   "MonoidWithZero.toMonoid",
   "Matrix",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Algebra.toSMul",
   "Subtype",
   "Int.instCommRingInt",
   "Membership.mem",
   "Complex.instCommSemiringComplex",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Matrix.SpecialLinearGroup.map",
   "ModularForm.instSlashActionIntSubtypeGeneralLinearGroupFinOfNatNatInstOfNatNatRealInstDecidableEqFinFintypeToCommRingToStrictOrderedCommRingLinearOrderedCommRingMemSubgroupInstGroupUnitsMatrixToMonoidToMonoidWithZeroSemiringToSemiringToCommSemiringInstMembershipInstSetLikeSubgroupGLPosForAllUpperHalfPlaneComplexToGroupAddMonoidToAddMonoidToAddMonoidWithOneAddGroupWithOneInstSMulToSMulInstCommSemiringComplexInstSemiringComplexToAlgebraInstNormedFieldComplexToSeminormedRingToSeminormedCommRingToNormedCommRingId",
   "Pi.instSMul",
   "Matrix.semiring",
   "AddMonoidWithOne.toAddMonoid",
   "MonoidHom.comp",
   "Fin.fintype",
   "Real.instRingReal",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Pi.addMonoid",
   "NormedCommRing.toSeminormedCommRing",
   "Units.instGroupUnits",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup",
   "Subgroup.toGroup",
   "StrictOrderedCommRing.toCommRing",
   "Real.linearOrderedCommRing",
   "Matrix.SpecialLinearGroup.toGLPos",
   "monoidHomSlashAction",
   "Matrix.GLPos",
   "Complex",
   "Group.toDivInvMonoid",
   "Int",
   "Fin",
   "NormedAlgebra.id",
   "Subgroup.instSetLikeSubgroup"],
  "name": "ModularForm.SLAction",
  "constType":
  "SlashAction ℤ (Matrix.SpecialLinearGroup (Fin 2) ℤ) (UpperHalfPlane → ℂ) ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast._at.SlashInvariantForm.instIntCastSlashInvariantFormOfNatIntInstOfNatInt._spec_1",
   "_obj",
   "Complex.mk",
   "Real.definition._@.Mathlib.Data.Real.Basic._hyg.1004",
   "Real.definition._@.Mathlib.Data.Real.Basic._hyg.1157",
   "Real.definition._@.Mathlib.Data.Real.Basic._hyg.827"],
  "name": "EisensteinSeries.trans._cstage2",
  "constType": "_obj → _obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "instHSMul",
   "Complex.instNegComplex",
   "HAdd.hAdd",
   "Real",
   "Real.instAddMonoidReal",
   "Complex.addCommGroup.proof_7",
   "Complex.addCommGroup.proof_4",
   "Sub.mk",
   "Zero.toOfNat0",
   "Complex.addCommGroup.proof_10",
   "HSMul.hSMul",
   "Complex.addCommGroup.proof_3",
   "Sub.sub",
   "Complex.addCommGroup.proof_6",
   "Complex.addCommGroup.proof_9",
   "Complex.addCommGroup.proof_1",
   "Nat",
   "Complex.addCommGroup.proof_8",
   "Add.mk",
   "AddCommGroup.mk",
   "Complex.instSubComplex",
   "Complex.instZeroComplex",
   "AddSemigroup.mk",
   "instHAdd",
   "Complex.instSMulRealComplex",
   "Complex.addCommGroup.proof_5",
   "AddGroup.mk",
   "Neg.neg",
   "Complex.instAddComplex",
   "SubNegMonoid.SMulInt",
   "AddGroup.toSubNegMonoid",
   "SubNegMonoid.mk",
   "AddMonoid.mk",
   "AddMonoid.toNatSMul",
   "Real.instAddGroupReal",
   "Zero.mk",
   "Complex",
   "AddCommGroup",
   "Complex.addCommGroup.proof_11",
   "Int",
   "Complex.addCommGroup.proof_2",
   "Neg.mk"],
  "name": "Complex.addCommGroup",
  "constType": "AddCommGroup ℂ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "id",
  "constType": "{α : Sort u} → α → α",
  "constCategory": "Definition"},
 {"references":
  ["Int.decLe",
   "LE.mk",
   "Int.le_refl",
   "LinearOrder",
   "Int.instLinearOrderInt.proof_1",
   "PartialOrder.toPreorder",
   "PartialOrder.mk",
   "Int.instLinearOrderInt.proof_2",
   "Int.decLt",
   "Int.instMaxInt",
   "LT.mk",
   "LE.le",
   "Preorder.toLE",
   "Int.instLTInt",
   "Preorder.mk",
   "Int.le_trans",
   "Int.lt_iff_le_not_le",
   "Int.instLinearOrderInt.proof_3",
   "inferInstance",
   "Int.le_antisymm",
   "Int.instDecidableEqInt",
   "DecidableEq",
   "Preorder.toLT",
   "LT.lt",
   "Int.instMinInt",
   "LinearOrder.mk",
   "instOrdInt",
   "Int.le_total",
   "Int",
   "Int.instLEInt",
   "DecidableRel"],
  "name": "Int.instLinearOrderInt",
  "constType": "LinearOrder ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Lean.Name.mkStr2",
   "«termSL(_,_)».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.7._closed_9",
   "_obj",
   "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_1"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_4._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "Finset.sum",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NormedField.toNormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NormedCommRing.toSeminormedCommRing",
   "Nat.cast",
   "instNatCastInt",
   "eise",
   "UpperHalfPlane",
   "Complex",
   "Prod",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Nat",
   "EisensteinSeries.square",
   "Int",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring"],
  "name": "EisensteinSeries.eisenSquare",
  "constType": "ℤ → ℕ → UpperHalfPlane → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Prod.snd",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "Nat.instMaxNat",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "propext",
   "Finset",
   "Max.max",
   "Prod",
   "Nat",
   "EisensteinSeries.square",
   "Int",
   "Int.natAbs",
   "EisensteinSeries.square_mem"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.10",
  "constType":
  "∀ (n : ℕ) (x : ℤ × ℤ), (x ∈ EisensteinSeries.square ↑n) = (max (Int.natAbs x.1) (Int.natAbs x.2) = n)",
  "constCategory": "Theorem"},
 {"references":
  ["Semigroup.toMul",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "MulZeroOneClass.toMulOneClass",
   "CommRing.toNonUnitalCommRing",
   "Eq.refl",
   "Semifield.toCommGroupWithZero",
   "NonAssocSemiring.toMulZeroOneClass",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Eq",
   "mul_comm",
   "Field.toCommRing",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "mul_assoc",
   "one_mul",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "DivisionCommMonoid.toDivisionMonoid",
   "Field",
   "HDiv.hDiv",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Eq.symm",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "id",
   "instHDiv",
   "NonUnitalNonAssocRing.toMul",
   "MulOneClass.toOne",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Field.toSemifield",
   "One.toOfNat1",
   "CommMagma.toMul",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Semiring.toOne",
   "SemigroupWithZero.toSemigroup",
   "DivisionSemiring.toSemiring",
   "instHMul",
   "mul_div_left_comm",
   "Eq.ndrec",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "NonUnitalSemiring.toSemigroupWithZero",
   "Semifield.toDivisionSemiring",
   "Field.toDiv"],
  "name": "CancelDenoms.div_subst",
  "constType":
  "∀ {α : Type u_1} [inst : Field α] {n1 n2 k e1 e2 t1 : α}, n1 * e1 = t1 → n2 / e2 = 1 → n1 * n2 = k → k * (e1 / e2) = t1",
  "constCategory": "Theorem"},
 {"references": ["Nat.sub", "Sub", "Nat", "Sub.mk"],
  "name": "instSubNat",
  "constType": "Sub ℕ",
  "constCategory": "Definition"},
 {"references":
  ["NormedField.toNormedDivisionRing.proof_7",
   "DivisionRing.mk",
   "NormedField.toMetricSpace",
   "NormedField.dist_eq",
   "NormedField",
   "NormedField.toNormedDivisionRing.proof_5",
   "NormedField.norm_mul'",
   "Field.toInv",
   "Field.zpow",
   "NormedField.toNormedDivisionRing.proof_8",
   "NormedField.toNorm",
   "NormedField.toNormedDivisionRing.proof_2",
   "Field.toRatCast",
   "NormedField.toNormedDivisionRing.proof_9",
   "Field.toCommRing",
   "NormedField.toField",
   "NormedField.toNormedDivisionRing.proof_1",
   "NormedField.toNormedDivisionRing.proof_6",
   "NormedField.toNormedDivisionRing.proof_3",
   "CommRing.toRing",
   "Field.toDiv",
   "NormedDivisionRing",
   "Field.qsmul",
   "NormedField.toNormedDivisionRing.proof_4",
   "NormedDivisionRing.mk"],
  "name": "NormedField.toNormedDivisionRing",
  "constType": "{α : Type u_1} → [inst : NormedField α] → NormedDivisionRing α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "ContinuousLinearMap.continuous",
   "Complex.instModule",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "Real.normedField",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "Real.pseudoMetricSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NormedField.toNormedCommRing",
   "Real.normedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "RingHom.id",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "Complex.im",
   "Complex.imClm",
   "NormedCommRing.toSeminormedCommRing",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "Continuous",
   "NormedField.toNormedSpace",
   "Real.semiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NormedSpace.toModule",
   "UniformSpace.toTopologicalSpace",
   "Real.instAddCommMonoidReal",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring"],
  "name": "Complex.continuous_im",
  "constType": "Continuous Complex.im",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "instHSub",
   "AddZeroClass.toAdd",
   "SubNegMonoid.toNeg",
   "instHAdd",
   "HAdd.hAdd",
   "HSub.hSub",
   "sub_eq_add_neg",
   "Neg.neg",
   "neg_neg",
   "SubtractionMonoid",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddMonoid.toAddZeroClass",
   "SubtractionMonoid.toInvolutiveNeg",
   "True",
   "Eq",
   "SubNegMonoid.toSub",
   "of_eq_true",
   "InvolutiveNeg.toNeg",
   "SubtractionMonoid.toSubNegMonoid",
   "SubNegMonoid.toAddMonoid",
   "congrArg",
   "NegZeroClass.toNeg",
   "Eq.trans",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "congrFun"],
  "name": "sub_neg_eq_add",
  "constType":
  "∀ {α : Type u_1} [inst : SubtractionMonoid α] (a b : α), a - -b = a + b",
  "constCategory": "Theorem"},
 {"references":
  ["OrderedCancelAddCommMonoid.toContravariantClassLeLeft",
   "OrderedCancelAddCommMonoid",
   "AddZeroClass.toAdd",
   "contravariant_lt_of_contravariant_le",
   "ContravariantClass.elim",
   "PartialOrder.toPreorder",
   "instHAdd",
   "HAdd.hAdd",
   "AddCommMonoid.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "LE.le",
   "Preorder.toLE",
   "Preorder.toLT",
   "LT.lt",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
   "ContravariantClass",
   "ContravariantClass.mk",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.toContravariantClassLeft",
  "constType":
  "∀ {α : Type u_1} [inst : OrderedCancelAddCommMonoid α],\n  ContravariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x < x_1",
  "constCategory": "Definition"},
 {"references": ["Equiv", "Equiv.refl", "Matrix"],
  "name": "Matrix.of",
  "constType":
  "{m : Type u_2} → {n : Type u_3} → {α : Type v} → (m → n → α) ≃ Matrix m n α",
  "constCategory": "Definition"},
 {"references": ["Set", "Set.Mem", "Membership.mk", "Membership"],
  "name": "Set.instMembershipSet",
  "constType": "{α : Type u_1} → Membership α (Set α)",
  "constCategory": "Definition"},
 {"references":
  ["Rat.divInt.proof_1",
   "Rat.normalize",
   "Rat",
   "Int.instNegInt",
   "Neg.neg",
   "Nat",
   "mkRat",
   "inline",
   "Nat.succ",
   "Rat.divInt.match_2",
   "Int"],
  "name": "Rat.divInt",
  "constType": "ℤ → ℤ → ℚ",
  "constCategory": "Definition"},
 {"references":
  ["List.mem_finRange",
   "Fintype",
   "Fintype.mk",
   "List.finRange",
   "List.nodup_finRange",
   "Multiset.ofList",
   "Finset.mk",
   "Nat",
   "Fin"],
  "name": "Fin.fintype",
  "constType": "(n : ℕ) → Fintype (Fin n)",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "NormedAlgebra.toAlgebra",
   "SlashAction.map",
   "instDecidableEqFin",
   "SetLike.instMembership",
   "Eq",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "Complex.instSemiringComplex",
   "SeminormedCommRing.toSeminormedRing",
   "SlashInvariantForm",
   "Subgroup",
   "UpperHalfPlane",
   "instOfNatNat",
   "Nat",
   "Algebra.toSMul",
   "Subtype",
   "Int.instCommRingInt",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Complex.instCommSemiringComplex",
   "Pi.instSMul",
   "AddMonoidWithOne.toAddMonoid",
   "Fin.fintype",
   "NormedField.toNormedCommRing",
   "Pi.addMonoid",
   "ModularForm.subgroupAction",
   "NormedCommRing.toSeminormedCommRing",
   "Matrix.SpecialLinearGroup",
   "Subgroup.toGroup",
   "Complex",
   "Int",
   "Fin",
   "NormedAlgebra.id",
   "Subgroup.instSetLikeSubgroup"],
  "name": "SlashInvariantForm.mk",
  "constType":
  "{Γ : outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ))} →\n  {k : outParam ℤ} →\n    (toFun : UpperHalfPlane → ℂ) → (∀ (γ : ↥Γ), SlashAction.map ℂ k γ toFun = toFun) → SlashInvariantForm Γ k",
  "constCategory": "Other"},
 {"references":
  ["NeZero.succ",
   "NeZero",
   "OfNat.ofNat",
   "instAddNat",
   "instHAdd",
   "Zero.ofOfNat0",
   "HAdd.hAdd",
   "instOfNatNat",
   "Nat"],
  "name": "EisensteinSeries.MoebiusPerm.proof_1",
  "constType": "NeZero (1 + 1)",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "OrderedAddCommGroup",
   "OfNat.ofNat",
   "IsCancelAdd.toIsLeftCancelAdd",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "neg_neg_iff_pos",
   "AddGroup.toSubtractionMonoid",
   "Neg.neg",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddMonoid.toAddZeroClass",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "Iff.mpr",
   "Zero.toOfNat0",
   "AddCancelMonoid.toIsCancelAdd",
   "Preorder.toLT",
   "LT.lt",
   "AddGroup.toAddCancelMonoid",
   "SubNegMonoid.toAddMonoid",
   "AddCommGroup.toAddGroup",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name": "neg_neg_of_pos",
  "constType":
  "∀ {α : Type u} [inst : OrderedAddCommGroup α] {a : α}, 0 < a → -a < 0",
  "constCategory": "Theorem"},
 {"references":
  ["MDifferentiableAt",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "NontriviallyNormedField.toNormedField",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "ChartedSpace",
   "TopologicalSpace",
   "ModelWithCorners",
   "NormedSpace"],
  "name": "MDifferentiable",
  "constType":
  "{𝕜 : Type u_1} →\n  [inst : NontriviallyNormedField 𝕜] →\n    {E : Type u_2} →\n      [inst_1 : NormedAddCommGroup E] →\n        [inst_2 : NormedSpace 𝕜 E] →\n          {H : Type u_3} →\n            [inst_3 : TopologicalSpace H] →\n              ModelWithCorners 𝕜 E H →\n                {M : Type u_4} →\n                  [inst_4 : TopologicalSpace M] →\n                    [inst_5 : ChartedSpace H M] →\n                      {E' : Type u_5} →\n                        [inst_6 : NormedAddCommGroup E'] →\n                          [inst_7 : NormedSpace 𝕜 E'] →\n                            {H' : Type u_6} →\n                              [inst_8 : TopologicalSpace H'] →\n                                ModelWithCorners 𝕜 E' H' →\n                                  {M' : Type u_7} →\n                                    [inst : TopologicalSpace M'] → [inst : ChartedSpace H' M'] → (M → M') → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Iff.rfl",
   "Set",
   "Real",
   "upper_half_plane_isOpen",
   "Real.instLEReal",
   "AbsoluteValue",
   "GE.ge",
   "SeminormedRing.toPseudoMetricSpace",
   "TopologicalSpace.Opens.mk",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "Iff",
   "UpperHalfPlane",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace",
   "Subtype",
   "Complex.ofReal'",
   "Membership.mem",
   "Complex.abs",
   "Real.instLTReal",
   "PseudoMetricSpace.toUniformSpace",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "Real.orderedSemiring",
   "LE.le",
   "SubadditiveHomClass.toFunLike",
   "Complex.re",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Complex.im",
   "Real.instZeroReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "And",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "OrderedSemiring.toSemiring",
   "Complex",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.slice_mem",
  "constType":
  "∀ (A B : ℝ) (z : UpperHalfPlane),\n  z ∈ EisensteinSeries.upperHalfSpaceSlice A B ↔ Complex.abs ↑(↑z).re ≤ A ∧ Complex.abs ↑(↑z).im ≥ B",
  "constCategory": "Theorem"},
 {"references": ["TopologicalSpace", "T3Space", "T0Space"],
  "name": "T3Space.toT0Space",
  "constType":
  "∀ {X : Type u} [inst : TopologicalSpace X] [self : T3Space X], T0Space X",
  "constCategory": "Definition"},
 {"references":
  ["NonAssocSemiring.toAddCommMonoidWithOne",
   "nsmul_eq_mul'",
   "instHSMul",
   "Nat.cast_commute",
   "AddMonoidWithOne.toAddMonoid",
   "Eq.refl",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring",
   "Eq",
   "AddMonoid.toNatSMul",
   "instHMul",
   "Eq.mpr",
   "Commute.eq",
   "Eq.ndrec",
   "Nat.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HSMul.hSMul",
   "HMul.hMul",
   "NonAssocSemiring.toNatCast",
   "Nat",
   "id"],
  "name": "nsmul_eq_mul",
  "constType":
  "∀ {R : Type u₁} [inst : NonAssocSemiring R] (n : ℕ) (a : R), n • a = ↑n * a",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "UInt8",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Subtype.val",
   "Real",
   "LT.lt",
   "UpperHalfPlane.coe",
   "Eq.refl",
   "Complex",
   "UpperHalfPlane",
   "Eq"],
  "name": "EisensteinSeries.uhc",
  "constType": "∀ (z : UpperHalfPlane), ↑z = ↑z",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "HAdd.hAdd",
   "AbsoluteValue",
   "Real",
   "Eq.refl",
   "DivInvMonoid.Pow",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "AbsEise",
   "instHPow",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "HDiv.hDiv",
   "DivisionRing.toDivInvMonoid",
   "Complex.instOneComplex",
   "HPow.hPow",
   "Complex.abs",
   "instHDiv",
   "Prod.snd",
   "Real.instLTReal",
   "instHAdd",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "Prod.fst",
   "Complex.instAddComplex",
   "FunLike.coe",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Complex.im",
   "Real.instZeroReal",
   "instHMul",
   "Int.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "Prod",
   "Field.toDiv",
   "Complex.instMulComplex",
   "NormedField.toNormedDivisionRing",
   "Int",
   "OrderedSemiring.toPartialOrder"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.AbsEise._eq_1",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane) (x : ℤ × ℤ), AbsEise k z x = Complex.abs (1 / (↑x.1 * ↑z + ↑x.2) ^ k)",
  "constCategory": "Theorem"},
 {"references": ["OrderedAddCommGroup", "PartialOrder"],
  "name": "OrderedAddCommGroup.toPartialOrder",
  "constType": "{α : Type u} → [self : OrderedAddCommGroup α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "PartialOrder.toPreorder",
   "Real.instLEReal",
   "AbsoluteValue",
   "DivInvMonoid.Pow",
   "Exists.casesOn",
   "Nat.cast_zero",
   "Preorder.toLE",
   "Real.orderedRing",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Nat.cast",
   "NormedDivisionRing.toDivisionRing",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "HPow.hPow",
   "Complex.abs",
   "Complex.instNontrivialComplex",
   "Real.instRingReal",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Real.instIsDomainRealSemiring",
   "Eq.mp",
   "congr",
   "congrArg",
   "Int",
   "NormedField.toNormedDivisionRing",
   "Int.instLEInt",
   "congrFun",
   "Exists",
   "instOfNatInt",
   "Real",
   "CanLift.prf",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "pow_le_pow_left",
   "NonAssocSemiring.toMulZeroOneClass",
   "zpow_ofNat",
   "AbsoluteValue.subadditiveHomClass",
   "Zero.toOfNat0",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "instHPow",
   "map_pow",
   "AddMonoid.toZero",
   "Monoid.toNatPow",
   "instOfNatNat",
   "OrderedRing.toOrderedSemiring",
   "Eq.symm",
   "id",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Real.instMonoidReal",
   "MonoidHomClass.toMulHomClass",
   "AddMonoidWithOne.toAddMonoid",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "DivInvMonoid.toMonoid",
   "LE.le",
   "Monoid.toMulOneClass",
   "Real.instZeroReal",
   "Real.instDivisionRingReal",
   "Eq.ndrec",
   "instNatCastInt",
   "OrderedSemiring.toSemiring",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Complex",
   "AbsoluteValue.monoidWithZeroHomClass",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.baux",
  "constType":
  "∀ (a : ℝ) (k : ℤ), 0 ≤ k → ∀ (b : ℂ), 0 ≤ a → a ≤ Complex.abs b → a ^ k ≤ Complex.abs (b ^ k)",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "Eq.refl",
   "HMul.hMul",
   "NonUnitalNonAssocSemiring.toMul",
   "Eq.symm",
   "Eq"],
  "name": "Mathlib.Tactic.Ring.mul_congr",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a a' b b' c : R}, a = a' → b = b' → a' * b' = c → a * b = c",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "And",
   "Exists",
   "Filter.principal",
   "PartialOrder.toPreorder",
   "Set",
   "Filter.instPartialOrderFilter",
   "TopologicalSpace",
   "Filter",
   "Filter.NeBot",
   "LE.le",
   "ClusterPt",
   "Preorder.toLE",
   "Set.instMembershipSet"],
  "name": "IsCompact",
  "constType": "{X : Type u} → [inst : TopologicalSpace X] → Set X → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Subtype.val", "TopologicalSpace", "TopologicalSpace.induced", "Subtype"],
  "name": "instTopologicalSpaceSubtype",
  "constType":
  "{α : Type u} → {p : α → Prop} → [t : TopologicalSpace α] → TopologicalSpace (Subtype p)",
  "constCategory": "Definition"},
 {"references": ["True.intro", "forall_true_left", "propext", "True", "Eq"],
  "name": "Mathlib.Logic.Basic._auxLemma.43",
  "constType": "∀ (p : True → Prop), (∀ (x : True), p x) = p True.intro",
  "constCategory": "Theorem"},
 {"references":
  ["NormedRing.toNorm",
   "NormedCommRing.toSeminormedCommRing.proof_2",
   "NormedCommRing",
   "MetricSpace.toPseudoMetricSpace",
   "NormedCommRing.toNormedRing",
   "NormedRing.toMetricSpace",
   "SeminormedCommRing",
   "NormedCommRing.mul_comm",
   "NormedCommRing.toSeminormedCommRing.proof_1",
   "SeminormedRing.mk",
   "NormedRing.toRing",
   "SeminormedCommRing.mk"],
  "name": "NormedCommRing.toSeminormedCommRing",
  "constType": "{α : Type u_1} → [β : NormedCommRing α] → SeminormedCommRing α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "DivisionSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "instHDiv",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instHAdd",
   "HAdd.hAdd",
   "DivisionSemiring",
   "add_div",
   "DivisionSemiring.toDiv",
   "HDiv.hDiv",
   "Eq.symm",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib"],
  "name": "div_add_div_same",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionSemiring α] (a b c : α), a / c + b / c = (a + b) / c",
  "constCategory": "Theorem"},
 {"references": ["LE"],
  "name": "LE.le",
  "constType": "{α : Type u} → [self : LE α] → α → α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Semigroup.toMul",
   "Monoid.toSemigroup",
   "Monoid",
   "Monoid.toOne",
   "MulOneClass",
   "Monoid.one_mul",
   "Monoid.mul_one",
   "MulOneClass.mk"],
  "name": "Monoid.toMulOneClass",
  "constType": "{M : Type u} → [self : Monoid M] → MulOneClass M",
  "constCategory": "Definition"},
 {"references": ["Top"],
  "name": "Top.top",
  "constType": "{α : Type u} → [self : Top α] → α",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "LinearOrderedSemifield.toSemifield",
   "CommMonoidWithZero.toZero",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "Int.floor_le",
   "OfNat.ofNat",
   "LinearOrderedRing.toStrictOrderedRing",
   "PartialOrder.toPreorder",
   "DivisionRing.toRing",
   "CommRing.toNonUnitalCommRing",
   "LinearOrderedField.toLinearOrderedCommRing",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Semifield.toCommGroupWithZero",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Int.floor",
   "LinearOrderedField.toDiv",
   "AddGroupWithOne.toAddGroup",
   "Preorder.toLE",
   "Field.toCommRing",
   "Zero.toOfNat0",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Semiring.toNonAssocSemiring",
   "LinearOrderedField",
   "Iff.mp",
   "Preorder.toLT",
   "Ring.toIntCast",
   "Ring.toSub",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedField.toLinearOrderedSemifield",
   "HDiv.hDiv",
   "le_div_iff",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "instHSub",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "FloorRing",
   "instHDiv",
   "sub_nonneg_of_le",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "HSub.hSub",
   "NonUnitalNonAssocSemiring.toMul",
   "CommGroupWithZero.toCommMonoidWithZero",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "instHMul",
   "LinearOrderedSemifield.toDiv",
   "StrictOrderedSemiring.toPartialOrder",
   "LinearOrderedField.toField",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Int.cast",
   "LT.lt",
   "OrderedCommSemiring.toOrderedSemiring",
   "HMul.hMul",
   "Field.toDivisionRing"],
  "name": "Int.sub_floor_div_mul_nonneg",
  "constType":
  "∀ {k : Type u_4} [inst : LinearOrderedField k] [inst_1 : FloorRing k] {b : k} (a : k), 0 < b → 0 ≤ a - ↑⌊a / b⌋ * b",
  "constCategory": "Theorem"},
 {"references":
  ["Real", "LT", "LT.mk", "_private.Mathlib.Data.Real.Basic.0.Real.lt"],
  "name": "Real.instLTReal",
  "constType": "LT ℝ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedCommRing.toLinearOrderedRing",
   "inferInstance",
   "LinearOrderedRing",
   "Real.linearOrderedCommRing",
   "Real"],
  "name": "Real.instLinearOrderedRingReal",
  "constType": "LinearOrderedRing ℝ",
  "constCategory": "Definition"},
 {"references": ["Int.mul", "Mul", "Int", "Mul.mk"],
  "name": "Int.instMulInt",
  "constType": "Mul ℤ",
  "constCategory": "Definition"},
 {"references": ["SemilatticeSup", "Lattice"],
  "name": "Lattice.toSemilatticeSup",
  "constType": "{α : Type u} → [self : Lattice α] → SemilatticeSup α",
  "constCategory": "Definition"},
 {"references": ["PartialEquiv"],
  "name": "PartialEquiv.toFun",
  "constType": "{α : Type u_5} → {β : Type u_6} → PartialEquiv α β → α → β",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Array",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references": ["LinearOrderedSemifield", "LinearOrderedCommSemiring"],
  "name": "LinearOrderedSemifield.toLinearOrderedCommSemiring",
  "constType":
  "{α : Type u_2} → [self : LinearOrderedSemifield α] → LinearOrderedCommSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "eq_true",
   "Subgroup.mem_top",
   "Top.top",
   "Subgroup.instTopSubgroup",
   "Subgroup",
   "Group",
   "True",
   "SetLike.instMembership",
   "Eq",
   "Subgroup.instSetLikeSubgroup"],
  "name": "Mathlib.GroupTheory.Subgroup.Basic._auxLemma.40",
  "constType": "∀ {G : Type u_1} [inst : Group G] (x : G), (x ∈ ⊤) = True",
  "constCategory": "Theorem"},
 {"references":
  ["NormedAddCommGroup.toAddCommGroup",
   "Membership.mem",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "Finset.sum",
   "Set",
   "Finset",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "AddCommGroup.toAddCommMonoid",
   "Finset.instMembershipFinset",
   "DifferentiableWithinAt.sum",
   "NormedSpace",
   "Set.instMembershipSet"],
  "name": "DifferentiableOn.sum",
  "constType":
  "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {s : Set E}\n  {ι : Type u_6} {u : Finset ι} {A : ι → E → F},\n  (∀ i ∈ u, DifferentiableOn 𝕜 (A i) s) → DifferentiableOn 𝕜 (fun y => Finset.sum u fun i => A i y) s",
  "constCategory": "Theorem"},
 {"references": ["Eq.rec", "rfl", "Eq"],
  "name": "congrFun",
  "constType":
  "∀ {α : Sort u} {β : α → Sort v} {f g : (x : α) → β x}, f = g → ∀ (a : α), f a = g a",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Distrib.toAdd",
   "HPow.hPow",
   "CommSemiring.toSemiring",
   "mul_add",
   "instHAdd",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocSemiring.toMul",
   "True",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Distrib.leftDistribClass",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "of_eq_true",
   "MonoidWithZero.toMonoid",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instHPow",
   "CommSemiring",
   "HMul.hMul",
   "Monoid.toNatPow",
   "Nat",
   "congrArg",
   "Eq.trans"],
  "name": "Mathlib.Tactic.Ring.add_overlap_pf",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a b c : R} (x : R) (e : ℕ), a + b = c → x ^ e * a + x ^ e * b = x ^ e * c",
  "constCategory": "Theorem"},
 {"references": ["Zero", "MonoidWithZero"],
  "name": "MonoidWithZero.toZero",
  "constType": "{M₀ : Type u} → [self : MonoidWithZero M₀] → Zero M₀",
  "constCategory": "Definition"},
 {"references": ["And"],
  "name": "And.intro",
  "constType": "∀ {a b : Prop}, a → b → a ∧ b",
  "constCategory": "Other"},
 {"references": ["Norm", "Real"],
  "name": "Norm.norm",
  "constType": "{E : Type u_9} → [self : Norm E] → E → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "Fin.ofNat''",
   "NeZero",
   "Nat.linearOrderedCommMonoidWithZero",
   "Fin.instOneFin",
   "Fin.addCommMonoid",
   "inferInstanceAs",
   "LinearOrderedCommMonoidWithZero.toZero",
   "AddCommMonoid.toAddMonoid",
   "Fin.instAddMonoidWithOne.proof_1",
   "Nat",
   "Fin.instAddMonoidWithOne.proof_2",
   "NatCast.mk",
   "AddMonoidWithOne.mk",
   "Fin",
   "AddCommMonoid"],
  "name": "Fin.instAddMonoidWithOne",
  "constType": "(n : ℕ) → [inst : NeZero n] → AddMonoidWithOne (Fin n)",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "IsROrC.innerProductSpace",
   "EisensteinSeries.powfun",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "NontriviallyNormedField.toNormedField",
   "HAdd.hAdd",
   "DivInvMonoid.Pow",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "hasDerivAt_id",
   "Eq",
   "NormedRing.toNonUnitalNormedRing",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Nat.cast",
   "NormedDivisionRing.toDivisionRing",
   "HasDerivAt.const_mul",
   "Ring.toIntCast",
   "NormedField.toNormedSpace",
   "true_or",
   "Nat",
   "EisensteinSeries.trans",
   "not_false_eq_true",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "NormedRing.toRing",
   "instHSub",
   "HPow.hPow",
   "Ne",
   "NormedAlgebra.toNormedSpace'",
   "Complex.instZeroComplex",
   "Or",
   "Complex.instDenselyNormedFieldComplex",
   "MulOneClass.toOne",
   "Function.comp",
   "NormedCommRing.toNormedRing",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Complex.instAddComplex",
   "HasDerivAt",
   "hasDerivAt_zpow",
   "EisensteinSeries.ein",
   "InnerProductSpace.toNormedSpace",
   "instHMul",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "Int.cast",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "Eq.mp",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "mul_one",
   "Not",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "Int",
   "Int.instLEInt",
   "congrFun",
   "NormedAlgebra.id",
   "Int.instSubInt",
   "HasDerivAt.add_const",
   "instOfNatInt",
   "Eq.refl",
   "NonAssocSemiring.toMulZeroOneClass",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Ring.toNonAssocRing",
   "True",
   "NormedField.toField",
   "Zero.toOfNat0",
   "Complex.instSemiringComplex",
   "Int.instRingInt",
   "AddMonoidWithOne.toNatCast",
   "instHPow",
   "Complex.instIsROrCComplex",
   "instOfNatNat",
   "Eq.symm",
   "id",
   "AddGroupWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "False",
   "instHAdd",
   "HSub.hSub",
   "Field.toSemifield",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "HasDerivAt.comp",
   "NormedField.toNormedCommRing",
   "LE.le",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "eq_false",
   "EisensteinSeries.com",
   "Eq.ndrec",
   "letFun",
   "HMul.hMul",
   "Semifield.toDivisionSemiring",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex.instNormedAddCommGroupComplex",
   "Complex.instMulComplex",
   "DenselyNormedField.toNontriviallyNormedField",
   "NonUnitalNormedRing.toNormedAddCommGroup"],
  "name": "EisensteinSeries.dd2",
  "constType":
  "∀ (a b k : ℤ) (x : ℂ), ↑a * x + ↑b ≠ 0 → HasDerivAt (EisensteinSeries.ein a b k) (↑k * (↑a * x + ↑b) ^ (k - 1) * ↑a) x",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "Complex.abs",
   "UpperHalfPlane.IsBoundedAtImInfty",
   "Exists",
   "PartialOrder.toPreorder",
   "Complex.instNormComplex",
   "Real",
   "Real.instLEReal",
   "AbsoluteValue",
   "FunLike.coe",
   "Real.orderedSemiring",
   "LE.le",
   "SubadditiveHomClass.toFunLike",
   "Preorder.toLE",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "AbsoluteValue.subadditiveHomClass",
   "UpperHalfPlane.im",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "OrderedSemiring.toSemiring",
   "UpperHalfPlane",
   "Complex",
   "UpperHalfPlane.bounded_mem",
   "OrderedSemiring.toPartialOrder"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.6",
  "constType":
  "∀ (f : UpperHalfPlane → ℂ),\n  UpperHalfPlane.IsBoundedAtImInfty f = ∃ M A, ∀ (z : UpperHalfPlane), A ≤ UpperHalfPlane.im z → Complex.abs (f z) ≤ M",
  "constCategory": "Theorem"},
 {"references": ["nhds", "TopologicalSpace", "Filter.Tendsto"],
  "name": "ContinuousAt",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → [inst : TopologicalSpace α] → [inst : TopologicalSpace β] → (α → β) → α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Zero",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Complex.ofReal'",
   "OfNat.ofNat",
   "Real",
   "Zero.mk",
   "Complex"],
  "name": "Complex.instZeroComplex",
  "constType": "Zero ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Complex.ofReal'",
   "OfNat.ofNat",
   "One",
   "Real",
   "One.mk",
   "One.toOfNat1",
   "Complex",
   "Real.instOneReal"],
  "name": "Complex.instOneComplex",
  "constType": "One ℂ",
  "constCategory": "Definition"},
 {"references":
  ["UpperHalfPlane.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Ne",
   "OfNat.ofNat",
   "LT.lt.ne'",
   "Real",
   "Real.instPreorderReal",
   "UpperHalfPlane",
   "UpperHalfPlane.im_pos"],
  "name": "UpperHalfPlane.im_ne_zero",
  "constType": "∀ (z : UpperHalfPlane), UpperHalfPlane.im z ≠ 0",
  "constCategory": "Theorem"},
 {"references":
  ["le_not_le_of_lt",
   "Preorder.toLT",
   "LT.lt",
   "le_not_le_of_lt.match_1",
   "Not",
   "Preorder",
   "And.left",
   "LE.le",
   "Preorder.toLE"],
  "name": "le_of_lt",
  "constType": "∀ {α : Type u} [inst : Preorder α] {a b : α}, a < b → a ≤ b",
  "constCategory": "Theorem"},
 {"references":
  ["instHMul",
   "MulHomClass",
   "HMul.hMul",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "MulHomClass.map_mul",
   "Mul",
   "Eq"],
  "name": "map_mul",
  "constType":
  "∀ {M : Type u_3} {N : Type u_4} {F : Type u_8} [inst : Mul M] [inst_1 : Mul N] [inst_2 : MulHomClass F M N] (f : F)\n  (x y : M), f (x * y) = f x * f y",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Ne",
   "OfNat.ofNat",
   "False",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "Eq",
   "pow_ne_zero",
   "NoZeroDivisors",
   "Zero.toOfNat0",
   "MonoidWithZero.toMulZeroOneClass",
   "eq_false",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toZero",
   "Nat",
   "MonoidWithZero"],
  "name": "Mathlib.Algebra.GroupPower.Ring._auxLemma.4",
  "constType":
  "∀ {M : Type u_3} [inst : MonoidWithZero M] [inst_1 : NoZeroDivisors M] {a : M} (n : ℕ), a ≠ 0 → (a ^ n = 0) = False",
  "constCategory": "Theorem"},
 {"references":
  ["Array.foldl",
   "Array",
   "OfNat.ofNat",
   "Array.push",
   "instOfNatNat",
   "Nat",
   "Array.size"],
  "name": "Array.append",
  "constType": "{α : Type u} → Array α → Array α → Array α",
  "constCategory": "Definition"},
 {"references": ["Membership.mem", "Set", "Subtype", "Set.instMembershipSet"],
  "name": "Set.Elem",
  "constType": "{α : Type u} → Set α → Type u",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "CompleteSpace",
   "instCompleteSpaceRealToUniformSpacePseudoMetricSpace",
   "CompleteSpace.prod",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "Real.pseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "Iff.mpr",
   "NormedCommRing.toSeminormedCommRing",
   "Complex.equivRealProd",
   "inferInstance",
   "SeminormedCommRing.toSeminormedRing",
   "instUniformSpaceProd",
   "Complex",
   "Prod",
   "completeSpace_congr",
   "Complex.uniformEmbedding_equivRealProd"],
  "name":
  "Complex.instCompleteSpaceComplexToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
  "constType": "CompleteSpace ℂ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "Top.top",
   "instDecidableEqFin",
   "Subgroup.instTopSubgroup",
   "Fin.fintype",
   "Function.Injective.eq_iff",
   "ModularForm",
   "Eq",
   "Iff.symm",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Iff",
   "Matrix.SpecialLinearGroup",
   "EisensteinSeries.toSIF_injective",
   "SlashInvariantForm",
   "Subgroup",
   "instOfNatNat",
   "Nat",
   "Int",
   "ModularForm.toSlashInvariantForm",
   "Fin",
   "Int.instCommRingInt"],
  "name": "EisensteinSeries.ModularForm_to_SIF_ext",
  "constType":
  "∀ (k : ℤ) (f g : ModularForm ⊤ k), f = g ↔ f.toSlashInvariantForm = g.toSlashInvariantForm",
  "constCategory": "Theorem"},
 {"references":
  ["Fin.ofNat''",
   "OfNat.ofNat",
   "NeZero",
   "One",
   "Nat.linearOrderedCommMonoidWithZero",
   "One.mk",
   "LinearOrderedCommMonoidWithZero.toZero",
   "instOfNatNat",
   "Nat",
   "Fin"],
  "name": "Fin.instOneFin",
  "constType": "{n : ℕ} → [inst : NeZero n] → One (Fin n)",
  "constCategory": "Definition"},
 {"references":
  ["instHSub",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "sub_nonneg_of_le",
   "Int.instSubInt",
   "HSub.hSub",
   "Int.toNat_of_nonneg",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.linearOrderedCommRing",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LE.le",
   "Eq",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Int.toNat",
   "Nat.cast",
   "Int.instAddGroupInt",
   "instNatCastInt",
   "OrderedCommSemiring.toOrderedSemiring",
   "Int",
   "Int.instLEInt",
   "StrictOrderedCommSemiring.toOrderedCommSemiring"],
  "name": "Int.toNat_sub_of_le",
  "constType": "∀ {a b : ℤ}, b ≤ a → ↑(Int.toNat (a - b)) = a - b",
  "constCategory": "Theorem"},
 {"references":
  ["Lean.Name.anonymous._impl",
   "Lean.ParserDescr.node",
   "Lean.Name.num._override",
   "_obj",
   "Lean.Name.str._override",
   "Lean.ParserDescr.symbol"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["Norm",
   "UpperHalfPlane",
   "Filter.BoundedAtFilter",
   "UpperHalfPlane.atImInfty"],
  "name": "UpperHalfPlane.IsBoundedAtImInfty",
  "constType": "{α : Type u_1} → [inst : Norm α] → (UpperHalfPlane → α) → Prop",
  "constCategory": "Definition"},
 {"references": ["Min"],
  "name": "Min.min",
  "constType": "{α : Type u} → [self : Min α] → α → α → α",
  "constCategory": "Definition"},
 {"references": ["Lean.Name.num", "Nat", "Lean.Name"],
  "name": "Lean.Name.mkNum",
  "constType": "Lean.Name → ℕ → Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "Finset.univ_unique",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Fin.uniqueFinOne.proof_1",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "instDecidableEqFin",
   "Mathlib.Tactic.Ring.pow_zero",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Mathlib.Tactic.Ring.neg_congr",
   "Mathlib.Tactic.Ring.pow_add",
   "Fin.succAbove",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "instHSub",
   "HPow.hPow",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Fin.sum_univ_succ",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Mathlib.Tactic.Ring.neg_zero",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Int",
   "Fin",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "Mathlib.Tactic.Ring.sub_congr",
   "AddMonoid.toAddZeroClass",
   "CommRing",
   "Mathlib.Tactic.Ring.sub_pf",
   "Matrix.det",
   "Finset",
   "Monoid.toNatPow",
   "Nat.succ",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Matrix.submatrix",
   "Finset.sum",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Tactic.Ring.mul_add",
   "One.toOfNat1",
   "Neg.neg",
   "Unique.instInhabited",
   "Mathlib.Tactic.Ring.neg_add",
   "CommRing.toCommSemiring",
   "Mathlib.Tactic.Ring.zero_mul",
   "Mathlib.Tactic.Ring.one_mul",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Fin.succ_succAbove_zero",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Finset.instSingletonFinset",
   "Mathlib.Tactic.Ring.mul_congr",
   "HAdd.hAdd",
   "Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat",
   "Mathlib.Tactic.Ring.pow_one_cast",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Ring.toNeg",
   "MonoidWithZero.toMonoid",
   "Finset.sum_singleton",
   "Nat",
   "Finset.sum_congr",
   "Eq.trans",
   "Nat.cast_one",
   "Fin.val",
   "Nat.rawCast",
   "Finset.instMembershipFinset",
   "Fin.fintype",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "Inhabited.default",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "Finset.univ",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "CommRing.toRing",
   "Fin.instOfNatFin",
   "Singleton.singleton",
   "congrArg",
   "Matrix.det_unique",
   "Mathlib.Tactic.Ring.mul_one",
   "Int.ofNat",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "CommRing.toNonUnitalCommRing",
   "AddCommMonoid.toAddMonoid",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "instHPow",
   "Matrix",
   "Ring.toSub",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "id",
   "Membership.mem",
   "NeZero.succ",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "instAddNat",
   "instHAdd",
   "HSub.hSub",
   "Fin.coe_fin_one",
   "Matrix.det_succ_row_zero",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Fin.uniqueFinOne",
   "Fin.succ",
   "Nat.semiring"],
  "name": "Matrix.det_fin_two",
  "constType":
  "∀ {R : Type v} [inst : CommRing R] (A : Matrix (Fin 2) (Fin 2) R), Matrix.det A = A 0 0 * A 1 1 - A 0 1 * A 1 0",
  "constCategory": "Theorem"},
 {"references":
  ["Continuous", "ContinuousAt", "TopologicalSpace", "Continuous.tendsto"],
  "name": "Continuous.continuousAt",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β} {x : α},\n  Continuous f → ContinuousAt f x",
  "constCategory": "Theorem"},
 {"references":
  ["wrapped._@.Mathlib.Topology.Algebra.InfiniteSum.Basic._hyg.106",
   "TopologicalSpace",
   "AddCommMonoid"],
  "name": "tsum",
  "constType":
  "{α : Type u_5} → [inst : AddCommMonoid α] → [inst : TopologicalSpace α] → {β : Type u_6} → (β → α) → α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Metric.closedBall",
   "Real",
   "Set",
   "Real.instLEReal",
   "HasSubset.Subset",
   "Metric.mem_closedBall",
   "LE.le",
   "Iff.mpr",
   "Set.instMembershipSet",
   "Dist.dist",
   "PseudoMetricSpace.toDist",
   "Set.instHasSubsetSet",
   "Real.instPreorderReal",
   "Metric.ball",
   "le_of_lt",
   "PseudoMetricSpace"],
  "name": "Metric.ball_subset_closedBall",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {x : α} {ε : ℝ}, Metric.ball x ε ⊆ Metric.closedBall x ε",
  "constCategory": "Theorem"},
 {"references": ["outParam", "HSub"],
  "name": "HSub.hSub",
  "constType":
  "{α : Type u} → {β : Type v} → {γ : outParam (Type w)} → [self : HSub α β γ] → α → β → γ",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "NormedAddCommGroup",
   "instHSMul",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "HasDerivAtFilter.proof_2",
   "NontriviallyNormedField.toNormedField",
   "Real.instMulReal",
   "AddCommGroup.toAddCommMonoid",
   "Semifield.toCommGroupWithZero",
   "NormedField.toNorm",
   "SubNegMonoid.toSub",
   "SMulWithZero.toSMulZeroClass",
   "SeminormedCommRing.toSeminormedRing",
   "Semiring.toNonAssocSemiring",
   "Iff",
   "HasDerivWithinAt",
   "NormedField.toNormedSpace",
   "HSMul.hSMul",
   "Filter.Tendsto",
   "Real.instInvReal",
   "NormedAddCommGroup.toNorm",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NormedRing.toRing",
   "instHSub",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NormedCommRing.toNormedRing",
   "Module.toMulActionWithZero",
   "CommGroupWithZero.toCommMonoidWithZero",
   "SMulZeroClass.toSMul",
   "instHMul",
   "MulActionWithZero.toSMulWithZero",
   "ContinuousLinearMap",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "Norm.norm",
   "NormedSpace.toModule",
   "Inv.inv",
   "NormedAddCommGroup.toAddCommGroup",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Set",
   "Real",
   "Semiring.toMonoidWithZero",
   "SeminormedRing.toPseudoMetricSpace",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NormedSpace",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "RingHom.id",
   "Zero.toOfNat0",
   "NormedField.toField",
   "NormedAddGroup.toAddGroup",
   "Ring.toSub",
   "ContinuousLinearMap.smulRight",
   "hasFDerivAtFilter_iff_tendsto",
   "UniformSpace.toTopologicalSpace",
   "nhdsWithin",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "NontriviallyNormedField",
   "HasDerivAtFilter.proof_1",
   "nhds",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "HSub.hSub",
   "Real.pseudoMetricSpace",
   "Field.toSemifield",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "AddGroup.toSubNegMonoid",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "Real.instZeroReal",
   "NormedCommRing.toSeminormedCommRing",
   "DivisionSemiring.toSemiring",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Semifield.toDivisionSemiring",
   "NormedAddCommGroup.toNormedAddGroup",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NegZeroClass.toZero",
   "NonUnitalNormedRing.toNormedAddCommGroup",
   "ContinuousLinearMap.one"],
  "name": "hasDerivWithinAt_iff_tendsto",
  "constType":
  "∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] {F : Type v} [inst_1 : NormedAddCommGroup F]\n  [inst_2 : NormedSpace 𝕜 F] {f : 𝕜 → F} {f' : F} {x : 𝕜} {s : Set 𝕜},\n  HasDerivWithinAt f f' s x ↔\n    Filter.Tendsto (fun x' => ‖x' - x‖⁻¹ * ‖f x' - f x - (x' - x) • f'‖) (nhdsWithin x s) (nhds 0)",
  "constCategory": "Theorem"},
 {"references": ["Lean.TSyntax", "Array", "Lean.SyntaxNodeKinds"],
  "name": "Lean.TSyntaxArray",
  "constType": "Lean.SyntaxNodeKinds → Type",
  "constCategory": "Definition"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "Distrib.toAdd",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "Finset.Icc",
   "And.left",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.8",
   "Iff.mpr",
   "Mathlib.Meta.NormNum.isInt_add",
   "Semiring.toNatCast",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "And.right",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Linarith.nat_cast_nonneg",
   "Nat.cast",
   "SemilatticeSup.toSup",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "instHSub",
   "HPow.hPow",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "instDistribLattice",
   "max_le_iff",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "And",
   "Int.orderedRing",
   "eq_true",
   "Mathlib.Order.LocallyFinite._auxLemma.1",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "LinearOrder.toPartialOrder",
   "And.intro",
   "MonoidWithZero.toZero",
   "Int",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "Mathlib.Tactic.Ring.add_overlap_pf",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Int.rawCast",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "AddMonoid.toAddZeroClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "True",
   "Abs.abs",
   "Mathlib.Tactic.Ring.sub_pf",
   "Int.add_one_le_iff",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "Finset",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "OrderedRing.toOrderedSemiring",
   "Lattice.toSemilatticeSup",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Neg.toHasAbs",
   "neg_nonpos_of_nonneg",
   "NonUnitalNonAssocRing.toMul",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "Neg.neg",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "instNatCastInt",
   "Bool.false",
   "Mathlib.Tactic.Ring.one_mul",
   "letFun",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Int.coe_natAbs",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Int.instMaxInt",
   "Preorder.toLE",
   "Eq",
   "OrderedRing.toRing",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Nat",
   "Eq.trans",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Lattice.toSemilatticeInf",
   "neg_neg_of_pos",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "mul_nonneg_of_nonpos_of_nonpos",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instLTInt",
   "Int.instAddInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "DistribLattice.toLattice",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Int.instAddGroupInt",
   "Mathlib.Tactic.Ring.of_eq",
   "AddCancelMonoid.toIsCancelAdd",
   "of_eq_true",
   "LinearOrder.toMax",
   "Eq.mp",
   "congrArg",
   "Mathlib.Tactic.Ring.mul_one",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "LinearOrderedRing.toStrictOrderedRing",
   "Linarith.lt_irrefl",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "Mathlib.Meta.NormNum.isNat_add",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Int.linearOrderedCommRing",
   "abs_eq_max_neg",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "Linarith.mul_nonpos",
   "instLENat",
   "Preorder.toLT",
   "instHPow",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "NeZero.charZero_one",
   "add_lt_of_neg_of_le",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "eq_self",
   "Membership.mem",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddGroup.existsAddOfLE",
   "HSub.hSub",
   "SemilatticeInf.toPartialOrder",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "StrictOrderedSemiring.to_charZero",
   "OrderedCommSemiring.toOrderedSemiring",
   "Int.instSemiringInt",
   "Max.max",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Bool",
   "NegZeroClass.toZero",
   "OrderedSemiring.toPartialOrder",
   "Int.natAbs"],
  "name": "EisensteinSeries.natAbs_le_mem_Icc",
  "constType": "∀ (a : ℤ) (n : ℕ), Int.natAbs a ≤ n → a ∈ Finset.Icc (-↑n) ↑n",
  "constCategory": "Theorem"},
 {"references":
  ["EStateM",
   "OfNat.ofNat",
   "instMonadReaderOfReaderT",
   "Unit",
   "Lean.MonadQuotation.mk",
   "Lean.Name.mkStr1",
   "Pure.pure",
   "ReaderT.instApplicativeReaderT",
   "Lean.Syntax",
   "MonadReader.read",
   "Lean.MacroScope",
   "EStateM.instMonadEStateM",
   "instMonadWithReaderOfReaderT",
   "instMonadWithReader",
   "instMonadReader",
   "Lean.MonadRef.mk",
   "Lean.PrettyPrinter.UnexpandM",
   "instOfNatNat",
   "Lean.Name",
   "Lean.MonadQuotation",
   "MonadWithReader.withReader",
   "Applicative.toPure",
   "id"],
  "name": "Lean.PrettyPrinter.instMonadQuotationUnexpandM",
  "constType": "Lean.MonadQuotation Lean.PrettyPrinter.UnexpandM",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "instHDiv",
   "MulOneClass.toMul",
   "div_eq_mul_inv",
   "inv_inv",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "True",
   "Eq",
   "DivInvMonoid.toInv",
   "DivisionMonoid",
   "instHMul",
   "of_eq_true",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "congr",
   "HDiv.hDiv",
   "InvolutiveInv.toInv",
   "DivisionMonoid.toInvolutiveInv",
   "mul_inv_rev",
   "congrArg",
   "Eq.trans",
   "congrFun",
   "Inv.inv",
   "DivInvMonoid.toDiv"],
  "name": "inv_div",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionMonoid α] (a b : α), (a / b)⁻¹ = b / a",
  "constCategory": "Theorem"},
 {"references":
  ["NeZero",
   "OfNat.ofNat",
   "NeZero.mk",
   "instAddNat",
   "instHAdd",
   "Zero.ofOfNat0",
   "HAdd.hAdd",
   "Nat.succ_ne_zero",
   "instOfNatNat",
   "Nat"],
  "name": "NeZero.succ",
  "constType": "∀ {n : ℕ}, NeZero (n + 1)",
  "constCategory": "Definition"},
 {"references":
  ["_obj",
   "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_1",
   "String.toSubstring'"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_2._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["DivisionSemiring.toSemiring",
   "DivisionRing.toDivisionSemiring",
   "instHDiv",
   "DivisionRing",
   "Nat.cast",
   "DivisionRing.toRing",
   "Int.cast",
   "Ring.toIntCast",
   "HDiv.hDiv",
   "Nat",
   "Int",
   "DivisionRing.toDiv",
   "Semiring.toNatCast"],
  "name": "Rat.rawCast",
  "constType": "{α : Type u_1} → [inst : DivisionRing α] → ℤ → ℕ → α",
  "constCategory": "Definition"},
 {"references": ["Int", "Neg", "Int.neg", "Neg.mk"],
  "name": "Int.instNegInt",
  "constType": "Neg ℤ",
  "constCategory": "Definition"},
 {"references": ["Zero", "MulZeroClass"],
  "name": "MulZeroClass.toZero",
  "constType": "{M₀ : Type u} → [self : MulZeroClass M₀] → Zero M₀",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Lean.Macro.Exception",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["Lean.Name._impl",
   "OfNat.ofNat",
   "UInt64.size",
   "Lean.Name.hash.proof_4",
   "Nat.decLt",
   "dite",
   "Lean.Name.num._impl",
   "instLTNat",
   "LT.lt",
   "Not",
   "instOfNatNat",
   "UInt64",
   "Lean.Name",
   "Nat",
   "UInt64.ofNatCore",
   "mixHash",
   "unsafeCast",
   "Lean.Name.hash"],
  "name": "Lean.Name.num._override",
  "constType": "Lean.Name → ℕ → Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "SeminormedRing.toPseudoMetricSpace",
   "tsum",
   "NormedField.toNormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "eise",
   "Prod",
   "UpperHalfPlane",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "UniformSpace.toTopologicalSpace",
   "Int",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring"],
  "name": "Eisenstein_tsum",
  "constType": "ℤ → UpperHalfPlane → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["instHMul",
   "CommMagma",
   "HMul.hMul",
   "CommMagma.toMul",
   "CommMagma.mul_comm",
   "Eq"],
  "name": "mul_comm",
  "constType": "∀ {G : Type u_1} [inst : CommMagma G] (a b : G), a * b = b * a",
  "constCategory": "Theorem"},
 {"references":
  ["_private.Mathlib.Data.Real.Basic.0.Real.neg", "Real", "Neg", "Neg.mk"],
  "name": "Real.instNegReal",
  "constType": "Neg ℝ",
  "constCategory": "Definition"},
 {"references": ["FloorRing", "LinearOrderedRing", "FloorRing.floor", "Int"],
  "name": "Int.floor",
  "constType":
  "{α : Type u_2} → [inst : LinearOrderedRing α] → [inst : FloorRing α] → α → ℤ",
  "constCategory": "Definition"},
 {"references":
  ["EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_7",
   "List.cons",
   "_obj",
   "_neutral",
   "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_5"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_8._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["OrderedAddCommMonoid",
   "Semiring.toNonUnitalSemiring",
   "OrderedSemiring",
   "OrderedSemiring.add_le_add_left",
   "OrderedSemiring.toSemiring",
   "OrderedAddCommMonoid.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toPartialOrder"],
  "name": "OrderedSemiring.toOrderedAddCommMonoid",
  "constType":
  "{α : Type u} → [self : OrderedSemiring α] → OrderedAddCommMonoid α",
  "constCategory": "Definition"},
 {"references":
  ["CommRing.toCommSemiring",
   "CommSemiring.toSemiring",
   "Units",
   "Fintype",
   "MonoidWithZero.toMonoid",
   "DecidableEq",
   "Matrix.semiring",
   "Matrix",
   "Semiring.toMonoidWithZero",
   "CommRing"],
  "name": "Matrix.GeneralLinearGroup",
  "constType":
  "(n : Type u) → (R : Type v) → [inst : DecidableEq n] → [inst : Fintype n] → [inst : CommRing R] → Type (max v u)",
  "constCategory": "Definition"},
 {"references":
  ["instAddNat",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.isNat_add.match_1",
   "Nat.cast_add",
   "Eq",
   "AddMonoidWithOne",
   "Nat.add",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat",
   "AddMonoid.toAddSemigroup",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.symm"],
  "name": "Mathlib.Meta.NormNum.isNat_add",
  "constType":
  "∀ {α : Type u_1} [inst : AddMonoidWithOne α] {f : α → α → α} {a b : α} {a' b' c : ℕ},\n  f = HAdd.hAdd →\n    Mathlib.Meta.NormNum.IsNat a a' →\n      Mathlib.Meta.NormNum.IsNat b b' → Nat.add a' b' = c → Mathlib.Meta.NormNum.IsNat (f a b) c",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.im",
   "Complex.mk",
   "Real",
   "Neg.neg",
   "Complex",
   "Neg",
   "Neg.mk",
   "Complex.re",
   "Real.instNegReal"],
  "name": "Complex.instNegComplex",
  "constType": "Neg ℂ",
  "constCategory": "Definition"},
 {"references":
  ["ContravariantClass.elim",
   "add_right_cancel",
   "PartialOrder.toPreorder",
   "Contravariant",
   "instHAdd",
   "contravariant_le_iff_contravariant_lt_and_eq",
   "HAdd.hAdd",
   "LE.le",
   "Preorder.toLE",
   "Iff.mpr",
   "PartialOrder",
   "Eq",
   "Function.swap",
   "And",
   "Preorder.toLT",
   "LT.lt",
   "IsRightCancelAdd",
   "And.intro",
   "Add",
   "ContravariantClass",
   "ContravariantClass.mk"],
  "name":
  "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
  "constType":
  "∀ (N : Type u_2) [inst : Add N] [inst_1 : IsRightCancelAdd N] [inst_2 : PartialOrder N]\n  [inst_3 : ContravariantClass N N (Function.swap fun x x_1 => x + x_1) fun x x_1 => x < x_1],\n  ContravariantClass N N (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "HAdd.hAdd",
   "DivInvMonoid.Pow",
   "CanonicallyOrderedCommSemiring.toOne",
   "Eq",
   "Eq.mpr",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "zero_pow'",
   "Nat",
   "not_false_eq_true",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Eq.trans",
   "zpow_negSucc",
   "HPow.hPow",
   "Ne",
   "Nat.canonicallyOrderedCommSemiring",
   "GroupWithZero.toDivInvMonoid",
   "DivInvMonoid.toInv",
   "And",
   "Nat.zero",
   "of_eq_true",
   "Int.negSucc",
   "Eq.mp",
   "GroupWithZero",
   "Not",
   "MonoidWithZero.toZero",
   "congrArg",
   "Int",
   "congrFun",
   "Inv.inv",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "AddZeroClass.toAdd",
   "Mathlib.Algebra.Order.Monoid.Canonical.Defs._auxLemma.9",
   "instOfNatInt",
   "Eq.refl",
   "Int.linearOrderedCommRing",
   "AddCommMonoid.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "True",
   "zpow_ofNat",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "AddMonoidWithOne.toNatCast",
   "and_false",
   "instHPow",
   "zero_zpow.match_1",
   "AddMonoid.toZero",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "instOfNatNat",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "id",
   "eq_self",
   "NeZero.succ",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "False",
   "instAddNat",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.inv_zero",
   "GroupWithZero.toMonoidWithZero",
   "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
   "Eq.ndrec",
   "StrictOrderedSemiring.to_charZero",
   "instNatCastInt",
   "Mathlib.Algebra.NeZero._auxLemma.4",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.3"],
  "name": "zero_zpow",
  "constType":
  "∀ {G₀ : Type u_1} [inst : GroupWithZero G₀] (z : ℤ), z ≠ 0 → 0 ^ z = 0",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Iff.mpr",
   "Preorder.toLE",
   "Abs.abs",
   "neg_le_abs_self",
   "le_total",
   "Zero.toOfNat0",
   "AddGroup",
   "SemilatticeSup.toSup",
   "AddMonoid.toAddSemigroup",
   "Lattice.toSemilatticeSup",
   "Or.elim",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Neg.toHasAbs",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "AddSemigroup.toAdd",
   "instHAdd",
   "instDistribLattice",
   "LE.le.trans",
   "SemilatticeInf.toPartialOrder",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "le_abs_self",
   "DistribLattice.toLattice",
   "neg_nonneg",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "LinearOrder.toPartialOrder",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg"],
  "name": "abs_nonneg",
  "constType":
  "∀ {α : Type u_1} [inst : AddGroup α] [inst_1 : LinearOrder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] (a : α), 0 ≤ |a|",
  "constCategory": "Theorem"},
 {"references": ["CancelMonoidWithZero", "MonoidWithZero"],
  "name": "CancelMonoidWithZero.toMonoidWithZero",
  "constType":
  "{M₀ : Type u_4} → [self : CancelMonoidWithZero M₀] → MonoidWithZero M₀",
  "constCategory": "Definition"},
 {"references":
  ["NatCast",
   "OfNat.ofNat",
   "Nat.AtLeastTwo",
   "Nat.cast",
   "instOfNatNat",
   "Nat",
   "instOfNat",
   "rfl",
   "Eq"],
  "name": "Nat.cast_ofNat",
  "constType":
  "∀ {R : Type u_1} {n : ℕ} [inst : NatCast R] [inst_1 : Nat.AtLeastTwo n], ↑(OfNat.ofNat n) = OfNat.ofNat n",
  "constCategory": "Theorem"},
 {"references":
  ["LinearOrderedSemifield.toSemifield",
   "CommMonoidWithZero.toZero",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "LinearOrderedSemifield.toInv",
   "PartialOrder.toPreorder",
   "div_eq_mul_inv",
   "Eq.refl",
   "Semifield.toCommGroupWithZero",
   "Iff.mpr",
   "Eq",
   "Zero.toOfNat0",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Preorder.toLT",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "HDiv.hDiv",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "id",
   "DivInvMonoid.toDiv",
   "instHDiv",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "LinearOrderedSemifield",
   "DivisionSemiring.toGroupWithZero",
   "CommGroupWithZero.toCommMonoidWithZero",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toDivInvMonoid",
   "StrictOrderedSemiring.toSemiring",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toInv",
   "instHMul",
   "LinearOrderedSemifield.toDiv",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "HMul.hMul",
   "Semifield.toDivisionSemiring",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "mul_pos",
   "inv_pos",
   "Inv.inv"],
  "name": "div_pos",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a b : α}, 0 < a → 0 < b → 0 < a / b",
  "constCategory": "Theorem"},
 {"references":
  ["OrderedAddCommMonoid",
   "inferInstance",
   "Real",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Real.orderedSemiring"],
  "name": "Real.orderedAddCommMonoid",
  "constType": "OrderedAddCommMonoid ℝ",
  "constCategory": "Definition"},
 {"references": ["TopologicalSpace.Opens", "Set", "TopologicalSpace"],
  "name": "TopologicalSpace.Opens.carrier",
  "constType":
  "{α : Type u_2} → [inst : TopologicalSpace α] → TopologicalSpace.Opens α → Set α",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "Complex.instNormedFieldComplex",
   "instHAdd",
   "HAdd.hAdd",
   "Complex.instRingComplex",
   "DivInvMonoid.Pow",
   "Complex.instAddComplex",
   "instHMul",
   "instHPow",
   "NormedDivisionRing.toDivisionRing",
   "Int.cast",
   "Ring.toIntCast",
   "HMul.hMul",
   "Complex",
   "Int",
   "DivisionRing.toDivInvMonoid",
   "NormedField.toNormedDivisionRing",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.ein",
  "constType": "ℤ → ℤ → ℤ → ℂ → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "Subgroup.instTopSubgroup",
   "instDecidableEqFin",
   "AddCommGroup.toAddCommMonoid",
   "Pi.instZero",
   "Mathlib.GroupTheory.Subgroup.Basic._auxLemma.40",
   "SetLike.instMembership",
   "Eq",
   "Zero.toOfNat0",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "AddCommGroup.intModule",
   "SlashInvariantFormClass.slashInvariantForm",
   "SlashInvariantForm",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Odd",
   "Int.instCommRingInt",
   "eq_self",
   "Membership.mem",
   "SlashInvariantForm.instAddCommGroupSlashInvariantForm",
   "Complex.instZeroComplex",
   "Top.top",
   "Matrix.SpecialLinearGroup.instNegSpecialLinearGroup",
   "Fin.fintype",
   "Neg.neg",
   "One.toOfNat1",
   "Matrix.SpecialLinearGroup.hasOne",
   "Matrix.SpecialLinearGroup",
   "of_eq_true",
   "Int.instSemiringInt",
   "SlashInvariantForm.instZero",
   "Complex",
   "EisensteinSeries.SlashInvariantForm_neg_one_in_lvl_odd_wt_eq_zero",
   "Int",
   "UpperHalfPlane.instFactEvenNatInstAddNatCardFinOfNatInstOfNatNatFintype",
   "Fin",
   "Subgroup.instSetLikeSubgroup"],
  "name": "EisensteinSeries.SIF_Top_Odd_Wt_eq_zero",
  "constType": "∀ (k : ℤ), Odd k → ∀ (f : SlashInvariantForm ⊤ k), f = 0",
  "constCategory": "Theorem"},
 {"references": ["DivInvMonoid", "Inv"],
  "name": "DivInvMonoid.toInv",
  "constType": "{G : Type u} → [self : DivInvMonoid G] → Inv G",
  "constCategory": "Definition"},
 {"references":
  ["continuous_id",
   "Membership.mem",
   "Set.instHasSubsetSet",
   "Set.Elem",
   "Continuous",
   "Set",
   "HasSubset.Subset",
   "TopologicalSpace",
   "instTopologicalSpaceSubtype",
   "Set.inclusion",
   "Continuous.subtype_map",
   "id",
   "Set.instMembershipSet"],
  "name": "continuous_inclusion",
  "constType":
  "∀ {α : Type u} [inst : TopologicalSpace α] {s t : Set α} (h : s ⊆ t), Continuous (Set.inclusion h)",
  "constCategory": "Theorem"},
 {"references": ["Or", "Or.inl", "Or.inr", "Or.rec"],
  "name": "Or.casesOn",
  "constType":
  "∀ {a b : Prop} {motive : a ∨ b → Prop} (t : a ∨ b),\n  (∀ (h : a), motive (_ : a ∨ b)) → (∀ (h : b), motive (_ : a ∨ b)) → motive t",
  "constCategory": "Definition"},
 {"references": ["DivisionSemiring", "Div"],
  "name": "DivisionSemiring.toDiv",
  "constType": "{α : Type u_4} → [self : DivisionSemiring α] → Div α",
  "constCategory": "Definition"},
 {"references": ["Lean.MacroM", "Lean.Syntax"],
  "name": "Lean.Macro",
  "constType": "Type",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoidWithOne", "AddMonoidWithOne.toNatCast", "Nat.cast", "Nat"],
  "name": "Nat.rawCast",
  "constType": "{α : Type u_1} → [inst : AddMonoidWithOne α] → ℕ → α",
  "constCategory": "Definition"},
 {"references":
  ["LE.mk",
   "PartialOrder.mk",
   "Real.instLTReal",
   "LT.lt",
   "Real.instLEReal",
   "Real",
   "Real.partialOrder.proof_4",
   "Real.partialOrder.proof_2",
   "LT.mk",
   "Real.partialOrder.proof_1",
   "LE.le",
   "PartialOrder",
   "Real.partialOrder.proof_3",
   "Preorder.mk"],
  "name": "Real.partialOrder",
  "constType": "PartialOrder ℝ",
  "constCategory": "Definition"},
 {"references": ["Set"],
  "name": "setOf",
  "constType": "{α : Type u} → (α → Prop) → Set α",
  "constCategory": "Definition"},
 {"references":
  ["Lean.Name.instBEqName",
   "BEq.beq",
   "Lean.Syntax.getKind",
   "Lean.SyntaxNodeKind",
   "Bool",
   "Lean.Syntax"],
  "name": "Lean.Syntax.isOfKind",
  "constType": "Lean.Syntax → Lean.SyntaxNodeKind → Bool",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "Neg.toHasAbs",
   "StrictOrderedRing.toRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "instDistribLattice",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "Abs.abs",
   "Eq",
   "DistribLattice.toLattice",
   "LinearOrderedRing.toLinearOrder",
   "Ring.toNeg",
   "SemilatticeSup.toSup",
   "LinearOrderedRing",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "pow_abs",
   "Lattice.toSemilatticeSup",
   "Nat",
   "Eq.symm"],
  "name": "abs_pow",
  "constType":
  "∀ {R : Type u₁} [inst : LinearOrderedRing R] (a : R) (n : ℕ), |a ^ n| = |a| ^ n",
  "constCategory": "Theorem"},
 {"references": ["_obj"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_1._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "PartialOrder.toPreorder",
   "Prod.snd",
   "Finset.instSProd",
   "Finset.Icc",
   "Neg.neg",
   "Int.linearOrderedCommRing",
   "Prod.fst",
   "Nat.instMaxNat",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Int.instDecidableEqInt",
   "SProd.sprod",
   "Max.max",
   "Finset",
   "Finset.filter",
   "Int.instNegInt",
   "Prod",
   "Nat",
   "Int",
   "Int.natAbs"],
  "name": "EisensteinSeries.square",
  "constType": "ℤ → Finset (ℤ × ℤ)",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "AddZeroClass.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "OfNat.ofNat",
   "instHAdd",
   "Finset.sum",
   "HAdd.hAdd",
   "Eq.refl",
   "Finset.instMembershipFinset",
   "AddCommMonoid.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "Finset.fold_congr",
   "Eq",
   "Zero.toOfNat0",
   "Eq.mpr",
   "Eq.ndrec",
   "AddMonoid.toAddSemigroup",
   "AddMonoid.toZero",
   "Finset",
   "AddCommMagma.to_isCommutative",
   "AddSemigroup.to_isAssociative",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCommMonoid",
   "id"],
  "name": "Finset.sum_congr",
  "constType":
  "∀ {β : Type u} {α : Type v} {s₁ s₂ : Finset α} {f g : α → β} [inst : AddCommMonoid β],\n  s₁ = s₂ → (∀ x ∈ s₂, f x = g x) → Finset.sum s₁ f = Finset.sum s₂ g",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Int.cast_pow",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Int.cast",
   "Ring.toIntCast",
   "Semiring.toMonoidWithZero",
   "Ring",
   "Monoid.toNatPow",
   "Nat",
   "Ring.toSemiring",
   "Eq.symm",
   "Int",
   "Eq",
   "Int.instHPowIntNat"],
  "name": "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.12",
  "constType":
  "∀ {R : Type u₁} [inst : Ring R] (n : ℤ) (m : ℕ), ↑n ^ m = ↑(n ^ m)",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Nat",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["Distrib.toAdd",
   "Exists",
   "OfNat.ofNat",
   "Semiring",
   "instHAdd",
   "HAdd.hAdd",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "Odd.proof_1",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Semiring.toNatCast",
   "Semiring.toOne",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "instOfNat"],
  "name": "Odd",
  "constType": "{α : Type u_2} → [inst : Semiring α] → α → Prop",
  "constCategory": "Definition"},
 {"references": ["propext", "Subtype.forall", "Subtype.mk", "Subtype", "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.1",
  "constType":
  "∀ {α : Sort u_1} {p : α → Prop} {q : { a // p a } → Prop},\n  (∀ (x : { a // p a }), q x) = ∀ (a : α) (b : p a), q { val := a, property := b }",
  "constCategory": "Theorem"},
 {"references":
  ["Lean.ParserDescr.node",
   "Lean.Name.num",
   "Lean.Name.anonymous",
   "Lean.Name",
   "Lean.ParserDescr",
   "Lean.ParserDescr.symbol",
   "Lean.Name.str"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._cstage1",
  "constType": "Lean.ParserDescr",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "Eq.symm", "Eq"],
  "name": "Eq.mpr",
  "constType": "{α β : Sort u} → α = β → β → α",
  "constCategory": "Definition"},
 {"references": ["OrderedRing", "Ring"],
  "name": "OrderedRing.toRing",
  "constType": "{α : Type u} → [self : OrderedRing α] → Ring α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "eq_true",
   "Subgroup.mem_top",
   "Top.top",
   "Subgroup.instTopSubgroup",
   "Subgroup",
   "Group",
   "True",
   "SetLike.instMembership",
   "Eq",
   "Subgroup.instSetLikeSubgroup"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.2",
  "constType": "∀ {G : Type u_1} [inst : Group G] (x : G), (x ∈ ⊤) = True",
  "constCategory": "Theorem"},
 {"references":
  ["Finset.card",
   "EisensteinSeries.square_zero",
   "OfNat.ofNat",
   "instOfNatInt",
   "Eq.refl",
   "Eq",
   "Eq.mpr",
   "Eq.ndrec",
   "Prod.mk",
   "Finset",
   "Prod",
   "instOfNatNat",
   "Singleton.singleton",
   "Nat",
   "EisensteinSeries.square",
   "Int",
   "Finset.instSingletonFinset",
   "id"],
  "name": "EisensteinSeries.square_zero_card",
  "constType": "Finset.card (EisensteinSeries.square 0) = 1",
  "constCategory": "Theorem"},
 {"references":
  ["DistribLattice.toLattice",
   "Neg.toHasAbs",
   "Nat.cast",
   "SemilatticeSup.toSup",
   "instNatCastInt",
   "instDistribLattice",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "Int.abs_eq_natAbs",
   "Lattice.toSemilatticeSup",
   "Eq.symm",
   "Int",
   "Abs.abs",
   "Eq",
   "Int.natAbs"],
  "name": "Int.coe_natAbs",
  "constType": "∀ (n : ℤ), ↑(Int.natAbs n) = |n|",
  "constCategory": "Theorem"},
 {"references":
  ["IsRefl.mk",
   "IsPreorder.mk",
   "IsEquiv.mk",
   "Eq.refl",
   "IsEquiv",
   "IsTrans.mk",
   "Eq.symm",
   "IsSymm.mk",
   "Eq.trans",
   "Eq"],
  "name": "eq_isEquiv",
  "constType": "∀ (α : Type u), IsEquiv α fun x x_1 => x = x_1",
  "constCategory": "Definition"},
 {"references":
  ["OrderedAddCommGroup",
   "inferInstance",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Real",
   "Real.strictOrderedRing"],
  "name": "Real.orderedAddCommGroup",
  "constType": "OrderedAddCommGroup ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Finset.card",
   "instHMul",
   "Finset.instSProd",
   "SProd.sprod",
   "Finset",
   "HMul.hMul",
   "Finset.val",
   "Prod",
   "instMulNat",
   "Nat",
   "Eq",
   "Multiset.card_product"],
  "name": "Finset.card_product",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} (s : Finset α) (t : Finset β), Finset.card (s ×ˢ t) = Finset.card s * Finset.card t",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "Ne",
   "add_div'",
   "add_comm",
   "OfNat.ofNat",
   "instHDiv",
   "instHAdd",
   "DivisionSemiring",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "DivisionSemiring.toDiv",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMagma.toAdd",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Zero.toOfNat0",
   "instHMul",
   "DivisionSemiring.toSemiring",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "HDiv.hDiv",
   "MonoidWithZero.toZero",
   "AddCommMonoid.toAddCommSemigroup",
   "id"],
  "name": "div_add'",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionSemiring α] (a b c : α), c ≠ 0 → a / c + b = (a + b * c) / c",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Matrix.cons_val_succ",
   "implies_true",
   "True",
   "Eq",
   "of_eq_true",
   "forall_congr",
   "congr",
   "Matrix.vecCons",
   "Nat",
   "Fin.succ",
   "congrArg",
   "Nat.succ",
   "Fin.cases",
   "Eq.trans",
   "Fin",
   "congrFun"],
  "name": "Matrix.cons_val'",
  "constType":
  "∀ {α : Type u} {m : ℕ} {n' : Type uₙ} (v : n' → α) (B : Fin m → n' → α) (i : Fin (Nat.succ m)) (j : n'),\n  Matrix.vecCons v B i j = Matrix.vecCons (v j) (fun i => B i j) i",
  "constCategory": "Theorem"},
 {"references":
  ["Set.range_iff_surjective",
   "Set.range",
   "Function.Surjective",
   "Set",
   "Function.surjective_id",
   "Set.univ",
   "Iff.mpr",
   "id",
   "Eq"],
  "name": "Set.range_id",
  "constType": "∀ {α : Type u_1}, Set.range id = Set.univ",
  "constCategory": "Theorem"},
 {"references": ["Set", "HasSubset", "HasSubset.mk", "Set.instLESet", "LE.le"],
  "name": "Set.instHasSubsetSet",
  "constType": "{α : Type u_1} → HasSubset (Set α)",
  "constCategory": "Definition"},
 {"references": ["Monoid", "DivInvMonoid"],
  "name": "DivInvMonoid.toMonoid",
  "constType": "{G : Type u} → [self : DivInvMonoid G] → Monoid G",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "Int.instSubInt",
   "AddGroupWithOne.toSub",
   "AddGroupWithOne.toIntCast",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "sub_eq_add_neg",
   "AddMonoid.toAddZeroClass",
   "Int.cast_add",
   "AddGroupWithOne.toAddGroup",
   "True",
   "Eq",
   "SubNegMonoid.toSub",
   "AddMonoid.toAddSemigroup",
   "Int.cast_neg",
   "AddGroupWithOne",
   "Int.instNegInt",
   "Eq.trans",
   "instHSub",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "AddGroup.toSubNegMonoid",
   "Int.instAddInt",
   "of_eq_true",
   "Int.cast",
   "SubNegMonoid.toAddMonoid",
   "congr",
   "congrArg",
   "Int"],
  "name": "Int.cast_sub",
  "constType":
  "∀ {R : Type u} [inst : AddGroupWithOne R] (m n : ℤ), ↑(m - n) = ↑m - ↑n",
  "constCategory": "Theorem"},
 {"references": ["One", "OfNat", "OfNat.mk", "One.one"],
  "name": "One.toOfNat1",
  "constType": "{α : Type u_1} → [inst : One α] → OfNat α 1",
  "constCategory": "Definition"},
 {"references": ["Lean.TSyntax", "Lean.SyntaxNodeKinds", "Lean.Syntax"],
  "name": "Lean.TSyntax.raw",
  "constType": "{ks : Lean.SyntaxNodeKinds} → Lean.TSyntax ks → Lean.Syntax",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_one",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "one_div",
   "DivInvMonoid.Pow",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Semiring.toNatCast",
   "Real.instOneReal",
   "IsROrC.charZero_isROrC",
   "Iff",
   "NormedDivisionRing.toDivisionRing",
   "Real.instPowReal",
   "LinearOrderedField.toLinearOrderedSemifield",
   "instOfNat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Summable",
   "Complex.instOneComplex",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "GroupWithZero.toInv",
   "Complex.instNontrivialComplex",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Prod.snd",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "PseudoMetricSpace.toUniformSpace",
   "map_inv₀",
   "SubadditiveHomClass.toFunLike",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "False.elim",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instNatAtLeastTwo",
   "congr",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Mathlib.Data.Int.Cast.Lemmas._auxLemma.8",
   "HEq",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "EisensteinSeries.AbsEise_bounded_on_square",
   "GE.ge",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "EisensteinSeries.rfunct_pos",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Real.instLTReal",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "Neg.neg",
   "FunLike.coe",
   "GroupWithZero.toMonoidWithZero",
   "LE.le",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "div_ne_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "instNatCastInt",
   "instTopologicalRingRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceToNonUnitalNonAssocRingToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "letFun",
   "Summable.of_nonneg_of_le",
   "Semifield.toDivisionSemiring",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Inv",
   "Semiring.toNonAssocSemiring",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Ring.toIntCast",
   "EisensteinSeries.squares_cover_all",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "GroupWithZero.toDivInvMonoid",
   "Real.orderedSemiring",
   "lt_of_not_ge",
   "Int.instLTInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "HEq.refl",
   "of_eq_true",
   "Int.cast",
   "Eq.mp",
   "NormedField.toNormedDivisionRing",
   "Int.ofNat",
   "StrictOrderedRing.toRing",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "TopologicalRing.toTopologicalSemiring",
   "summable_mul_left_iff",
   "AddMonoid.toZero",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "Mathlib.Algebra.Order.Field.Basic._auxLemma.5",
   "Int.instLinearOrderInt",
   "CommSemiring.toCommMonoidWithZero",
   "NeZero.charZero_one",
   "id",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "False",
   "AddMonoidWithOne.toAddMonoid",
   "Real.pseudoMetricSpace",
   "Real.rpow_int_cast",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.to_charZero",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedCommSemiring.toOrderedSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Eq.casesOn",
   "Bool",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Real.instAddMonoidReal",
   "Semifield.toCommGroupWithZero",
   "Iff.mpr",
   "Nat.cast_zero",
   "Real.orderedRing",
   "Mathlib.Meta.NormNum.isInt_add",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Complex.instField",
   "Mathlib.Tactic.Ring.neg_congr",
   "AbsEise",
   "HDiv.hDiv",
   "Linarith.lt_of_lt_of_eq",
   "HPow.hPow",
   "instHSub",
   "Complex.abs",
   "eq_of_heq",
   "Complex.instAddComplex",
   "Real.instRingReal",
   "Real.normedCommRing",
   "CommGroupWithZero.toCommMonoidWithZero",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Real.summable_nat_rpow_inv",
   "Complex.im",
   "MonoidWithZero.toMulZeroOneClass",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Int",
   "Inv.inv",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "AddMonoid.toAddZeroClass",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "DivInvMonoid.toDiv",
   "zpow_ne_zero",
   "NonUnitalNonAssocRing.toMul",
   "Not.intro",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Finset.sum",
   "Real.nontrivial",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "Mathlib.Tactic.Ring.neg_add",
   "AbsoluteValue.nonneg",
   "Bool.false",
   "Real.instPreorderReal",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.8",
   "Prod",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
   "Mathlib.Tactic.Ring.add_mul",
   "Real.instAddCommMonoidReal",
   "Mathlib.Tactic.Ring.atom_pf",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Modformsported.ForMathlib.EisensteinSeries.summable._auxLemma.12",
   "Real.orderedAddCommGroup",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Real.instLEReal",
   "Real.instSubReal",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "EisensteinSeries.square",
   "AddCommMonoid",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Ne",
   "Real.partialOrder",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "OrderedSemiring.zeroLEOneClass",
   "Real.intCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "Iff.symm",
   "instHMul",
   "Int.instAddGroupInt",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.instIsDomainRealSemiring",
   "Not",
   "ExistsUnique",
   "map_zpow₀",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "zpow_nonneg",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "instHPow",
   "Preorder.toLT",
   "TopologicalSpace",
   "Linarith.mul_neg",
   "add_lt_of_neg_of_le",
   "Real.strictOrderedRing",
   "Eq.symm",
   "funext",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "Finset.sum_nonneg",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Real.instZeroReal",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "sum_lemma",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.real_eise_is_summable",
  "constType": "∀ (k : ℤ) (z : UpperHalfPlane), 3 ≤ k → Summable (AbsEise k z)",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "Int.instSubInt",
   "instOfNatInt",
   "HAdd.hAdd",
   "Eq.refl",
   "Int.le.intro_sub",
   "Int.add_comm",
   "True",
   "Eq",
   "Eq.mpr",
   "Int.add_zero",
   "Nat.cast",
   "Int.instNegInt",
   "Nat",
   "Eq.symm",
   "Eq.trans",
   "id",
   "instHSub",
   "eq_self",
   "instHAdd",
   "HSub.hSub",
   "Neg.neg",
   "LE.le",
   "Int.instAddInt",
   "Eq.ndrec",
   "instNatCastInt",
   "of_eq_true",
   "Int.add_assoc",
   "congrArg",
   "Int.add_right_neg",
   "Int",
   "Int.instLEInt",
   "congrFun"],
  "name": "Int.le.intro",
  "constType": "∀ {a b : ℤ} (n : ℕ), a + ↑n = b → a ≤ b",
  "constCategory": "Theorem"},
 {"references":
  ["Bool.false",
   "Lean.replaceRef.match_1",
   "Lean.Syntax",
   "Lean.Syntax.getPos?",
   "String.Pos",
   "Option"],
  "name": "Lean.replaceRef",
  "constType": "Lean.Syntax → Lean.Syntax → Lean.Syntax",
  "constCategory": "Definition"},
 {"references": ["InvolutiveNeg", "Neg"],
  "name": "InvolutiveNeg.toNeg",
  "constType": "{A : Type u_2} → [self : InvolutiveNeg A] → Neg A",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "Eq.symm", "Eq"],
  "name": "Eq.substr",
  "constType": "∀ {α : Sort u} {p : α → Prop} {a b : α}, b = a → p a → p b",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableOn",
   "upper_half_plane_isOpen",
   "dite",
   "Finset.sum_const_zero",
   "Iff.mpr",
   "SetLike.instMembership",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "EisensteinSeries.eisenSquare'",
   "Finset.range",
   "NormedField.toNormedSpace",
   "UpperHalfPlane.upperHalfSpace",
   "Nat",
   "Finset.sum_congr",
   "Eq.trans",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Subtype",
   "Ne",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "Classical.propDecidable",
   "PseudoMetricSpace.toUniformSpace",
   "Finset.sum_dite_irrel",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Finset.instMembershipFinset",
   "Eq.mpr_prop",
   "Set.instMembershipSet",
   "TopologicalSpace.Opens.carrier",
   "of_eq_true",
   "propext",
   "congr",
   "Not",
   "congrArg",
   "Int",
   "SetLike.coe",
   "TopologicalSpace.Opens",
   "instOfNatInt",
   "Set",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "IsHolomorphicOn",
   "AddCommMonoid.toAddMonoid",
   "DifferentiableOn.sum",
   "dite_congr",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "EisensteinSeries.eisenSquare_diff_on",
   "TopologicalSpace.Opens.mk",
   "True",
   "isHolomorphicOn_iff_differentiableOn",
   "Zero.toOfNat0",
   "EisensteinSeries.eisenSquare",
   "AddMonoid.toZero",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "id",
   "eq_self",
   "Membership.mem",
   "funext",
   "extendByZero",
   "Finset.sum",
   "NormedField.toNormedCommRing",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "letFun",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Complex.instNormedAddCommGroupComplex",
   "DenselyNormedField.toNontriviallyNormedField",
   "Subtype.mk"],
  "name": "EisensteinSeries.eisenSquare'_diff_on",
  "constType":
  "∀ (k : ℤ), k ≠ 0 → ∀ (n : ℕ), IsHolomorphicOn (EisensteinSeries.eisenSquare' k n)",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "uniformity",
   "UniformSpace",
   "Prod.mk",
   "Set",
   "Prod",
   "Filter",
   "Filter.Eventually",
   "Set.instMembershipSet",
   "instMembershipSetFilter"],
  "name": "TendstoUniformly",
  "constType":
  "{α : Type u} → {β : Type v} → {ι : Type x} → [inst : UniformSpace β] → (ι → α → β) → (α → β) → Filter ι → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "PartialOrder.toPreorder",
   "AbsoluteValue.add_le'",
   "Semiring",
   "ZeroHomClass",
   "AbsoluteValue",
   "Semiring.toMonoidWithZero",
   "SubadditiveHomClass.mk",
   "Preorder.toLE",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OrderedSemiring",
   "Semiring.toNonAssocSemiring",
   "AbsoluteValue.zeroHomClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "ZeroHomClass.toFunLike",
   "OrderedSemiring.toSemiring",
   "MonoidWithZero.toZero",
   "SubadditiveHomClass",
   "OrderedSemiring.toPartialOrder"],
  "name": "AbsoluteValue.subadditiveHomClass",
  "constType":
  "{R : Type u_1} →\n  {S : Type u_2} → [inst : Semiring R] → [inst_1 : OrderedSemiring S] → SubadditiveHomClass (AbsoluteValue R S) R S",
  "constCategory": "Definition"},
 {"references":
  ["zsmul_eq_mul",
   "Ring.toAddGroupWithOne",
   "Int.castRingHom",
   "algebraInt.proof_1",
   "Algebra",
   "Ring",
   "Int.instCommSemiringInt",
   "Algebra.mk",
   "SubNegMonoid.SMulInt",
   "Ring.toSemiring",
   "AddGroup.toSubNegMonoid",
   "Int",
   "Ring.toNonAssocRing",
   "AddGroupWithOne.toAddGroup"],
  "name": "algebraInt",
  "constType": "(R : Type u_1) → [inst : Ring R] → Algebra ℤ R",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "StarOrderedRing.toStarRing",
   "Exists",
   "PartialOrder.toPreorder",
   "StarOrderedRing.toExistsAddOfLE.match_1",
   "NonUnitalSemiring",
   "HAdd.hAdd",
   "StarOrderedRing.le_iff",
   "AddCommMonoid.toAddMonoid",
   "Exists.intro",
   "AddMonoid.toAddZeroClass",
   "ExistsAddOfLE",
   "Preorder.toLE",
   "SetLike.instMembership",
   "AddSubmonoid.closure",
   "Eq",
   "Set.range",
   "Iff.mp",
   "InvolutiveStar.toStar",
   "StarRing.toStarMul",
   "StarMul.toInvolutiveStar",
   "Membership.mem",
   "Star.star",
   "StarOrderedRing",
   "instHAdd",
   "NonUnitalNonAssocSemiring.toMul",
   "AddSubmonoid",
   "LE.le",
   "NonUnitalNonAssocSemiring.toDistrib",
   "PartialOrder",
   "And",
   "instHMul",
   "AddSubmonoid.instSetLikeAddSubmonoid",
   "HMul.hMul",
   "ExistsAddOfLE.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring"],
  "name": "StarOrderedRing.toExistsAddOfLE",
  "constType":
  "∀ {R : Type u} [inst : NonUnitalSemiring R] [inst_1 : PartialOrder R] [inst_2 : StarOrderedRing R], ExistsAddOfLE R",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "EisensteinSeries.auxlem3",
   "DivInvMonoid.Pow",
   "Mathlib.Tactic.Ring.pow_zero",
   "AbsoluteValue.mulHomClass",
   "Semiring.toNatCast",
   "Complex.abs_ofReal",
   "IsROrC.charZero_isROrC",
   "AbsoluteValue.zeroHomClass",
   "NormedDivisionRing.toDivisionRing",
   "Mathlib.Algebra.GroupPower.Ring._auxLemma.4",
   "map_mul",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Complex.instOneComplex",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Mathlib.Algebra.Order.Hom.Basic._auxLemma.1",
   "instHDiv",
   "Complex.instZeroComplex",
   "Complex.instNontrivialComplex",
   "Prod.snd",
   "MulOneClass.toOne",
   "UpperHalfPlane.coe",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "SubadditiveHomClass.toFunLike",
   "False.elim",
   "Nat.noConfusion",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "MonoidWithZero.toZero",
   "congrFun",
   "CommMonoidWithZero.toZero",
   "instOfNatInt",
   "GE.ge",
   "Eq.refl",
   "EisensteinSeries.rfunct_mul_n_pos",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "Monoid.toNatPow",
   "map_zero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "OrderedRing.toOrderedSemiring",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.instCommSemiringComplex",
   "Nat.linearOrderedCommMonoidWithZero",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.mul_pow",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "Monoid.toMulOneClass",
   "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.10",
   "Nat.commSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Logic.Basic._auxLemma.43",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "Mathlib.Tactic.Ring.one_mul",
   "Semifield.toDivisionSemiring",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "Mathlib.Data.Int.CharZero._auxLemma.2",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "Rat.cast",
   "Mathlib.Algebra.Order.Ring.Defs._auxLemma.1",
   "not_false_eq_true",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Nat.cast_one",
   "Prod.fst",
   "Real.orderedSemiring",
   "MulZeroOneClass.toMulZeroClass",
   "Rat.divInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "of_eq_true",
   "Int.cast",
   "Eq.mp",
   "mul_one",
   "NormedField.toNormedDivisionRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "div_mul_eq_mul_div",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "eq_false'",
   "AddMonoid.toZero",
   "Complex.abs_natCast",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "Mathlib.Tactic.Ring.pow_atom",
   "id",
   "eq_self",
   "LinearOrderedCommMonoid.toOrderedCommMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "Field.isDomain",
   "div_pow",
   "StrictOrderedSemiring.toPartialOrder",
   "zpow_coe_nat",
   "OrderedCommSemiring.toOrderedSemiring",
   "Mathlib.Algebra.GroupWithZero.Units.Lemmas._auxLemma.2",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "pow_linear_ne_zero''",
   "Mathlib.Data.Rat.Cast.CharZero._auxLemma.11",
   "OrderedSemiring.toPartialOrder",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.2",
   "Distrib.toAdd",
   "Mathlib.Tactic.Ring.one_pow",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "mul_div_assoc'",
   "Semifield.toCommGroupWithZero",
   "DivisionRing.toRatCast",
   "AddGroupWithOne.toAddGroup",
   "Nat.cast_zero",
   "MulZeroClass.toMul",
   "pow_one",
   "Real.orderedRing",
   "Complex.Complex.addGroupWithOne",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "IsDomain.to_noZeroDivisors",
   "Complex.instField",
   "LinearOrderedCommMonoidWithZero.toZero",
   "HDiv.hDiv",
   "Mathlib.Tactic.Ring.pow_add",
   "HPow.hPow",
   "Complex.abs",
   "AbsoluteValue.pos",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "CommMagma.toMul",
   "Real.normedCommRing",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Modformsported.ForMathlib.EisensteinSeries.summable._auxLemma.2",
   "MonoidWithZero.toMulZeroOneClass",
   "AddMonoidWithOne.toOne",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Nat.cast_pow",
   "OrderedSemiring.toPosMulMono",
   "Int",
   "Inv.inv",
   "Exists",
   "LinearOrderedSemifield.toInv",
   "Real",
   "Semiring.toMonoidWithZero",
   "AddMonoid.toAddZeroClass",
   "True",
   "Abs.abs",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "map_pow",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "Ring.toAddGroupWithOne",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "Real.instPreorderReal",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Prod",
   "div_add'",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "AbsoluteValue.monoidWithZeroHomClass",
   "MulZeroOneClass.toMulOneClass",
   "Real.instLEReal",
   "Exists.casesOn",
   "implies_congr",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "DivisionCommMonoid.toDivisionMonoid",
   "OrderedCommMonoid.toPartialOrder",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "AbsoluteValue.nonnegHomClass",
   "Ne",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "Complex.charZero",
   "DivisionSemiring.toDiv",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "instHMul",
   "mul_le_mul_of_nonneg_left",
   "Real.instIsDomainRealSemiring",
   "Not",
   "congrArg",
   "add_zero",
   "Int.instLEInt",
   "Real.instLinearOrderedFieldReal",
   "DivisionRing.toRing",
   "CanLift.prf",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Int.linearOrderedCommRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "mul_comm",
   "Int.instRingInt",
   "instLENat",
   "one_mul",
   "instHPow",
   "Nat.monoid",
   "Eq.symm",
   "DivisionRing.toDiv",
   "Real.instMonoidReal",
   "instHAdd",
   "Mathlib.Tactic.Ring.single_pow",
   "Semiring.toOne",
   "Real.instZeroReal",
   "DivisionSemiring.toSemiring",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "inv_le_inv",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "LinearOrderedCommMonoidWithZero.toLinearOrderedCommMonoid",
   "NegZeroClass.toZero",
   "Complex.instMulComplex",
   "Nat.semiring"],
  "name": "EisensteinSeries.Eise_on_square_is_bounded_Case2",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane) (n : ℕ) (x : ℤ × ℤ),\n  1 ≤ n →\n    0 ≤ k →\n      Complex.abs ↑x.2 = ↑n →\n        (Complex.abs ((↑x.1 * ↑z + ↑x.2) ^ k))⁻¹ ≤ (Complex.abs (↑(EisensteinSeries.rfunct z) ^ k * ↑n ^ k))⁻¹",
  "constCategory": "Theorem"},
 {"references": ["LinearOrderedField", "LinearOrderedCommRing"],
  "name": "LinearOrderedField.toLinearOrderedCommRing",
  "constType":
  "{α : Type u_2} → [self : LinearOrderedField α] → LinearOrderedCommRing α",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "instOfNatNat",
   "Nat",
   "Matrix.empty_eq",
   "Matrix.vecEmpty",
   "Fin",
   "Eq"],
  "name": "Matrix.empty_val'",
  "constType": "∀ {α : Type u} {n' : Type u_4} (j : n'), (fun i => ![]) = ![]",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "Complex.abs",
   "PartialOrder.toPreorder",
   "AbsoluteValue",
   "Real",
   "FunLike.coe",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "Preorder.toLE",
   "NonUnitalNonAssocSemiring.toDistrib",
   "AbsoluteValue.subadditiveHomClass",
   "Norm",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Complex",
   "Norm.mk",
   "OrderedSemiring.toPartialOrder"],
  "name": "Complex.instNormComplex",
  "constType": "Norm ℂ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Exists",
  "constType": "{α : Sort u} → (α → Prop) → Prop",
  "constCategory": "Other"},
 {"references":
  ["Iff.mp",
   "summable_congr",
   "TopologicalSpace",
   "Summable",
   "Eq",
   "AddCommMonoid"],
  "name": "Summable.congr",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} [inst : AddCommMonoid α] [inst_1 : TopologicalSpace α] {f g : β → α},\n  Summable f → (∀ (b : β), f b = g b) → Summable g",
  "constCategory": "Theorem"},
 {"references":
  ["Zero",
   "OfNat.ofNat",
   "One",
   "DecidableEq",
   "Matrix",
   "Matrix.diagonal_apply_eq",
   "One.toOfNat1",
   "Matrix.one",
   "Eq"],
  "name": "Matrix.one_apply_eq",
  "constType":
  "∀ {n : Type u_3} {α : Type v} [inst : DecidableEq n] [inst_1 : Zero α] [inst_2 : One α] (i : n), OfNat.ofNat 1 i i = 1",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "True",
   "Nat.cast_mul",
   "Semiring.toNatCast",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Nat.monoid",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "Eq.trans",
   "Nat.succ",
   "Nat.cast_one",
   "id",
   "HPow.hPow",
   "eq_self",
   "instAddNat",
   "instHAdd",
   "Semiring",
   "One.toOfNat1",
   "pow_succ'",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Monoid.toMulOneClass",
   "pow_zero",
   "instHMul",
   "Nat.rec",
   "Eq.ndrec",
   "of_eq_true",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonAssocSemiring.toNatCast",
   "congr",
   "HMul.hMul",
   "instMulNat",
   "congrArg"],
  "name": "Nat.cast_pow",
  "constType":
  "∀ {R : Type u₁} [inst : Semiring R] (n m : ℕ), ↑(n ^ m) = ↑n ^ m",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "CommSemiring.toSemiring",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "NonUnitalCommSemiring.toCommSemigroup",
   "CommSemiring.toNonUnitalCommSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "CommMagma.toMul",
   "Eq",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Eq.ndrec",
   "MonoidWithZero.toMonoid",
   "CommSemigroup.toCommMagma",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instHPow",
   "CommSemiring",
   "HMul.hMul",
   "Monoid.toNatPow",
   "Nat",
   "mul_left_comm",
   "id"],
  "name": "Mathlib.Tactic.Ring.mul_pf_right",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a b₃ c : R} (b₁ : R) (b₂ : ℕ), a * b₃ = c → a * (b₁ ^ b₂ * b₃) = b₁ ^ b₂ * c",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.ofReal'",
   "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal.proof_3",
   "instHAdd",
   "UpperHalfPlane.mk",
   "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal.proof_1",
   "HAdd.hAdd",
   "Real",
   "Real.instAddMonoidReal",
   "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal.proof_2",
   "UpperHalfPlane.coe",
   "Complex",
   "UpperHalfPlane",
   "AddAction.mk",
   "Complex.instAddComplex",
   "AddAction",
   "VAdd.mk"],
  "name": "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal",
  "constType": "AddAction ℝ UpperHalfPlane",
  "constCategory": "Definition"},
 {"references":
  ["Neg.toHasAbs",
   "DistribLattice.toLattice",
   "SemilatticeSup.toSup",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "le_max_left",
   "instDistribLattice",
   "SemilatticeInf.toPartialOrder",
   "Neg.neg",
   "Lattice.toSemilatticeSup",
   "LE.le",
   "Abs.abs",
   "Preorder.toLE",
   "Neg"],
  "name": "le_abs_self",
  "constType":
  "∀ {α : Type u_1} [inst : Neg α] [inst_1 : LinearOrder α] (a : α), a ≤ |a|",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "PseudoMetricSpace.toDist",
   "Metric.closedBall",
   "propext",
   "Real.instLEReal",
   "Set",
   "Real",
   "Metric.mem_closedBall",
   "LE.le",
   "PseudoMetricSpace",
   "Eq",
   "Dist.dist",
   "Set.instMembershipSet"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.6",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {x y : α} {ε : ℝ}, (y ∈ Metric.closedBall x ε) = (dist y x ≤ ε)",
  "constCategory": "Theorem"},
 {"references":
  ["Filter.Tendsto.eventually",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Mathlib.Meta.NormNum.isNat_eq_false",
   "iff_false",
   "Real.instOneReal",
   "Semiring.toNatCast",
   "inferInstance",
   "Real.linearOrder",
   "IsROrC.charZero_isROrC",
   "Iff",
   "SemilatticeSup.toSup",
   "Real.instPowReal",
   "LinearOrderedField.toLinearOrderedSemifield",
   "le_of_lt",
   "instOfNat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Summable",
   "false_or",
   "Nat.strictOrderedSemiring",
   "instHDiv",
   "inv_lt_one_iff_of_pos",
   "instDistribLattice",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.norm",
   "PartialOrder",
   "Filter.Eventually.and",
   "And",
   "Nat.orderedSemiring",
   "propext",
   "congr",
   "instNatAtLeastTwo",
   "LinearOrder.toPartialOrder",
   "Norm.norm",
   "MonoidWithZero.toZero",
   "Real.rpow_one",
   "congrFun",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Mathlib.Analysis.PSeries._auxLemma.8",
   "Eq.refl",
   "Nat.cast_le_cast",
   "IsCancelAdd.toIsRightCancelAdd",
   "NormedField.toField",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Mathlib.Analysis.PSeries._auxLemma.9",
   "AddGroup.toAddCancelMonoid",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "zero_lt_one",
   "Lattice.toSemilatticeSup",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Nat.linearOrderedCommMonoidWithZero",
   "Real.instLTReal",
   "LE.le.trans",
   "Field.toSemifield",
   "LT.lt.not_le",
   "NormedField.toNormedCommRing",
   "LE.le",
   "Monoid.toMulOneClass",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "DivisionMonoid.toDivInvMonoid",
   "letFun",
   "Semifield.toDivisionSemiring",
   "Real.rpow_nonneg_of_nonneg",
   "NegZeroClass.toNeg",
   "MulOneClass.toMul",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.10",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "Semiring.toNonAssocSemiring",
   "Real.rpow_sub",
   "MonoidWithZero.toMonoid",
   "le_trans",
   "or_false",
   "And.casesOn",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Nat.cast_one",
   "Summable.tendsto_cofinite_zero",
   "Real.orderedSemiring",
   "True.intro",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.12",
   "of_eq_true",
   "DivInvOneMonoid.toInvOneClass",
   "Eq.mp",
   "Real.instAddGroupReal",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "LinearOrderedSemifield.toSemifield",
   "Real.natCast",
   "false_and",
   "SeminormedRing.toPseudoMetricSpace",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "AddMonoid.toZero",
   "Real.rpow_mul",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "id",
   "le_or_lt",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "AddMonoidWithOne.toAddMonoid",
   "Real.pseudoMetricSpace",
   "division_def",
   "Nat.cast_nonneg",
   "StrictOrderedSemiring.toSemiring",
   "Real.norm_eq_abs",
   "StrictOrderedSemiring.toPartialOrder",
   "zero_le_one",
   "Real.rpow_nat_cast",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Bool",
   "OrderedSemiring.toPartialOrder",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Nat.cast_pos",
   "Semifield.toCommGroupWithZero",
   "Nat.cast_zero",
   "Iff.mpr",
   "instTopologicalAddGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstAddGroupReal",
   "SubNegMonoid.toSub",
   "Filter.eventually_cofinite_ne",
   "Nat.cast",
   "Bool.true",
   "LinearOrderedCommMonoidWithZero.toZero",
   "HDiv.hDiv",
   "InvOneClass.toInv",
   "Filter.cofinite_neBot",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "instHSub",
   "Or",
   "Mathlib.Meta.NormNum.isNat_lt_false",
   "Real.instRingReal",
   "Mathlib.Meta.Positivity.nonneg_of_isNat",
   "Real.normedCommRing",
   "CommMagma.toMul",
   "Real.rpow_pos_of_pos",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Filter.cofinite",
   "Nat.cast_pow",
   "DivisionMonoid.toDivInvOneMonoid",
   "Inv.inv",
   "true_and",
   "Exists",
   "LT.lt.not_lt",
   "LinearOrderedSemifield.toInv",
   "Real",
   "Semiring.toMonoidWithZero",
   "inv_nonneg_of_nonneg",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "AddMonoid.toAddZeroClass",
   "Real.rpow_le_rpow",
   "Abs.abs",
   "True",
   "iff_self",
   "Real.instAddCommGroupReal",
   "Real.instCommMonoidReal",
   "AddMonoidWithOne.toNatCast",
   "UniformSpace.toTopologicalSpace",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Neg.toHasAbs",
   "Ring.toAddGroupWithOne",
   "Real.nontrivial",
   "pos_iff_ne_zero",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
   "Real.one_lt_rpow_iff_of_pos",
   "Bool.false",
   "Real.instPreorderReal",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
   "Real.instAddCommMonoidReal",
   "Real.orderedAddCommGroup",
   "Mathlib.Algebra.Order.Group.Defs._auxLemma.51",
   "zero_lt_two",
   "gt_mem_nhds",
   "Real.instMulReal",
   "Real.normedField",
   "Real.instSubReal",
   "Mathlib.Analysis.PSeries._auxLemma.6",
   "Exists.casesOn",
   "instLTNat",
   "Preorder.toLE",
   "NormedField.toNorm",
   "Eq",
   "inv_le_inv_of_le",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Mathlib.Analysis.PSeries._auxLemma.7",
   "DivisionCommMonoid.toDivisionMonoid",
   "Real.instInvReal",
   "Nat",
   "not_false",
   "OrderedAddCommMonoid.toPartialOrder",
   "Ne",
   "Real.partialOrder",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.canonicallyOrderedCommSemiring",
   "Or.casesOn",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Real.rpow_lt_one_iff",
   "instOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderReal",
   "DivInvMonoid.toInv",
   "DistribLattice.toLattice",
   "instHMul",
   "summable_condensed_iff_of_nonneg",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.orderedAddCommMonoid",
   "Not",
   "congrArg",
   "Zero",
   "Real.instLinearOrderedFieldReal",
   "AddCommMonoid.toAddMonoid",
   "Real.instNegReal",
   "Filter.Eventually.exists",
   "mul_comm",
   "Zero.toOfNat0",
   "instInfiniteNat",
   "instLENat",
   "instHPow",
   "Preorder.toLT",
   "Mathlib.Algebra.Order.Group.Defs._auxLemma.53",
   "and_false",
   "Nat.monoid",
   "CommMonoid.toMonoid",
   "Eq.symm",
   "funext",
   "LT.lt.le",
   "Real.instMonoidReal",
   "lt_of_le_of_lt",
   "nhds",
   "HSub.hSub",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "and_true",
   "AddGroup.toSubNegMonoid",
   "Real.instZeroReal",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "eq_false",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "SubNegMonoid.toAddMonoid",
   "HMul.hMul",
   "abs_of_pos",
   "NegZeroClass.toZero",
   "Nat.semiring"],
  "name": "Real.summable_nat_rpow_inv",
  "constType": "∀ {p : ℝ}, (Summable fun n => (↑n ^ p)⁻¹) ↔ 1 < p",
  "constCategory": "Theorem"},
 {"references": ["CommMagma", "Mul"],
  "name": "CommMagma.toMul",
  "constType": "{G : Type u} → [self : CommMagma G] → Mul G",
  "constCategory": "Definition"},
 {"references": ["cast", "HEq", "letFun", "HEq.rec", "rfl", "Eq"],
  "name": "eq_of_heq",
  "constType": "∀ {α : Sort u} {a a' : α}, HEq a a' → a = a'",
  "constCategory": "Theorem"},
 {"references":
  ["tsum_eq_zero_of_not_summable",
   "tsum_zero",
   "OfNat.ofNat",
   "Summable.tsum_mul_left",
   "DivisionSemiring",
   "TopologicalSemiring",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "MulZeroClass.zero_mul",
   "MulZeroClass.mul_zero",
   "dite",
   "AddCommMonoid.toAddMonoid",
   "MulZeroClass.toMul",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Iff.mp",
   "summable_mul_left_iff",
   "AddMonoid.toZero",
   "TopologicalSpace",
   "MulZeroClass.toZero",
   "Eq.trans",
   "Summable",
   "id",
   "eq_self",
   "funext",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Classical.propDecidable",
   "tsum",
   "NonUnitalNonAssocSemiring.toMul",
   "mt",
   "instHMul",
   "DivisionSemiring.toSemiring",
   "Eq.ndrec",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "T2Space",
   "congr",
   "Not",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "MonoidWithZero.toZero",
   "congrArg",
   "congrFun"],
  "name": "tsum_mul_left",
  "constType":
  "∀ {ι : Type u_1} {α : Type u_4} [inst : DivisionSemiring α] [inst_1 : TopologicalSpace α]\n  [inst_2 : TopologicalSemiring α] {f : ι → α} {a : α} [inst_3 : T2Space α], ∑' (x : ι), a * f x = a * ∑' (x : ι), f x",
  "constCategory": "Theorem"},
 {"references": ["MetricSpace", "NormedField"],
  "name": "NormedField.toMetricSpace",
  "constType": "{α : Type u_5} → [self : NormedField α] → MetricSpace α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "ZeroLEOneClass",
   "eq_true",
   "OfNat.ofNat",
   "NeZero",
   "PartialOrder.toPreorder",
   "One",
   "Preorder.toLT",
   "LT.lt",
   "zero_lt_one",
   "One.toOfNat1",
   "True",
   "Preorder.toLE",
   "Eq",
   "PartialOrder"],
  "name": "Mathlib.Algebra.Order.ZeroLEOne._auxLemma.2",
  "constType":
  "∀ {α : Type u_1} [inst : Zero α] [inst_1 : One α] [inst_2 : PartialOrder α] [inst_3 : ZeroLEOneClass α]\n  [inst_4 : NeZero 1], (0 < 1) = True",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Or",
  "constType": "Prop → Prop → Prop",
  "constCategory": "Other"},
 {"references":
  ["Array.mkArray2",
   "Lean.SyntaxNodeKind",
   "Lean.SourceInfo",
   "Lean.Syntax",
   "Lean.Syntax.node"],
  "name": "Lean.Syntax.node2",
  "constType":
  "Lean.SourceInfo → Lean.SyntaxNodeKind → Lean.Syntax → Lean.Syntax → Lean.Syntax",
  "constCategory": "Definition"},
 {"references":
  ["AddCommGroup.add_comm",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "NonAssocRing.one_mul",
   "NonUnitalNonAssocSemiring.mk",
   "AddGroup.toSubNegMonoid",
   "NonAssocSemiring",
   "NonAssocSemiring.mk",
   "NonUnitalNonAssocRing.left_distrib",
   "NonAssocRing.toOne",
   "NonAssocRing.mul_one",
   "AddCommMonoid.mk",
   "NonUnitalNonAssocRing.zero_mul",
   "NonAssocRing.natCast_succ",
   "SubNegMonoid.toAddMonoid",
   "NonAssocRing.toNatCast",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.right_distrib",
   "NonUnitalNonAssocRing.mul_zero",
   "NonAssocRing.natCast_zero",
   "NonUnitalNonAssocRing.toAddCommGroup"],
  "name": "NonAssocRing.toNonAssocSemiring",
  "constType": "{α : Type u_1} → [self : NonAssocRing α] → NonAssocSemiring α",
  "constCategory": "Definition"},
 {"references": ["NonUnitalSemiring", "NonUnitalCommSemiring"],
  "name": "NonUnitalCommSemiring.toNonUnitalSemiring",
  "constType":
  "{α : Type u} → [self : NonUnitalCommSemiring α] → NonUnitalSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Real.linearOrder",
   "inferInstance",
   "Real.instLTReal",
   "LT.lt",
   "Real",
   "Decidable",
   "instDecidableLtToLTToPreorderToPartialOrder"],
  "name": "Real.decidableLT",
  "constType": "(a b : ℝ) → Decidable (a < b)",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Real.instFloorRingRealInstLinearOrderedRingReal",
   "Complex.instNormedFieldComplex",
   "AddCommSemigroup.toAddCommMagma",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "upper_half_plane_isOpen",
   "Real.instAddMonoidReal",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "Real.instOneReal",
   "Complex.abs_ofReal",
   "UpperHalfPlane.re",
   "Real.linearOrder",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Nat.cast",
   "Int.cast_neg",
   "HSMul.hSMul",
   "UpperHalfPlane.upperHalfSpace",
   "Std.Classes.Order._auxLemma.3",
   "Int.instCommRingInt",
   "Subtype",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "add_comm",
   "PseudoMetricSpace.toUniformSpace",
   "UpperHalfPlane.coe",
   "Real.instRingReal",
   "UpperHalfPlane.modular_T_zpow_smul",
   "Real.instAddCommSemigroupReal",
   "instHVAdd",
   "AddCommMagma.toAdd",
   "SubadditiveHomClass.toFunLike",
   "le_abs_self",
   "Complex.im",
   "And",
   "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "And.intro",
   "Int",
   "Fin",
   "congrFun",
   "Exists",
   "Subtype.val",
   "Real",
   "Set",
   "GE.ge",
   "Eq.refl",
   "Exists.intro",
   "algebraInt",
   "TopologicalSpace.Opens.mk",
   "Abs.abs",
   "UpperHalfPlane.im",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "Eq.rec",
   "HVAdd.hVAdd",
   "UniformSpace.toTopologicalSpace",
   "UpperHalfPlane.vadd_im",
   "Neg.toHasAbs",
   "Complex.ofReal'",
   "Real.instLinearOrderedRingReal",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.4",
   "Neg.neg",
   "One.toOfNat1",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "LE.le",
   "ModularGroup.T",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "letFun",
   "Real.instPreorderReal",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "instHSMul",
   "Real.instSubReal",
   "Real.instLEReal",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.instSupReal",
   "UpperHalfPlane.SLAction",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Eq",
   "Matrix.SpecialLinearGroup.monoid",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "UpperHalfPlane",
   "Nat",
   "Eq.trans",
   "Nat.cast_one",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.5",
   "Fin.fintype",
   "Real.intCast",
   "Real.orderedSemiring",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "Int.cast",
   "Eq.mp",
   "AddAction.toVAdd",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.4",
   "congrArg",
   "TopologicalSpace.Opens",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "SeminormedRing.toPseudoMetricSpace",
   "Int.floor",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "instHPow",
   "Int.instNegInt",
   "instOfNatNat",
   "Eq.symm",
   "id",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "LT.lt.le",
   "instHAdd",
   "HSub.hSub",
   "AddGroupWithOne.toNeg",
   "Complex.re",
   "EisensteinSeries.abs_floor_sub",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "OrderedSemiring.toSemiring",
   "Complex",
   "Group.toDivInvMonoid",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.upp_half_translation",
  "constType":
  "∀ (z : UpperHalfPlane), ∃ n, ModularGroup.T ^ n • z ∈ EisensteinSeries.upperHalfSpaceSlice 1 (↑z).im",
  "constCategory": "Theorem"},
 {"references": ["NatCast", "Nat", "NatCast.natCast"],
  "name": "Nat.cast",
  "constType": "{R : Type u} → [inst : NatCast R] → ℕ → R",
  "constCategory": "Definition"},
 {"references":
  ["NoZeroDivisors",
   "IsDomain.toIsCancelMulZero",
   "NonUnitalNonAssocRing.toMul",
   "IsCancelMulZero.toIsRightCancelMulZero",
   "IsDomain",
   "Semiring.toMonoidWithZero",
   "IsRightCancelMulZero.to_noZeroDivisors",
   "Ring",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "MonoidWithZero.toZero",
   "Ring.toSemiring",
   "Ring.toNonAssocRing"],
  "name": "IsDomain.to_noZeroDivisors",
  "constType":
  "∀ (α : Type u_1) [inst : Ring α] [inst_1 : IsDomain α], NoZeroDivisors α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "AddMonoidWithOne",
   "OfNat.ofNat",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "AddMonoidWithOne.natCast_zero",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "instOfNatNat",
   "Nat",
   "Eq"],
  "name": "Nat.cast_zero",
  "constType": "∀ {R : Type u_1} [inst : AddMonoidWithOne R], ↑0 = 0",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "Real.instStrictOrderedCommRingReal",
   "Real",
   "OrderedRing",
   "StrictOrderedCommRing.toOrderedCommRing",
   "OrderedCommRing.toOrderedRing"],
  "name": "Real.orderedRing",
  "constType": "OrderedRing ℝ",
  "constCategory": "Definition"},
 {"references": ["MulZeroClass", "Mul"],
  "name": "MulZeroClass.toMul",
  "constType": "{M₀ : Type u} → [self : MulZeroClass M₀] → Mul M₀",
  "constCategory": "Definition"},
 {"references": ["DecidableEq", "Nat", "Nat.decEq"],
  "name": "instDecidableEqNat",
  "constType": "DecidableEq ℕ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "EStateM.Result",
  "constType": "Type u → Type u → Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["Fin.ne_of_val_ne",
   "instDecidableEqFin.match_1",
   "DecidableEq",
   "Fin.eq_of_val_eq",
   "Decidable.isFalse",
   "Fin.val",
   "Decidable",
   "Not",
   "Decidable.isTrue",
   "Nat",
   "decEq",
   "instDecidableEqNat",
   "Fin",
   "Eq"],
  "name": "instDecidableEqFin",
  "constType": "(n : ℕ) → DecidableEq (Fin n)",
  "constCategory": "Definition"},
 {"references": ["_obj"],
  "name": "EisensteinSeries.holExtn._cstage2",
  "constType": "_obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "OfNat.ofNat",
   "instHDiv",
   "GroupWithZero.toMonoidWithZero",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "Eq",
   "GroupWithZero.toDiv",
   "Zero.toOfNat0",
   "instHMul",
   "MonoidWithZero.toMulZeroOneClass",
   "propext",
   "GroupWithZero",
   "HMul.hMul",
   "div_eq_iff",
   "HDiv.hDiv",
   "MonoidWithZero.toZero"],
  "name": "Mathlib.Algebra.GroupWithZero.Units.Lemmas._auxLemma.1",
  "constType":
  "∀ {G₀ : Type u_3} [inst : GroupWithZero G₀] {a b c : G₀}, b ≠ 0 → (a / b = c) = (a = c * b)",
  "constCategory": "Theorem"},
 {"references":
  ["«termSL(_,_)».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.7._closed_3",
   "_obj",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_3",
   "Lean.Name.str._override"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_4._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["AddCommMagma",
   "AddSemigroup.toAdd",
   "AddCommSemigroup",
   "AddCommSemigroup.toAddSemigroup",
   "AddCommMagma.mk",
   "AddCommSemigroup.add_comm"],
  "name": "AddCommSemigroup.toAddCommMagma",
  "constType": "{G : Type u} → [self : AddCommSemigroup G] → AddCommMagma G",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Equiv",
  "constType": "Sort u_1 → Sort u_2 → Sort (max (max 1 u_1) u_2)",
  "constCategory": "Other"},
 {"references":
  ["Int.cast_one",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "Fin.instOneFin",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "UpperHalfPlane.coe'",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "AddGroupWithOne.toAddGroup",
   "SlashInvariantFormClass",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "EisensteinSeries.slash_action_eqn''",
   "IsDomain.to_noZeroDivisors",
   "Complex.instField",
   "Int.cast_neg",
   "NormedDivisionRing.toDivisionRing",
   "Subgroup.toSubmonoid",
   "HSMul.hSMul",
   "HasDistribNeg.toInvolutiveNeg",
   "Subgroup",
   "NonAssocRing.toNonAssocSemiring",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Matrix.one",
   "Subtype",
   "Complex.instOneComplex",
   "Int.instCommRingInt",
   "HPow.hPow",
   "Complex.instZeroComplex",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "MulOneClass.toOne",
   "eq_of_heq",
   "Matrix.semiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "Matrix.SpecialLinearGroup.hasOne",
   "Complex.im",
   "Units.instGroupUnits",
   "AddMonoidWithOne.toOne",
   "propext",
   "LT.lt",
   "congr",
   "Submonoid.smul",
   "Int",
   "UpperHalfPlane.instFactEvenNatInstAddNatCardFinOfNatInstOfNatNatFintype",
   "AddCommGroupWithOne.toAddGroupWithOne",
   "Fin",
   "Matrix.one_apply_eq",
   "congrFun",
   "SetLike.coe",
   "Fin.instZeroFin",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "HEq",
   "instOfNatInt",
   "Subtype.val",
   "Real",
   "Set",
   "SlashInvariantFormClass.toFunLike",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "NeZero.one",
   "Pi.instZero",
   "AddMonoid.toAddZeroClass",
   "heq_of_eq",
   "algebraInt",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "Matrix.det",
   "zero_add",
   "Complex.instSemiringComplex",
   "FunLike",
   "InvolutiveNeg.toNeg",
   "neg_mul",
   "Odd.neg_one_zpow",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "NonUnitalNonAssocRing.toMul",
   "Real.instLTReal",
   "Neg.neg",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Fin.nontrivial",
   "CommRing.toCommSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Mathlib.Algebra.NeZero._auxLemma.4",
   "Real.linearOrderedCommRing",
   "letFun",
   "Subtype.mk",
   "Subgroup.instSetLikeSubgroup",
   "MulOneClass.toMul",
   "instHSMul",
   "MulZeroOneClass.toMulOneClass",
   "neg_zero",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "UpperHalfPlane.SLAction",
   "SetLike.instMembership",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "Mathlib.Data.Subtype._auxLemma.1",
   "neg_eq_self_iff",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Ring.toNeg",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "Nat",
   "Odd",
   "not_false_eq_true",
   "Matrix.one_apply_ne",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "AddCommMonoid",
   "Complex.charZero",
   "Fin.fintype",
   "MulZeroOneClass.toZero",
   "Set.instMembershipSet",
   "Int.cast_zero",
   "instHMul",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "HEq.refl",
   "of_eq_true",
   "Int.cast",
   "Eq.mp",
   "CommRing.toRing",
   "Fin.instOfNatFin",
   "Not",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "NonAssocRing.toAddCommGroupWithOne",
   "Complex.instNegComplex",
   "AddGroupWithOne.toIntCast",
   "UpperHalfPlane.instMulActionSubtypeGeneralLinearGroupFinOfNatNatInstOfNatNatRealInstDecidableEqFinFintypeToCommRingToStrictOrderedCommRingLinearOrderedCommRingMemSubgroupInstGroupUnitsMatrixToMonoidToMonoidWithZeroSemiringToSemiringToCommSemiringInstMembershipInstSetLikeSubgroupGLPosUpperHalfPlaneToMonoidToMonoidToDivInvMonoidToSubmonoid",
   "MulZeroClass.zero_mul",
   "Matrix.GeneralLinearGroup",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "AddCommMonoid.toAddMonoid",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "outParam",
   "one_mul",
   "EisensteinSeries.neg_moeb_eq_id",
   "instHPow",
   "AddMonoid.toZero",
   "Matrix",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Module",
   "Eq.symm",
   "Fin.instCommRing",
   "Submonoid.toMonoid",
   "id",
   "Membership.mem",
   "NeZero.succ",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Matrix.SpecialLinearGroup.instNegSpecialLinearGroup",
   "AddGroupWithOne.toNeg",
   "FunLike.ext",
   "Semiring.toOne",
   "Real.instZeroReal",
   "Field.isDomain",
   "StrictOrderedCommRing.toCommRing",
   "Int.instAddCommGroupInt",
   "Int.instSemiringInt",
   "HMul.hMul",
   "Complex",
   "Matrix.GLPos",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Group.toDivInvMonoid",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.SlashInvariantForm_neg_one_in_lvl_odd_wt_eq_zero",
  "constType":
  "∀ {F : Type u_1} (k : ℤ),\n  Odd k →\n    ∀ (Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)),\n      -1 ∈ Γ →\n        ∀ [inst : SlashInvariantFormClass F Γ k] [inst_1 : AddCommMonoid F] [inst_2 : Module ℤ F],\n          ⇑0 = 0 → ∀ (f : F), f = 0",
  "constCategory": "Theorem"},
 {"references":
  ["LinearOrderedSemiring.mk",
   "StrictOrderedRing.toRing",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedRing.toLinearOrderedSemiring.proof_1",
   "LinearOrderedRing.toLinearOrderedSemiring.proof_2",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_right",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_left",
   "LinearOrderedRing.decidableEq",
   "LinearOrderedRing.min_def",
   "LinearOrderedRing.le_total",
   "Ring.toSemiring",
   "LinearOrderedRing.max_def",
   "StrictOrderedRing.toStrictOrderedSemiring",
   "LinearOrderedRing.decidableLE",
   "LinearOrderedRing.toLinearOrderedSemiring.proof_3",
   "StrictOrderedSemiring",
   "StrictOrderedSemiring.mk",
   "LinearOrderedRing.toOrd",
   "LinearOrderedRing",
   "LinearOrderedSemiring",
   "LinearOrderedRing.toMin",
   "LinearOrderedRing.toMax",
   "LinearOrderedRing.compare_eq_compareOfLessAndEq",
   "LinearOrderedRing.decidableLT",
   "StrictOrderedSemiring.le_of_add_le_add_left"],
  "name": "LinearOrderedRing.toLinearOrderedSemiring",
  "constType":
  "{α : Type u} → [inst : LinearOrderedRing α] → LinearOrderedSemiring α",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Bool",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["Ne",
   "OfNat.ofNat",
   "instHDiv",
   "eq_div_iff",
   "GroupWithZero.toMonoidWithZero",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "Eq",
   "GroupWithZero.toDiv",
   "Zero.toOfNat0",
   "instHMul",
   "MonoidWithZero.toMulZeroOneClass",
   "propext",
   "GroupWithZero",
   "HMul.hMul",
   "HDiv.hDiv",
   "MonoidWithZero.toZero"],
  "name": "Mathlib.Algebra.GroupWithZero.Units.Lemmas._auxLemma.2",
  "constType":
  "∀ {G₀ : Type u_3} [inst : GroupWithZero G₀] {a b c : G₀}, b ≠ 0 → (c = a / b) = (c * b = a)",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Nat.cast",
   "instNatCastInt",
   "instHPow",
   "DivInvMonoid",
   "Monoid.toNatPow",
   "DivInvMonoid.Pow",
   "Nat",
   "DivInvMonoid.toMonoid",
   "Int",
   "Eq",
   "zpow_ofNat"],
  "name": "zpow_coe_nat",
  "constType":
  "∀ {G : Type u_1} [inst : DivInvMonoid G] (a : G) (n : ℕ), a ^ ↑n = a ^ n",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "List",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["NonAssocRing",
   "NonAssocRing.toAddCommGroupWithOne",
   "MulZeroOneClass.toMulOneClass",
   "RingHomClass",
   "MulOneClass.toOne",
   "map_one",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "NonUnitalRingHomClass.toMulHomClass",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toMulZeroOneClass",
   "Eq",
   "RingHomClass.toNonUnitalRingHomClass",
   "Semiring.toOne",
   "NonAssocRing.toIntCast",
   "Semiring.toNonAssocSemiring",
   "RingHomClass.toAddMonoidHomClass",
   "RingHomClass.toMonoidHomClass",
   "Int.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Int.instSemiringInt",
   "MonoidHomClass.toOneHomClass",
   "eq_intCast'",
   "NonAssocRing.toNonAssocSemiring",
   "Int",
   "AddCommGroupWithOne.toAddGroupWithOne"],
  "name": "eq_intCast",
  "constType":
  "∀ {F : Type u_1} {α : Type u_3} [inst : NonAssocRing α] [inst_1 : RingHomClass F ℤ α] (f : F) (n : ℤ), f n = ↑n",
  "constCategory": "Theorem"},
 {"references":
  ["Int.ofNat", "Int.negOfNat", "Int.neg.match_1", "Nat", "Nat.succ", "Int"],
  "name": "Int.neg",
  "constType": "ℤ → ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "OfNat.ofNat",
   "of_decide_eq_true",
   "Nat.cast_ne_zero",
   "AddMonoidWithOne.toAddMonoid",
   "Eq.refl",
   "One.toOfNat1",
   "instDecidableEqNat",
   "Eq",
   "Zero.toOfNat0",
   "AddMonoidWithOne",
   "NeZero",
   "NeZero.mk",
   "Eq.mpr",
   "Eq.ndrec",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "CharZero",
   "AddMonoidWithOne.toOne",
   "instDecidableNot",
   "propext",
   "Bool.true",
   "AddMonoid.toZero",
   "instOfNatNat",
   "Bool",
   "Nat",
   "Eq.symm",
   "Nat.cast_one",
   "id"],
  "name": "NeZero.charZero_one",
  "constType":
  "∀ {M : Type u_1} [inst : AddMonoidWithOne M] [inst_1 : CharZero M], NeZero 1",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Monoid.toNatPow",
   "Nat",
   "Eq.symm",
   "Eq"],
  "name": "Mathlib.Tactic.Ring.pow_congr",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a a' : R} {b b' : ℕ} {c : R}, a = a' → b = b' → a' ^ b' = c → a ^ b = c",
  "constCategory": "Theorem"},
 {"references": ["AddGroup", "AddCommGroup"],
  "name": "AddCommGroup.toAddGroup",
  "constType": "{G : Type u} → [self : AddCommGroup G] → AddGroup G",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "SlashInvariantFormClass.mk",
   "SlashInvariantForm.toFun",
   "FunLike.mk",
   "instDecidableEqFin",
   "Fin.fintype",
   "SlashInvariantFormClass",
   "outParam",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Matrix.SpecialLinearGroup",
   "SlashInvariantForm",
   "SlashInvariantForm.slash_action_eq'",
   "SlashInvariantFormClass.slashInvariantForm.proof_1",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Complex",
   "Nat",
   "Int",
   "Fin",
   "Int.instCommRingInt"],
  "name": "SlashInvariantFormClass.slashInvariantForm",
  "constType":
  "(Γ : outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ))) →\n  (k : outParam ℤ) → SlashInvariantFormClass (SlashInvariantForm Γ k) Γ k",
  "constCategory": "Definition"},
 {"references":
  ["False",
   "instDecidableAnd.match_1",
   "Decidable.isFalse",
   "Decidable",
   "Decidable.isTrue",
   "Not",
   "absurd"],
  "name": "instDecidableNot",
  "constType": "{p : Prop} → [dp : Decidable p] → Decidable ¬p",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing",
   "NonUnitalSeminormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "NonUnitalCommRing.mk",
   "NonUnitalSeminormedCommRing.mul_comm",
   "NonUnitalSeminormedRing.toNonUnitalRing"],
  "name": "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
  "constType":
  "{α : Type u_1} → [β : NonUnitalSeminormedCommRing α] → NonUnitalCommRing α",
  "constCategory": "Definition"},
 {"references":
  ["Semigroup.toMul",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "CommRing.toNonUnitalCommRing",
   "Eq.refl",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "CommMagma.toMul",
   "CommRing",
   "Eq",
   "SemigroupWithZero.toSemigroup",
   "mul_comm",
   "instHMul",
   "mul_assoc",
   "Eq.mpr",
   "Eq.ndrec",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "NonUnitalSemiring.toSemigroupWithZero",
   "HMul.hMul",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Eq.symm",
   "id"],
  "name": "CancelDenoms.mul_subst",
  "constType":
  "∀ {α : Type u_1} [inst : CommRing α] {n1 n2 k e1 e2 t1 t2 : α},\n  n1 * e1 = t1 → n2 * e2 = t2 → n1 * n2 = k → k * (e1 * e2) = t1 * t2",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "MulOneClass.toMul",
   "instHDiv",
   "div_eq_mul_inv",
   "DivInvMonoid.toMonoid",
   "CommMagma.toMul",
   "Monoid.toMulOneClass",
   "True",
   "CommMonoid.toCommSemigroup",
   "DivInvMonoid.toInv",
   "Eq",
   "mul_comm",
   "instHMul",
   "mul_assoc",
   "of_eq_true",
   "DivisionCommMonoid.toDivisionMonoid",
   "CommSemigroup.toCommMagma",
   "DivisionCommMonoid.toCommMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "congr",
   "DivisionCommMonoid",
   "HMul.hMul",
   "HDiv.hDiv",
   "congrArg",
   "Eq.trans",
   "mul_left_comm",
   "congrFun",
   "Inv.inv",
   "DivInvMonoid.toDiv"],
  "name": "div_mul_eq_mul_div",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionCommMonoid α] (a b c : α), a / b * c = a * c / b",
  "constCategory": "Theorem"},
 {"references":
  ["eq_isEquiv",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens",
   "PartialHomeomorph.toPartialEquiv",
   "OfNat.ofNat",
   "Subtype.val",
   "upper_half_plane_isOpen",
   "Set",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "dite",
   "PartialHomeomorph.toFun'",
   "dite_congr",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "ite",
   "Eq",
   "Subtype.property",
   "Zero.toOfNat0",
   "Mathlib.Geometry.Manifold.ChartedSpace._auxLemma.5",
   "TopologicalSpace.Opens.instChartedSpace",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.rec",
   "ChartedSpace.chartAt",
   "Decidable",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "Subtype",
   "Subtype.coe_eta",
   "id",
   "Membership.mem",
   "Complex.instZeroComplex",
   "dif_pos",
   "extendByZero",
   "Function.comp",
   "Classical.propDecidable",
   "PseudoMetricSpace.toUniformSpace",
   "chartAt",
   "Eq.mpr_prop",
   "PartialHomeomorph.symm",
   "NormedField.toNormedCommRing",
   "chartedSpaceSelf",
   "Set.instMembershipSet",
   "PartialEquiv.source",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "of_eq_true",
   "PartialHomeomorph.left_inv",
   "letFun",
   "IsEquiv.toIsSymm",
   "symm",
   "Not",
   "Complex",
   "instTopologicalSpaceSubtype",
   "dite_eq_ite",
   "congrArg",
   "Subtype.mk",
   "congrFun",
   "SetLike.coe"],
  "name": "EisensteinSeries.ext_chart",
  "constType":
  "∀ (f : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ)\n  (z : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }),\n  extendByZero f ↑z = (f ∘ ↑(PartialHomeomorph.symm (chartAt ℂ z))) ↑z",
  "constCategory": "Theorem"},
 {"references": ["SeminormedRing", "PseudoMetricSpace"],
  "name": "SeminormedRing.toPseudoMetricSpace",
  "constType":
  "{α : Type u_5} → [self : SeminormedRing α] → PseudoMetricSpace α",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "OfNat.ofNat",
   "Trans.trans",
   "instHAdd",
   "HAdd.hAdd",
   "add_lt_add_left",
   "Preorder",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "instTransEq_1",
   "Preorder.toLT",
   "LT.lt",
   "CovariantClass",
   "add_zero",
   "Eq.symm",
   "AddZeroClass",
   "instTransLeToLELtToLT"],
  "name": "lt_add_of_le_of_pos",
  "constType":
  "∀ {α : Type u_1} [inst : AddZeroClass α] [inst_1 : Preorder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x < x_1] {a b c : α}, b ≤ c → 0 < a → b < c + a",
  "constCategory": "Theorem"},
 {"references":
  ["LinearOrderedAddCommMonoid.toLinearOrder",
   "Distrib.toAdd",
   "LT.lt.ne'",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Semiring.toMonoidWithZero",
   "NoZeroDivisors.mk",
   "Eq.refl",
   "And.left",
   "ExistsAddOfLE",
   "implies_congr",
   "MulZeroClass.toMul",
   "Preorder.toLE",
   "LT.lt.ne",
   "Eq",
   "Zero.toOfNat0",
   "And.right",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "mul_pos_of_neg_of_neg",
   "StrictOrderedSemiring.toMulPosStrictMono",
   "Preorder.toLT",
   "mul_neg_of_pos_of_neg",
   "MulZeroClass.toZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedSemiring.toLinearOrderedAddCommMonoid",
   "mul_neg_of_neg_of_pos",
   "id",
   "Ne.lt_or_lt",
   "Ne",
   "Or",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocSemiring.toMul",
   "Or.casesOn",
   "StrictOrderedSemiring.toSemiring",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NoZeroDivisors",
   "instHMul",
   "And",
   "Mathlib.Tactic.PushNeg.not_or_eq",
   "StrictOrderedSemiring.toPartialOrder",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "HMul.hMul",
   "LinearOrderedSemiring",
   "LinearOrder.toPartialOrder",
   "Not",
   "mul_pos",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "Mathlib.Tactic.Contrapose.mtr",
   "MonoidWithZero.toZero"],
  "name": "LinearOrderedSemiring.noZeroDivisors",
  "constType":
  "∀ {α : Type u} [inst : LinearOrderedSemiring α] [inst_1 : ExistsAddOfLE α], NoZeroDivisors α",
  "constCategory": "Definition"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "PartialOrder.toPreorder",
   "Finset.instSProd",
   "Finset.Icc",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.7",
   "Preorder.toLE",
   "Eq",
   "Nat.linearOrder",
   "And.right",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Eq.mpr",
   "Iff",
   "Nat.cast",
   "Int.instDecidableEqInt",
   "true_or",
   "Nat",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.8",
   "EisensteinSeries.square",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Eq.trans",
   "Nat.strictOrderedSemiring",
   "StrictOrderedRing.toPartialOrder",
   "Or",
   "Prod.snd",
   "Lattice.toSemilatticeInf",
   "instDistribLattice",
   "Finset.instMembershipFinset",
   "or_true",
   "Prod.fst",
   "Iff.intro",
   "_private.Modformsported.ForMathlib.EisensteinSeries.lattice_functions.0.EisensteinSeries.square._eq_1",
   "DistribLattice.toLattice",
   "And",
   "of_eq_true",
   "Eq.mp",
   "LinearOrder.toMax",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "And.intro",
   "congrArg",
   "Int",
   "congrFun",
   "LinearOrderedRing.toStrictOrderedRing",
   "Eq.refl",
   "Int.linearOrderedCommRing",
   "True",
   "Int.instRingInt",
   "AddMonoidWithOne.toNatCast",
   "instLENat",
   "SProd.sprod",
   "Finset",
   "Finset.filter",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Int.instNegInt",
   "Eq.symm",
   "id",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.9",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "EisensteinSeries.natAbs_le_mem_Icc",
   "Ring.toAddGroupWithOne",
   "SemilatticeInf.toPartialOrder",
   "Neg.neg",
   "Nat.instMaxNat",
   "LE.le",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.3",
   "Eq.ndrec",
   "StrictOrderedSemiring.to_charZero",
   "StrictOrderedSemiring.toPartialOrder",
   "instNatCastInt",
   "Max.max",
   "letFun",
   "Prod",
   "Int.natAbs"],
  "name": "EisensteinSeries.square_mem",
  "constType":
  "∀ (n : ℕ) (x : ℤ × ℤ), x ∈ EisensteinSeries.square ↑n ↔ max (Int.natAbs x.1) (Int.natAbs x.2) = n",
  "constCategory": "Theorem"},
 {"references": ["OrderedAddCommMonoid", "AddCommMonoid"],
  "name": "OrderedAddCommMonoid.toAddCommMonoid",
  "constType":
  "{α : Type u_3} → [self : OrderedAddCommMonoid α] → AddCommMonoid α",
  "constCategory": "Definition"},
 {"references": ["Nat", "Int"],
  "name": "Int.negSucc",
  "constType": "ℕ → ℤ",
  "constCategory": "Other"},
 {"references":
  ["eq_self",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "OfNat.ofNat",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "MulZeroClass.mul_zero",
   "NonUnitalNonAssocSemiring.toMul",
   "MulZeroClass.toMul",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "HMul.hMul",
   "MulZeroClass.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.mul_zero",
  "constType": "∀ {R : Type u_1} [inst : CommSemiring R] (a : R), a * 0 = 0",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Ne",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulZeroClass",
   "pow_eq_zero_iff'",
   "MulZeroClass.toMul",
   "Eq",
   "NoZeroDivisors",
   "Zero.toOfNat0",
   "MonoidWithZero.toMulZeroOneClass",
   "And",
   "MonoidWithZero.toMonoid",
   "propext",
   "instHPow",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nontrivial",
   "MonoidWithZero.toZero",
   "Nat",
   "MonoidWithZero"],
  "name": "Mathlib.Algebra.GroupPower.Ring._auxLemma.3",
  "constType":
  "∀ {M : Type u_3} [inst : MonoidWithZero M] [inst_1 : NoZeroDivisors M] [inst_2 : Nontrivial M] {a : M} {n : ℕ},\n  (a ^ n = 0) = (a = 0 ∧ n ≠ 0)",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "Lean.Name.mkStr",
   "Lean.ParserDescr.node",
   "Lean.Name.mkNum",
   "instOfNatNat",
   "Nat",
   "Lean.Name.anonymous",
   "Lean.ParserDescr",
   "Lean.ParserDescr.symbol"],
  "name":
  "EisensteinSeries.term↑ₕ._@.Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929",
  "constType": "Lean.ParserDescr",
  "constCategory": "Definition"},
 {"references":
  ["MulZeroClass.mk",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "MulZeroClass",
   "MulZeroOneClass.mul_zero",
   "MulZeroOneClass.zero_mul",
   "MulZeroOneClass.toZero",
   "MulZeroOneClass"],
  "name": "MulZeroOneClass.toMulZeroClass",
  "constType": "{M₀ : Type u} → [self : MulZeroOneClass M₀] → MulZeroClass M₀",
  "constCategory": "Definition"},
 {"references": ["Prod"],
  "name": "Prod.fst",
  "constType": "{α : Type u} → {β : Type v} → α × β → α",
  "constCategory": "Definition"},
 {"references":
  ["CommRing.toCommSemiring",
   "inferInstance",
   "CommSemiring",
   "Int",
   "Int.instCommRingInt"],
  "name": "Int.instCommSemiringInt",
  "constType": "CommSemiring ℤ",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "Real.instLinearOrderedFieldReal",
   "LinearOrderedField.toField",
   "Real",
   "Field"],
  "name": "Real.field",
  "constType": "Field ℝ",
  "constCategory": "Definition"},
 {"references": ["propext", "GE.ge", "ge_iff_le", "LE", "LE.le", "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.5",
  "constType": "∀ {α : Type u_1} [inst : LE α] {x y : α}, (x ≥ y) = (y ≤ x)",
  "constCategory": "Theorem"},
 {"references": ["LinearOrderedRing", "Max"],
  "name": "LinearOrderedRing.toMax",
  "constType": "{α : Type u} → [self : LinearOrderedRing α] → Max α",
  "constCategory": "Definition"},
 {"references": ["And.rec", "And", "And.intro"],
  "name": "And.casesOn",
  "constType":
  "{a b : Prop} → {motive : a ∧ b → Sort u} → (t : a ∧ b) → ((left : a) → (right : b) → motive (_ : a ∧ b)) → motive t",
  "constCategory": "Definition"},
 {"references": ["eq_true", "False.elim", "False", "Not", "True", "Eq"],
  "name": "not_false_eq_true",
  "constType": "(¬False) = True",
  "constCategory": "Theorem"},
 {"references": ["outParam"],
  "name": "HPow",
  "constType": "Type u → Type v → outParam (Type w) → Type (max (max u v) w)",
  "constCategory": "Other"},
 {"references":
  ["instDecidableEqProd.proof_3",
   "instDecidableEqProd.proof_1",
   "DecidableEq",
   "Decidable.isFalse",
   "Prod.mk",
   "Decidable",
   "instDecidableEqProd.match_1",
   "Not",
   "Decidable.isTrue",
   "Prod",
   "instDecidableEqProd.proof_2",
   "decEq",
   "Eq",
   "instDecidableEqProd.match_2"],
  "name": "instDecidableEqProd",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → [inst : DecidableEq α] → [inst : DecidableEq β] → DecidableEq (α × β)",
  "constCategory": "Definition"},
 {"references": ["trivial", "Or", "eq_true", "Or.inl", "True", "Eq"],
  "name": "true_or",
  "constType": "∀ (p : Prop), (True ∨ p) = True",
  "constCategory": "Theorem"},
 {"references":
  ["Ne",
   "OfNat.ofNat",
   "instAddNat",
   "instHAdd",
   "HAdd.hAdd",
   "pos_iff_ne_zero",
   "Nat.canonicallyOrderedCommSemiring",
   "Nat.add_one_le_iff",
   "LE.le",
   "instLTNat",
   "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
   "instLENat",
   "Iff",
   "LT.lt",
   "Iff.trans",
   "instOfNatNat",
   "Nat"],
  "name": "Nat.one_le_iff_ne_zero",
  "constType": "∀ {n : ℕ}, 1 ≤ n ↔ n ≠ 0",
  "constCategory": "Theorem"},
 {"references": ["Iff"],
  "name": "Iff.mp",
  "constType": "∀ {a b : Prop}, (a ↔ b) → a → b",
  "constCategory": "Definition"},
 {"references":
  ["Finset.disjUnion",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "instOfNatInt",
   "Finset.instSProd",
   "HAdd.hAdd",
   "Finset.Icc",
   "EisensteinSeries.square_disj",
   "Eq.refl",
   "Int.linearOrderedCommRing",
   "Eq",
   "Eq.mpr",
   "Int.instDecidableEqInt",
   "SProd.sprod",
   "Finset",
   "instDecidableEqProd",
   "Int.instNegInt",
   "EisensteinSeries.square",
   "Finset.instUnionFinset",
   "id",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Finset.disjUnion_eq_union",
   "instHAdd",
   "Union.union",
   "Neg.neg",
   "Int.instAddInt",
   "Eq.ndrec",
   "Prod",
   "EisensteinSeries.square_union",
   "Int"],
  "name": "EisensteinSeries.square_disjunion",
  "constType":
  "∀ (n : ℤ),\n  Finset.disjUnion (EisensteinSeries.square (n + 1)) (Finset.Icc (-n) n ×ˢ Finset.Icc (-n) n)\n      (_ : Disjoint (EisensteinSeries.square (n + 1)) (Finset.Icc (-n) n ×ˢ Finset.Icc (-n) n)) =\n    Finset.Icc (-(n + 1)) (n + 1) ×ˢ Finset.Icc (-(n + 1)) (n + 1)",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.natCast_zero",
   "Semiring.toOne",
   "Semiring.toNonUnitalSemiring",
   "Semiring.natCast_succ",
   "Semiring",
   "Semiring.mul_one",
   "Semiring.one_mul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "NonAssocSemiring",
   "NonAssocSemiring.mk",
   "Semiring.toNatCast"],
  "name": "Semiring.toNonAssocSemiring",
  "constType": "{α : Type u} → [self : Semiring α] → NonAssocSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Int.ofNat",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "DivisionRing",
   "instHDiv",
   "DivisionRing.toDivisionSemiring",
   "Ring.toAddGroupWithOne",
   "DivisionRing.toRing",
   "AddGroupWithOne.toIntCast",
   "Nat.rawCast",
   "True",
   "Int.cast_ofNat",
   "Eq",
   "Semiring.toNatCast",
   "DivisionSemiring.toSemiring",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "of_eq_true",
   "instNatCastInt",
   "Int.cast",
   "Rat.rawCast",
   "HDiv.hDiv",
   "Nat",
   "congrArg",
   "Eq.trans",
   "Int",
   "DivisionRing.toDiv",
   "congrFun"],
  "name": "Mathlib.Tactic.RingNF.rat_rawCast_pos",
  "constType":
  "∀ {n d : ℕ} {R : Type u_1} [inst : DivisionRing R], Rat.rawCast (Int.ofNat n) d = Nat.rawCast n / Nat.rawCast d",
  "constCategory": "Theorem"},
 {"references":
  ["Real.instDivisionRingReal",
   "HPow.hPow",
   "Complex.ofReal'",
   "Complex.ofReal_zpow",
   "Complex.instField",
   "instHPow",
   "Real",
   "DivInvMonoid.Pow",
   "Complex",
   "Field.toDivisionRing",
   "Eq.symm",
   "DivisionRing.toDivInvMonoid",
   "Int",
   "Eq"],
  "name": "Mathlib.Data.Complex.Basic._auxLemma.14",
  "constType": "∀ (r : ℝ) (n : ℤ), ↑r ^ n = ↑(r ^ n)",
  "constCategory": "Theorem"},
 {"references": ["outParam", "HAdd"],
  "name": "HAdd.hAdd",
  "constType":
  "{α : Type u} → {β : Type v} → {γ : outParam (Type w)} → [self : HAdd α β γ] → α → β → γ",
  "constCategory": "Definition"},
 {"references": ["cond.match_1", "Unit", "Bool"],
  "name": "cond",
  "constType": "{α : Type u} → Bool → α → α → α",
  "constCategory": "Definition"},
 {"references": ["PartialHomeomorph", "TopologicalSpace", "PartialEquiv"],
  "name": "PartialHomeomorph.toPartialEquiv",
  "constType":
  "{α : Type u_5} →\n  {β : Type u_6} →\n    [inst : TopologicalSpace α] → [inst_1 : TopologicalSpace β] → PartialHomeomorph α β → PartialEquiv α β",
  "constCategory": "Definition"},
 {"references":
  ["Min.min",
   "DistribLattice.toLattice",
   "And",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "propext",
   "instDistribLattice",
   "le_min_iff",
   "LinearOrder.toMin",
   "SemilatticeInf.toPartialOrder",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Mathlib.Order.MinMax._auxLemma.1",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b c : α}, (c ≤ min a b) = (c ≤ a ∧ c ≤ b)",
  "constCategory": "Theorem"},
 {"references": ["Coe", "semiOutParam"],
  "name": "Coe.mk",
  "constType": "{α : semiOutParam (Sort u)} → {β : Sort v} → (α → β) → Coe α β",
  "constCategory": "Other"},
 {"references": ["IsSymm", "IsEquiv"],
  "name": "IsEquiv.toIsSymm",
  "constType":
  "∀ {α : Type u} {r : α → α → Prop} [self : IsEquiv α r], IsSymm α r",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "Nat.rawCast",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toMulZeroOneClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "Eq",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "one_mul",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "HMul.hMul",
   "instOfNatNat",
   "Nat",
   "congrArg",
   "Eq.trans",
   "Nat.cast_one",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.one_mul",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (a : R), Nat.rawCast 1 * a = a",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Mathlib.Tactic.Ring.pow_zero",
   "Semiring.toNatCast",
   "Real.linearOrder",
   "IsROrC.charZero_isROrC",
   "Set.Elem",
   "LinearOrderedField.toLinearOrderedSemifield",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "Complex.instOneComplex",
   "Subtype",
   "Complex.instSubComplex",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "PseudoMetricSpace.toUniformSpace",
   "SubadditiveHomClass.toFunLike",
   "DivisionRing.toInv",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instNatAtLeastTwo",
   "congr",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "Mathlib.Tactic.Ring.atom_pf'",
   "Int.subNatNat",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "sub_nonpos_of_le",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "Set",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Int.rawCast",
   "Eq.refl",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "OrderedRing.toOrderedSemiring",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "EisensteinSeries.rfunct_pos",
   "Complex.instCommSemiringComplex",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Real.instLTReal",
   "EisensteinSeries.rfunct_lower_bound_on_slice",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.mul_add",
   "pow_pos",
   "Neg.neg",
   "Mathlib.Tactic.Ring.inv_congr",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "LE.le",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "Nat.commSemiring",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "letFun",
   "Mathlib.Tactic.Ring.one_mul",
   "DivisionMonoid.toDivInvMonoid",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.8",
   "NegZeroClass.toNeg",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Tactic.RingNF.int_rawCast_neg",
   "HAdd.hAdd",
   "AbsoluteValue",
   "Real.isROrC",
   "Mathlib.Tactic.Ring.div_pf",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Real.instCommSemiringReal",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Eq.trans",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Nat.cast_one",
   "neg_neg_of_pos",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.cast_ofNat",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "Int.cast",
   "Int.negSucc",
   "DivInvOneMonoid.toInvOneClass",
   "Eq.mp",
   "Real.instAddGroupReal",
   "mul_one",
   "Mathlib.Tactic.Ring.mul_one",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "lt_zero_of_zero_gt",
   "SeminormedRing.toPseudoMetricSpace",
   "pow_le_pow_left",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "Linarith.mul_nonpos",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "id",
   "Membership.mem",
   "inv_pow",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "IsCancelAdd.toIsLeftCancelAdd",
   "instAddNat",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.toPartialOrder",
   "EisensteinSeries.lbpoint",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Bool",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "Mathlib.Tactic.Ring.one_pow",
   "CommSemiring.toSemiring",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "upper_half_plane_isOpen",
   "Real.instAddMonoidReal",
   "Semifield.toCommGroupWithZero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Nat.cast_zero",
   "pow_one",
   "Real.orderedRing",
   "Mathlib.Tactic.Ring.inv_mul",
   "Complex.Complex.addGroupWithOne",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "le_of_not_gt",
   "Real.strictOrderedSemiring",
   "UpperHalfPlane.upperHalfSpace",
   "HDiv.hDiv",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Mathlib.Tactic.Ring.pow_add",
   "InvOneClass.toInv",
   "Left.add_neg",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "Real.instRingReal",
   "Real.normedCommRing",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "Inv.inv",
   "LinearOrderedSemifield.toInv",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Real.orderedCancelAddCommMonoid",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "StarOrderedRing.toExistsAddOfLE",
   "AddMonoid.toAddZeroClass",
   "TopologicalSpace.Opens.mk",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Mathlib.Tactic.Ring.inv_single",
   "UniformSpace.toTopologicalSpace",
   "Nat.succ",
   "CommGroupWithZero.toDivisionCommMonoid",
   "neg_nonpos_of_nonneg",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.cast_pos",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "DivInvMonoid.toMonoid",
   "AbsoluteValue.nonneg",
   "sub_neg_of_lt",
   "Bool.false",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.3",
   "Real.instPreorderReal",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Real.orderedAddCommGroup",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "MulZeroOneClass.toMulOneClass",
   "AddGroupWithOne.toSub",
   "Real.instLEReal",
   "Real.instMulReal",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.7",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Eq",
   "Mathlib.Tactic.RingNF.mul_assoc_rev",
   "OrderedRing.toRing",
   "AddZeroClass.toZero",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "Ring.toNeg",
   "DivisionCommMonoid.toDivisionMonoid",
   "Nat",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Real.partialOrder",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "mul_nonneg_of_nonpos_of_nonpos",
   "Mathlib.Tactic.Ring.add_congr",
   "Mathlib.Tactic.Ring.div_congr",
   "Int.instAddInt",
   "instHMul",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "congrArg",
   "add_zero",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.cast_subNatNat",
   "TopologicalSpace.Opens",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "DivisionRing.toRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "Preorder.toLT",
   "instHPow",
   "Ring.toSub",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "Real.instMonoidReal",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HSub.hSub",
   "AddGroupWithOne.toNeg",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "inv_le_inv",
   "Real.semiring",
   "SubNegMonoid.toAddMonoid",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "riemannZeta",
   "Complex",
   "Nat.semiring"],
  "name": "EisensteinSeries.rfunctbound",
  "constType":
  "∀ (k : ℕ) (A B : ℝ) (hb : 0 < B) (z : ↑(EisensteinSeries.upperHalfSpaceSlice A B)),\n  8 / EisensteinSeries.rfunct ↑z ^ k * Complex.abs (riemannZeta (↑k - 1)) ≤\n    8 / EisensteinSeries.rfunct (EisensteinSeries.lbpoint A B hb) ^ k * Complex.abs (riemannZeta (↑k - 1))",
  "constCategory": "Theorem"},
 {"references": ["Bool.false", "Bool.true", "Bool.rec", "Bool"],
  "name": "Bool.casesOn",
  "constType":
  "{motive : Bool → Sort u} → (t : Bool) → motive false → motive true → motive t",
  "constCategory": "Definition"},
 {"references":
  ["Lean.Name.anonymous._impl",
   "_obj",
   "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_1",
   "Lean.Name.str._override"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_3._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["Equiv",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "instOfNatInt",
   "instDecidableEqFin",
   "Fin.fintype",
   "One.toOfNat1",
   "FunLike.coe",
   "ModularGroup.T.proof_1",
   "Matrix.vecEmpty",
   "Equiv.instFunLikeEquiv",
   "Eq",
   "Matrix.det",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup",
   "Matrix.of",
   "Matrix",
   "instOfNatNat",
   "Matrix.vecCons",
   "Nat",
   "Int",
   "Subtype.mk",
   "Fin",
   "Int.instCommRingInt"],
  "name": "ModularGroup.T",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ",
  "constCategory": "Definition"},
 {"references": ["GroupWithZero", "Div"],
  "name": "GroupWithZero.toDiv",
  "constType": "{G₀ : Type u} → [self : GroupWithZero G₀] → Div G₀",
  "constCategory": "Definition"},
 {"references": [],
  "name": "AddMonoid",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references": ["And", "Exists", "propext", "exists_prop", "Eq"],
  "name": "Std.Logic._auxLemma.51",
  "constType": "∀ {b a : Prop}, (∃ (_ : a), b) = (a ∧ b)",
  "constCategory": "Theorem"},
 {"references": ["GroupWithZero", "MonoidWithZero"],
  "name": "GroupWithZero.toMonoidWithZero",
  "constType": "{G₀ : Type u} → [self : GroupWithZero G₀] → MonoidWithZero G₀",
  "constCategory": "Definition"},
 {"references": ["_obj"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_11._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["NormedField.toNormedCommRing.proof_2",
   "NormedField.toField",
   "Field.toCommRing",
   "NormedCommRing",
   "NormedField.toMetricSpace",
   "NormedField.dist_eq",
   "NormedField",
   "CommRing.toRing",
   "NormedRing.mk",
   "NormedCommRing.mk",
   "NormedField.toNormedCommRing.proof_1",
   "NormedField.toNorm"],
  "name": "NormedField.toNormedCommRing",
  "constType": "{α : Type u_1} → [inst : NormedField α] → NormedCommRing α",
  "constCategory": "Definition"},
 {"references":
  ["Finset.card",
   "Multiset.card",
   "AddZeroClass.toAdd",
   "congr_arg",
   "instHSMul",
   "AddHomClass.toFunLike",
   "Finset.sum",
   "Multiset.sum",
   "Function.const",
   "AddCommMonoid.toAddMonoid",
   "FunLike.coe",
   "Multiset.map_const",
   "AddMonoid.toAddZeroClass",
   "Multiset.replicate",
   "Eq",
   "AddMonoid.toNatSMul",
   "Multiset.map",
   "Nat.addMonoid",
   "HSMul.hSMul",
   "Finset",
   "Multiset",
   "Finset.val",
   "AddMonoidHomClass.toAddHomClass",
   "AddMonoidHom.addMonoidHomClass",
   "Nat",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Multiset.sum_replicate",
   "Eq.trans",
   "Multiset.instCanonicallyOrderedAddCommMonoidMultiset",
   "AddMonoidHom",
   "AddCommMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "Finset.sum_const",
  "constType":
  "∀ {β : Type u} {α : Type v} {s : Finset α} [inst : AddCommMonoid β] (b : β),\n  (Finset.sum s fun _x => b) = Finset.card s • b",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Set",
   "ContinuousAt",
   "Eq.refl",
   "_private.Mathlib.Topology.ContinuousOn.0.ContinuousOn._eq_1",
   "continuous_iff_continuousAt",
   "Iff.mpr",
   "Set.instMembershipSet",
   "Set.restrict",
   "Eq",
   "Iff.intro",
   "Eq.mpr",
   "Iff.mp",
   "Iff",
   "Eq.ndrec",
   "Set.Elem",
   "propext",
   "Continuous",
   "continuousWithinAt_iff_continuousAt_restrict",
   "TopologicalSpace",
   "instTopologicalSpaceSubtype",
   "ContinuousOn",
   "Subtype.mk",
   "ContinuousWithinAt",
   "Subtype.casesOn",
   "id"],
  "name": "continuousOn_iff_continuous_restrict",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β} {s : Set α},\n  ContinuousOn f s ↔ Continuous (Set.restrict s f)",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "mul_pos_iff_of_pos_left",
   "instHMul",
   "OfNat.ofNat",
   "propext",
   "Preorder.toLT",
   "LT.lt",
   "HMul.hMul",
   "MulZeroClass.toZero",
   "PosMulStrictMono",
   "MulZeroClass",
   "PosMulReflectLT",
   "Preorder",
   "MulZeroClass.toMul",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.4",
  "constType":
  "∀ {α : Type u_1} {a b : α} [inst : MulZeroClass α] [inst_1 : Preorder α] [inst_2 : PosMulStrictMono α]\n  [inst_3 : PosMulReflectLT α], 0 < a → (0 < a * b) = (0 < b)",
  "constCategory": "Theorem"},
 {"references":
  ["Algebra.toRingHom",
   "CommSemiring.toSemiring",
   "RingHom",
   "Semiring.toNonAssocSemiring",
   "Semiring",
   "CommSemiring",
   "Algebra"],
  "name": "algebraMap",
  "constType":
  "(R : Type u) → (A : Type v) → [inst : CommSemiring R] → [inst_1 : Semiring A] → [inst_2 : Algebra R A] → R →+* A",
  "constCategory": "Definition"},
 {"references":
  ["Min.min",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "add_nonpos",
   "PartialOrder.toPreorder",
   "mul_le_mul",
   "one_div",
   "Mathlib.Tactic.Ring.pow_zero",
   "And.left",
   "Complex.abs_ofReal",
   "Real.instOneReal",
   "Semiring.toNatCast",
   "Real.linearOrder",
   "And.right",
   "IsROrC.charZero_isROrC",
   "SemilatticeSup.toSup",
   "Set.Elem",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "Subtype",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "instDistribLattice",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "SubadditiveHomClass.toFunLike",
   "DivisionRing.toInv",
   "Mathlib.Algebra.Order.Monoid.Lemmas._auxLemma.2",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "And",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "congr",
   "instNatAtLeastTwo",
   "LinearOrder.toPartialOrder",
   "And.intro",
   "MonoidWithZero.toZero",
   "UpperHalfPlane.im_pos",
   "Mathlib.Tactic.Ring.atom_pf'",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "Set",
   "Mathlib.Meta.NormNum.isInt_mul",
   "GE.ge",
   "Int.rawCast",
   "Eq.refl",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "EisensteinSeries.abs_even_pow_eq_self",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "Lattice.toSemilatticeSup",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Real.instLinearOrderedRingReal",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Real.instLTReal",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.mul_add",
   "pow_pos",
   "add_lt_of_le_of_neg",
   "Mathlib.Tactic.Ring.inv_congr",
   "Neg.neg",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "LE.le",
   "EisensteinSeries.lb",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "Nat.commSemiring",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "Mathlib.Tactic.Ring.one_mul",
   "NegZeroClass.toNeg",
   "Subtype.mk",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Order.MinMax._auxLemma.1",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "AbsoluteValue",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.isROrC",
   "Real.instSupReal",
   "Mathlib.Tactic.Ring.div_pf",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "add_nonneg",
   "Real.instCommSemiringReal",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "EisensteinSeries.slice_mem",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Nat.cast_one",
   "Real.sqrt_le_sqrt_iff",
   "neg_neg_of_pos",
   "Lattice.toSemilatticeInf",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "lt_of_not_ge",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Set.instMembershipSet",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "OrderedCancelAddCommMonoid.toContravariantClassLeft",
   "DivInvOneMonoid.toInvOneClass",
   "Eq.mp",
   "Real.instAddGroupReal",
   "mul_one",
   "Mathlib.Tactic.Ring.mul_one",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "LinearOrderedRing.toStrictOrderedRing",
   "Linarith.lt_irrefl",
   "SeminormedRing.toPseudoMetricSpace",
   "pow_le_pow_left",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "LinearOrderedRing.toLinearOrder",
   "AddMonoid.toZero",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "id",
   "Membership.mem",
   "inv_pow",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "IsCancelAdd.toIsLeftCancelAdd",
   "instAddNat",
   "AddMonoidWithOne.toAddMonoid",
   "SemilatticeInf.toPartialOrder",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.toSemiring",
   "Complex.re",
   "sq_abs",
   "div_pow",
   "StrictOrderedSemiring.toPartialOrder",
   "EisensteinSeries.lbpoint",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "Mathlib.Tactic.Ring.one_pow",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "upper_half_plane_isOpen",
   "Real.instAddMonoidReal",
   "Semifield.toCommGroupWithZero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Nat.cast_zero",
   "pow_one",
   "Mathlib.Tactic.Ring.inv_mul",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "mul_pos_of_neg_of_neg",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "Real.strictOrderedSemiring",
   "UpperHalfPlane.upperHalfSpace",
   "HDiv.hDiv",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Mathlib.Tactic.Ring.pow_add",
   "InvOneClass.toInv",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "Complex.abs",
   "Or",
   "Real.instRingReal",
   "Real.normedCommRing",
   "Real.sqrt",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Complex.im",
   "Mathlib.Tactic.Ring.neg_zero",
   "inv_nonneg",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "OrderedSemiring.toMulPosMono",
   "OrderedSemiring.toPosMulMono",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "Inv.inv",
   "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.EisensteinSeries.rfunct._eq_1",
   "LinearOrderedSemifield.toInv",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Real.orderedCancelAddCommMonoid",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "StarOrderedRing.toExistsAddOfLE",
   "AddMonoid.toAddZeroClass",
   "TopologicalSpace.Opens.mk",
   "Abs.abs",
   "AbsoluteValue.subadditiveHomClass",
   "UpperHalfPlane.im",
   "Subtype.property",
   "pow_nonneg",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Mathlib.Tactic.Ring.inv_single",
   "UniformSpace.toTopologicalSpace",
   "Mathlib.Algebra.Parity._auxLemma.18",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "neg_nonpos_of_nonneg",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Or.inr",
   "Mathlib.Tactic.Ring.cast_pos",
   "Even",
   "Mathlib.Order.MinMax._auxLemma.3",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "DivInvMonoid.toMonoid",
   "le_zero_of_zero_ge",
   "Or.inl",
   "Real.instPreorderReal",
   "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Real.orderedAddCommGroup",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Real.instLEReal",
   "EisensteinSeries.aux4",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Eq",
   "AddZeroClass.toZero",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "Ring.toNeg",
   "DivisionCommMonoid.toDivisionMonoid",
   "EisensteinSeries.lbpoint.proof_1",
   "UpperHalfPlane",
   "Nat",
   "Real.instLinearOrderedSemiringReal",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Real.partialOrder",
   "OrderedSemiring.zeroLEOneClass",
   "sq_nonneg",
   "Nat.rawCast",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "mul_nonneg_of_nonpos_of_nonpos",
   "Mathlib.Tactic.Ring.div_congr",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "DistribLattice.toLattice",
   "instHMul",
   "IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "congrArg",
   "add_zero",
   "OrderedAddCommGroup.toAddCommGroup",
   "abs_nonneg",
   "TopologicalSpace.Opens",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "DivisionRing.toRing",
   "Mathlib.Meta.NormNum.isNat_add",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "instHPow",
   "Preorder.toLT",
   "div_nonneg",
   "MulZeroClass.toZero",
   "LinearOrder.toMin",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "pow_two_nonneg",
   "DivisionRing.toDiv",
   "LT.lt.le",
   "Real.instMonoidReal",
   "instHAdd",
   "AddSemigroup.toAdd",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "inv_le_inv",
   "Complex.mk",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "LinearOrderedRing.toMin",
   "NegZeroClass.toZero",
   "Nat.semiring"],
  "name": "EisensteinSeries.rfunct_lower_bound_on_slice",
  "constType":
  "∀ (A B : ℝ) (h : 0 < B) (z : ↑(EisensteinSeries.upperHalfSpaceSlice A B)),\n  EisensteinSeries.rfunct (EisensteinSeries.lbpoint A B h) ≤ EisensteinSeries.rfunct ↑z",
  "constCategory": "Theorem"},
 {"references":
  ["IsROrC.innerProductSpace",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "OfNat.ofNat",
   "instOfNatInt",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableOn",
   "upper_half_plane_isOpen",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "IsHolomorphicOn",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "Eq",
   "isHolomorphicOn_iff_differentiableOn",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Iff",
   "Complex.instIsROrCComplex",
   "NormedField.toNormedSpace",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace",
   "Subtype",
   "id",
   "Membership.mem",
   "Ne",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "extendByZero",
   "PseudoMetricSpace.toUniformSpace",
   "NormedField.toNormedCommRing",
   "EisensteinSeries.Eise'_has_deriv_within_at",
   "InnerProductSpace.toNormedSpace",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "TopologicalSpace.Opens.carrier",
   "propext",
   "letFun",
   "eise",
   "Complex",
   "Prod",
   "Complex.instNormedAddCommGroupComplex",
   "Int",
   "DenselyNormedField.toNontriviallyNormedField",
   "SetLike.coe"],
  "name": "EisensteinSeries.Eise'_has_diff_within_at",
  "constType":
  "∀ (k : ℤ) (y : ℤ × ℤ),\n  k ≠ 0 →\n    DifferentiableOn ℂ (extendByZero fun z => eise k z y)\n      ↑{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }",
  "constCategory": "Theorem"},
 {"references":
  ["IsROrC.innerProductSpace",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "OfNat.ofNat",
   "NormedAddCommGroup",
   "NontriviallyNormedField.toNormedField",
   "upper_half_plane_isOpen",
   "ChartedSpace",
   "instDecidableEqFin",
   "Subgroup.instTopSubgroup",
   "SetLike.instMembership",
   "Iff.mpr",
   "Eq",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "SlashInvariantForm",
   "Subgroup",
   "UpperHalfPlane.upperHalfSpace",
   "UpperHalfPlane",
   "Nat",
   "Subtype",
   "Int.instCommRingInt",
   "MDifferentiable",
   "Complex.instDenselyNormedFieldComplex",
   "eq_of_heq",
   "PseudoMetricSpace.toUniformSpace",
   "SlashInvariantForm.toFun",
   "Fin.fintype",
   "ModelWithCorners",
   "InnerProductSpace.toNormedSpace",
   "Matrix.SpecialLinearGroup",
   "HEq.refl",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "EisensteinSeries.holExtn",
   "Int",
   "Int.instLEInt",
   "Fin",
   "TopologicalSpace.Opens",
   "HEq",
   "instOfNatInt",
   "SlashInvariantFormClass.toFunLike",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "IsHolomorphicOn",
   "NormedSpace",
   "TopologicalSpace.Opens.mk",
   "EisensteinSeries.Eisenstein_SIF",
   "TopologicalSpace.Opens.instChartedSpace",
   "Eisenstein_tsum",
   "Complex.instIsROrCComplex",
   "SlashInvariantFormClass.slashInvariantForm",
   "TopologicalSpace",
   "instOfNatNat",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "id",
   "Membership.mem",
   "NontriviallyNormedField",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "Top.top",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "chartedSpaceSelf",
   "LE.le",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "EisensteinSeries.Eisenstein_is_holomorphic'",
   "letFun",
   "EisensteinSeries.mdiff_iff_holo",
   "Complex",
   "instTopologicalSpaceSubtype",
   "Eq.casesOn",
   "Complex.instNormedAddCommGroupComplex",
   "modelWithCornersSelf",
   "DenselyNormedField.toNontriviallyNormedField"],
  "name": "EisensteinSeries.Eisenstein_series_is_mdiff",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    MDifferentiable (modelWithCornersSelf ℂ ℂ) (modelWithCornersSelf ℂ ℂ)\n      (EisensteinSeries.holExtn ⇑(EisensteinSeries.Eisenstein_SIF ⊤ k))",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "AddZeroClass.toAdd",
   "AddZeroClass.toZero",
   "OfNat.ofNat",
   "instHAdd",
   "HAdd.hAdd",
   "AddZeroClass.zero_add",
   "AddZeroClass",
   "Eq"],
  "name": "zero_add",
  "constType": "∀ {M : Type u} [inst : AddZeroClass M] (a : M), 0 + a = a",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "Prod",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "EisensteinSeries.MoebiusEquiv._elambda_1",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ → ℤ × ℤ → ℤ × ℤ",
  "constCategory": "Axiom"},
 {"references":
  ["AddZeroClass.toAdd",
   "OfNat.ofNat",
   "Iff.rfl",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Eq.refl",
   "sub_eq_add_neg",
   "AddMonoid.toAddZeroClass",
   "AddGroup.covconv_swap",
   "Iff.mpr",
   "Eq",
   "Zero.toOfNat0",
   "SubNegMonoid.toSub",
   "Function.swap",
   "AddZeroClass.toZero",
   "zero_add",
   "Eq.mpr",
   "AddGroup",
   "Iff",
   "LE",
   "add_le_add_iff_right",
   "Eq.symm",
   "neg_add_cancel_right",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "instHSub",
   "instHAdd",
   "HSub.hSub",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "Eq.ndrec",
   "propext",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "NegZeroClass.toZero"],
  "name": "sub_nonpos_of_le",
  "constType":
  "∀ {α : Type u} [inst : AddGroup α] [inst_1 : LE α]\n  [inst_2 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] {a b : α}, a ≤ b → a - b ≤ 0",
  "constCategory": "Theorem"},
 {"references":
  ["Field.zpow_succ'",
   "DivisionRing",
   "DivisionRing.mk",
   "Field.zpow_zero'",
   "Field.toNontrivial",
   "Field.toInv",
   "Field.zpow",
   "Field.zpow_neg'",
   "Field.toRatCast",
   "Field.toCommRing",
   "Field.qsmul_eq_mul'",
   "Field.mul_inv_cancel",
   "Field",
   "CommRing.toRing",
   "Field.inv_zero",
   "Field.toDiv",
   "Field.qsmul",
   "Field.ratCast_mk",
   "Field.div_eq_mul_inv"],
  "name": "Field.toDivisionRing",
  "constType": "{K : Type u} → [self : Field K] → DivisionRing K",
  "constCategory": "Definition"},
 {"references": ["LinearOrder", "PartialOrder"],
  "name": "LinearOrder.toPartialOrder",
  "constType": "{α : Type u} → [self : LinearOrder α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references":
  ["Nat.AtLeastTwo",
   "OfNat.ofNat",
   "Nat.AtLeastTwo.mk",
   "instAddNat",
   "instHAdd",
   "HAdd.hAdd",
   "Nat.succ_le_succ",
   "instOfNatNat",
   "Nat.zero_le",
   "Nat"],
  "name": "instNatAtLeastTwo",
  "constType": "∀ {n : ℕ}, Nat.AtLeastTwo (n + 2)",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup.toMetricSpace",
   "NormedAddCommGroup.toAddCommGroup",
   "SeminormedAddCommGroup.mk",
   "NormedAddCommGroup",
   "SeminormedAddCommGroup",
   "MetricSpace.toPseudoMetricSpace",
   "NormedAddCommGroup.dist_eq",
   "NormedAddCommGroup.toNorm"],
  "name": "NormedAddCommGroup.toSeminormedAddCommGroup",
  "constType":
  "{E : Type u_6} → [inst : NormedAddCommGroup E] → SeminormedAddCommGroup E",
  "constCategory": "Definition"},
 {"references":
  ["Units.instGroupUnits.proof_4",
   "zpowRec",
   "MulOneClass.toMul",
   "Monoid.mk",
   "Units.instInv",
   "Units.instGroupUnits.proof_8",
   "MulOneClass",
   "Units.instGroupUnits.proof_7",
   "npowRec",
   "Units.instGroupUnits.proof_10",
   "Inv.mk",
   "Units.val_inv",
   "inferInstance",
   "Group.mk",
   "Div.mk",
   "Group",
   "Units.mk",
   "Units.instGroupUnits.proof_3",
   "Semigroup.mk",
   "Units.instGroupUnits.proof_11",
   "Units.instGroupUnits.proof_2",
   "Monoid",
   "MulOneClass.toOne",
   "Units.inv_val",
   "Units.instGroupUnits.proof_5",
   "DivInvMonoid.mk",
   "Units.instGroupUnits.proof_1",
   "DivInvMonoid.div'",
   "Units.inv",
   "Units.instGroupUnits.proof_9",
   "Units",
   "Units.instMulOneClassUnits",
   "Units.instGroupUnits.proof_6",
   "Units.val",
   "Inv.inv"],
  "name": "Units.instGroupUnits",
  "constType": "{α : Type u} → [inst : Monoid α] → Group αˣ",
  "constCategory": "Definition"},
 {"references":
  ["Int.decLe",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "StrictOrderedRing.toOrderedRing'",
   "LinearOrderedRing.toStrictOrderedRing",
   "OrderedRing",
   "Int.linearOrderedCommRing",
   "Int"],
  "name": "Int.orderedRing",
  "constType": "OrderedRing ℤ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "And",
  "constType": "Prop → Prop → Prop",
  "constCategory": "Other"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "NormedLatticeAddCommGroup.orderClosedTopology",
   "one_div",
   "DivInvMonoid.Pow",
   "instUniformAddGroupRealToUniformSpacePseudoMetricSpaceInstAddGroupReal",
   "Semiring.toNatCast",
   "Set.Elem",
   "NormedDivisionRing.toDivisionRing",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Complex.instOneComplex",
   "Subtype",
   "Summable",
   "GroupWithZero.toInv",
   "Complex.instNontrivialComplex",
   "instHDiv",
   "separated_t3",
   "Prod.snd",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "PseudoMetricSpace.toUniformSpace",
   "map_inv₀",
   "SubadditiveHomClass.toFunLike",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instNatAtLeastTwo",
   "LinearOrder.toPartialOrder",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Set",
   "EisensteinSeries.AbsEise_bounded_on_square",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "Int.add_one_le_iff",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Real.instLTReal",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "PolishSpace.t2Space",
   "MulHomClass.toFunLike",
   "Neg.neg",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "GroupWithZero.toMonoidWithZero",
   "LE.le",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "letFun",
   "Summable.of_nonneg_of_le",
   "Semifield.toDivisionSemiring",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "HAdd.hAdd",
   "AbsoluteValue",
   "AddGroup.toSubtractionMonoid",
   "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.AbsEise._eq_1",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Ring.toIntCast",
   "EisensteinSeries.squares_cover_all",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "le_trans",
   "instSecondCountableTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpace",
   "T3Space.toT0Space",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "StrictOrderedRing.toPartialOrder",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "GroupWithZero.toDivInvMonoid",
   "Real.orderedSemiring",
   "Int.instLTInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Set.instMembershipSet",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "Int.cast",
   "Real.metricSpace",
   "Eq.mp",
   "Real.normedLatticeAddCommGroup",
   "NormedField.toNormedDivisionRing",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "SeminormedRing.toPseudoMetricSpace",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "LinearOrderedField.toDiv",
   "EisensteinSeries.rfunctbound'",
   "EisensteinSeries.summable_rfunct_twist",
   "AddMonoid.toZero",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "Mathlib.Algebra.Order.Field.Basic._auxLemma.5",
   "Int.instLinearOrderInt",
   "NeZero.charZero_one",
   "CommSemiring.toCommMonoidWithZero",
   "id",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "Real.pseudoMetricSpace",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.to_charZero",
   "StrictOrderedSemiring.toPartialOrder",
   "EisensteinSeries.lbpoint",
   "zpow_coe_nat",
   "OrderedCommSemiring.toOrderedSemiring",
   "Bool",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "upper_half_plane_isOpen",
   "AddCommGroup.toAddCommMonoid",
   "Semifield.toCommGroupWithZero",
   "Iff.mpr",
   "Real.orderedRing",
   "Mathlib.Meta.NormNum.isInt_add",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Complex.instField",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "AbsEise",
   "UpperHalfPlane.upperHalfSpace",
   "HDiv.hDiv",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "tsum_lemma",
   "Complex.instAddComplex",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Complex.im",
   "MonoidWithZero.toMulZeroOneClass",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "LT.lt",
   "polishSpace_of_complete_second_countable",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Int",
   "Inv.inv",
   "Exists",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Data.Prod.Basic._auxLemma.1",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "AddMonoid.toAddZeroClass",
   "TopologicalSpace.Opens.mk",
   "AbsoluteValue.subadditiveHomClass",
   "Real.instAddCommGroupReal",
   "AddMonoid.toAddSemigroup",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "DivInvMonoid.toDiv",
   "EisensteinSeries.real_eise_is_summable",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Finset.sum",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "Mathlib.Tactic.Ring.neg_add",
   "AbsoluteValue.nonneg",
   "tsum_le_tsum",
   "Prod.mk",
   "Bool.false",
   "Real.instPreorderReal",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Prod",
   "Mathlib.Tactic.Ring.add_mul",
   "Real.instAddCommMonoidReal",
   "Mathlib.Tactic.Ring.atom_pf",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Real.instLEReal",
   "Real.instMulReal",
   "Exists.casesOn",
   "implies_congr",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Real.instInvReal",
   "Nat",
   "EisensteinSeries.square",
   "Finset.sum_congr",
   "OrderedAddCommMonoid.toPartialOrder",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "DivisionSemiring.toGroupWithZero",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "Int.instAddInt",
   "instHMul",
   "Int.instAddGroupInt",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.instIsDomainRealSemiring",
   "ExistsUnique",
   "congrArg",
   "map_zpow₀",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "TopologicalSpace.Opens",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "instCompleteSpaceRealToUniformSpacePseudoMetricSpace",
   "CanLift.prf",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "AddCommMonoid.toAddMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "zpow_nonneg",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "forall_congr",
   "instHPow",
   "Preorder.toLT",
   "Linarith.mul_neg",
   "add_lt_of_neg_of_le",
   "funext",
   "Real.instMonoidReal",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "tsum",
   "Finset.sum_nonneg",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "Complex.instMulComplex",
   "MetricSpace.to_separated"],
  "name": "EisensteinSeries.AbsEisen_slice_bounded",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (A B : ℝ) (hb : 0 < B) (z : ↑(EisensteinSeries.upperHalfSpaceSlice A B)),\n      ∑' (x : ℤ × ℤ), AbsEise k (↑z) x ≤\n        ∑' (n : ℕ), 8 / EisensteinSeries.rfunct (EisensteinSeries.lbpoint A B hb) ^ k * (↑n ^ (k - 1))⁻¹",
  "constCategory": "Theorem"},
 {"references": ["Zero", "SMul", "SMulZeroClass"],
  "name": "SMulZeroClass.toSMul",
  "constType":
  "{M : Type u_10} → {A : Type u_11} → [inst : Zero A] → [self : SMulZeroClass M A] → SMul M A",
  "constCategory": "Definition"},
 {"references":
  ["add_le_add_iff_left",
   "propext",
   "instHAdd",
   "HAdd.hAdd",
   "CovariantClass",
   "LE",
   "Add",
   "LE.le",
   "ContravariantClass",
   "Eq"],
  "name": "Mathlib.Algebra.Order.Monoid.Lemmas._auxLemma.2",
  "constType":
  "∀ {α : Type u_1} [inst : Add α] [inst_1 : LE α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1]\n  [inst_3 : ContravariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] (a : α) {b c : α},\n  (a + b ≤ a + c) = (b ≤ c)",
  "constCategory": "Theorem"},
 {"references":
  ["DistribLattice.toLattice",
   "And",
   "PartialOrder.toPreorder",
   "Iff",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "instDistribLattice",
   "LinearOrder.toMax",
   "Max.max",
   "SemilatticeInf.toPartialOrder",
   "Lattice.toSemilatticeSup",
   "LE.le",
   "sup_le_iff",
   "Preorder.toLE"],
  "name": "max_le_iff",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b c : α}, max a b ≤ c ↔ a ≤ c ∧ b ≤ c",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Subtype.val",
   "Set",
   "upper_half_plane_isOpen",
   "Real",
   "CoeOut",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "CoeOut.mk",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "Set.instMembershipSet",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Set.Elem",
   "UpperHalfPlane",
   "UpperHalfPlane.upperHalfSpace",
   "Complex",
   "UniformSpace.toTopologicalSpace",
   "Subtype"],
  "name": "EisensteinSeries.sliceCoe",
  "constType":
  "(A B : ℝ) → CoeOut (↑(EisensteinSeries.upperHalfSpaceSlice A B)) UpperHalfPlane",
  "constCategory": "Definition"},
 {"references": ["One", "MulOneClass"],
  "name": "MulOneClass.toOne",
  "constType": "{M : Type u} → [self : MulOneClass M] → One M",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "DenselyNormedField",
   "DenselyNormedField.mk",
   "Complex",
   "Complex.instDenselyNormedFieldComplex.proof_1"],
  "name": "Complex.instDenselyNormedFieldComplex",
  "constType": "DenselyNormedField ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "MulZeroClass.mul_zero",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero.match_1",
   "Nat.cast_zero",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "AddMonoid.toZero",
   "Monoid.toNatPow",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "Nat",
   "Mathlib.Tactic.Ring.Basic._auxLemma.1",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.trans",
   "eq_self",
   "HPow.hPow",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Distrib.leftDistribClass",
   "instHMul",
   "Mathlib.Meta.NormNum.IsNat",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "HMul.hMul",
   "congrArg"],
  "name": "Mathlib.Tactic.Ring.add_overlap_pf_zero",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a b : R} (x : R) (e : ℕ),\n  Mathlib.Meta.NormNum.IsNat (a + b) 0 → Mathlib.Meta.NormNum.IsNat (x ^ e * a + x ^ e * b) 0",
  "constCategory": "Theorem"},
 {"references":
  ["Min.min",
   "HPow.hPow",
   "OfNat.ofNat",
   "Real.instLinearOrderedRingReal",
   "Real.instMonoidReal",
   "Real.instLTReal",
   "Subtype.val",
   "Real",
   "Eq.refl",
   "EisensteinSeries.rfunct",
   "Real.sqrt",
   "EisensteinSeries.lb",
   "Eq",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Complex.im",
   "instHPow",
   "LT.lt",
   "Monoid.toNatPow",
   "instOfNatNat",
   "UpperHalfPlane",
   "Complex",
   "LinearOrderedRing.toMin",
   "Nat"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.bounds.0.EisensteinSeries.rfunct._eq_1",
  "constType":
  "∀ (z : UpperHalfPlane), EisensteinSeries.rfunct z = min (Real.sqrt ((↑z).im ^ 2)) (Real.sqrt (EisensteinSeries.lb z))",
  "constCategory": "Theorem"},
 {"references": ["Exists", "HasSum", "TopologicalSpace", "AddCommMonoid"],
  "name": "Summable",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → [inst : AddCommMonoid α] → [inst : TopologicalSpace α] → (β → α) → Prop",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Subtype",
  "constType": "{α : Sort u} → (α → Prop) → Sort (max 1 u)",
  "constCategory": "Other"},
 {"references":
  ["add_le_add_iff_left",
   "propext",
   "instHAdd",
   "HAdd.hAdd",
   "CovariantClass",
   "LE",
   "Add",
   "LE.le",
   "ContravariantClass",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.10",
  "constType":
  "∀ {α : Type u_1} [inst : Add α] [inst_1 : LE α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1]\n  [inst_3 : ContravariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] (a : α) {b c : α},\n  (a + b ≤ a + c) = (b ≤ c)",
  "constCategory": "Theorem"},
 {"references": ["InvolutiveNeg", "HasDistribNeg", "Mul"],
  "name": "HasDistribNeg.toInvolutiveNeg",
  "constType":
  "{α : Type u_1} → [inst : Mul α] → [self : HasDistribNeg α] → InvolutiveNeg α",
  "constCategory": "Definition"},
 {"references": ["Real", "Pow.mk", "Pow", "Real.rpow"],
  "name": "Real.instPowReal",
  "constType": "Pow ℝ ℝ",
  "constCategory": "Definition"},
 {"references": ["And"],
  "name": "And.right",
  "constType": "∀ {a b : Prop}, a ∧ b → b",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrder",
   "PartialOrder.toPreorder",
   "Lattice.toSemilatticeInf",
   "Lattice.toLinearOrder",
   "Preorder.toLT",
   "Real.lattice",
   "LT.lt",
   "Classical.propDecidable",
   "Real",
   "SemilatticeInf.toPartialOrder",
   "Real.instIsTotalRealLeInstLEReal",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Real.linearOrder",
  "constType": "LinearOrder ℝ",
  "constCategory": "Definition"},
 {"references": ["Decidable"],
  "name": "DecidablePred",
  "constType": "{α : Sort u} → (α → Prop) → Sort (max 1 u)",
  "constCategory": "Definition"},
 {"references":
  ["Real.linearOrder",
   "inferInstance",
   "instDecidableEq",
   "Real",
   "Decidable",
   "Eq"],
  "name": "Real.decidableEq",
  "constType": "(a b : ℝ) → Decidable (a = b)",
  "constCategory": "Definition"},
 {"references":
  ["One", "Real", "One.mk", "_private.Mathlib.Data.Real.Basic.0.Real.one"],
  "name": "Real.instOneReal",
  "constType": "One ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "And",
   "Exists",
   "uniformity",
   "UniformSpace",
   "Prod.mk",
   "Set",
   "TopologicalSpace",
   "Prod",
   "Filter",
   "Filter.Eventually",
   "nhdsWithin",
   "Set.instMembershipSet",
   "instMembershipSetFilter"],
  "name": "TendstoLocallyUniformlyOn",
  "constType":
  "{α : Type u} →\n  {β : Type v} →\n    {ι : Type x} →\n      [inst : UniformSpace β] → [inst : TopologicalSpace α] → (ι → α → β) → (α → β) → Filter ι → Set α → Prop",
  "constCategory": "Definition"},
 {"references": ["And"],
  "name": "And.left",
  "constType": "∀ {a b : Prop}, a ∧ b → a",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Metric.mem_nhds_iff",
   "Exists",
   "OfNat.ofNat",
   "Real.instLTReal",
   "nhds",
   "Set",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "HasSubset.Subset",
   "Eq",
   "GT.gt",
   "Zero.toOfNat0",
   "Real.instZeroReal",
   "And",
   "Set.instHasSubsetSet",
   "propext",
   "Filter",
   "Metric.ball",
   "UniformSpace.toTopologicalSpace",
   "PseudoMetricSpace",
   "instMembershipSetFilter"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.3",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {x : α} {s : Set α}, (s ∈ nhds x) = ∃ ε > 0, Metric.ball x ε ⊆ s",
  "constCategory": "Theorem"},
 {"references": ["OfNat", "Nat"],
  "name": "OfNat.ofNat",
  "constType": "{α : Type u} → (x : ℕ) → [self : OfNat α x] → α",
  "constCategory": "Definition"},
 {"references": ["Zero", "NegZeroClass"],
  "name": "NegZeroClass.toZero",
  "constType": "{G : Type u_2} → [self : NegZeroClass G] → Zero G",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "PartialOrder.toPreorder",
   "AbsoluteValue",
   "Real",
   "Eq.refl",
   "Real.instSupReal",
   "Complex.ofReal_int_cast",
   "Abs.abs",
   "Preorder.toLE",
   "Complex.abs_ofReal",
   "Real.instNegReal",
   "Eq",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Ring.toIntCast",
   "Eq.symm",
   "id",
   "Neg.toHasAbs",
   "Complex.ofReal'",
   "Complex.abs",
   "Complex.instRingComplex",
   "FunLike.coe",
   "Real.intCast",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq.ndrec",
   "Int.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Complex",
   "Int",
   "OrderedSemiring.toPartialOrder"],
  "name": "Complex.int_cast_abs",
  "constType": "∀ (n : ℤ), |↑n| = Complex.abs ↑n",
  "constCategory": "Theorem"},
 {"references": ["NatCast", "NonAssocSemiring"],
  "name": "NonAssocSemiring.toNatCast",
  "constType": "{α : Type u} → [self : NonAssocSemiring α] → NatCast α",
  "constCategory": "Definition"},
 {"references": ["Preorder.le_refl", "Preorder", "LE.le", "Preorder.toLE"],
  "name": "le_refl",
  "constType": "∀ {α : Type u} [inst : Preorder α] (a : α), a ≤ a",
  "constCategory": "Theorem"},
 {"references": ["Max"],
  "name": "Max.max",
  "constType": "{α : Type u} → [self : Max α] → α → α → α",
  "constCategory": "Definition"},
 {"references": ["Real", "Complex"],
  "name": "Complex.mk",
  "constType": "ℝ → ℝ → ℂ",
  "constCategory": "Other"},
 {"references":
  ["Distrib.toAdd",
   "eq_self",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "instHAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Semiring.toNonAssocSemiring",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "CommSemiring.toCommMonoidWithZero",
   "add_zero",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_zero",
  "constType": "∀ {R : Type u_1} [inst : CommSemiring R] (a : R), a + 0 = a",
  "constCategory": "Theorem"},
 {"references": ["One", "Semiring"],
  "name": "Semiring.toOne",
  "constType": "{α : Type u} → [self : Semiring α] → One α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Set",
   "Real",
   "upper_half_plane_isOpen",
   "Real.instLEReal",
   "AbsoluteValue",
   "GE.ge",
   "SeminormedRing.toPseudoMetricSpace",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "Preorder.toLE",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "SeminormedCommRing.toSeminormedRing",
   "Semiring.toNonAssocSemiring",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace",
   "Subtype",
   "Complex.ofReal'",
   "Membership.mem",
   "Complex.abs",
   "setOf",
   "PseudoMetricSpace.toUniformSpace",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "Real.orderedSemiring",
   "LE.le",
   "SubadditiveHomClass.toFunLike",
   "Complex.re",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Complex.im",
   "NormedCommRing.toSeminormedCommRing",
   "And",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Complex",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.upperHalfSpaceSlice",
  "constType":
  "ℝ → ℝ → Set ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }",
  "constCategory": "Definition"},
 {"references": ["LT.lt", "LT"],
  "name": "GT.gt",
  "constType": "{α : Type u} → [inst : LT α] → α → α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Mathlib.Meta.NormNum.IsNat",
   "Nat",
   "Eq.symm",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq"],
  "name": "Mathlib.Meta.NormNum.isNat_ofNat",
  "constType":
  "∀ (α : Type u_1) [inst : AddMonoidWithOne α] {a : α} {n : ℕ}, ↑n = a → Mathlib.Meta.NormNum.IsNat a n",
  "constCategory": "Theorem"},
 {"references":
  ["PartialOrder.toPreorder",
   "Set",
   "InfSet.sInf",
   "CompleteLattice.mk",
   "BooleanAlgebra.toHasCompl",
   "Set.Set.completeAtomicBooleanAlgebra.proof_8",
   "BooleanAlgebra.toBot",
   "Set.Set.completeAtomicBooleanAlgebra.proof_12",
   "Preorder.toLE",
   "BooleanAlgebra",
   "CompletelyDistribLattice.mk",
   "CompleteAtomicBooleanAlgebra.mk",
   "BooleanAlgebra.toHImp",
   "CompleteAtomicBooleanAlgebra",
   "Set.Set.completeAtomicBooleanAlgebra.proof_10",
   "Set.Set.completeAtomicBooleanAlgebra.proof_3",
   "Set.instSupSetSet",
   "Lattice.toSemilatticeSup",
   "BooleanAlgebra.toDistribLattice",
   "Set.Set.completeAtomicBooleanAlgebra.proof_7",
   "SemilatticeSup.toPartialOrder",
   "BooleanAlgebra.toTop",
   "Membership.mem",
   "Set.Set.completeAtomicBooleanAlgebra.proof_5",
   "Set.Set.completeAtomicBooleanAlgebra.proof_11",
   "Set.Set.completeAtomicBooleanAlgebra.proof_2",
   "LE.le",
   "Set.Set.completeAtomicBooleanAlgebra.proof_6",
   "Set.instMembershipSet",
   "DistribLattice.toLattice",
   "Set.instBooleanAlgebraSet",
   "Set.Set.completeAtomicBooleanAlgebra.proof_1",
   "Set.Set.completeAtomicBooleanAlgebra.proof_9",
   "Set.Set.completeAtomicBooleanAlgebra.proof_4",
   "Set.instInfSetSet",
   "BooleanAlgebra.toSDiff"],
  "name": "Set.Set.completeAtomicBooleanAlgebra",
  "constType": "{α : Type u_1} → CompleteAtomicBooleanAlgebra (Set α)",
  "constCategory": "Definition"},
 {"references":
  ["LE.mk",
   "PartialOrder.mk",
   "Finset.partialOrder.proof_1",
   "HasSSubset.SSubset",
   "Finset.partialOrder.proof_3",
   "Finset",
   "Finset.partialOrder.proof_4",
   "HasSubset.Subset",
   "Finset.partialOrder.proof_2",
   "LT.mk",
   "Finset.instHasSSubsetFinset",
   "Finset.instHasSubsetFinset",
   "PartialOrder",
   "Preorder.mk"],
  "name": "Finset.partialOrder",
  "constType": "{α : Type u_1} → PartialOrder (Finset α)",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "instAddNat",
   "Subtype.val",
   "Neg.neg",
   "Even",
   "Fintype.card",
   "One.toOfNat1",
   "CommRing",
   "Eq",
   "Matrix.det",
   "Semiring.toOne",
   "Matrix.neg",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup.instNegSpecialLinearGroup.proof_1",
   "Fintype",
   "Ring.toNeg",
   "Matrix.SpecialLinearGroup",
   "DecidableEq",
   "Matrix",
   "CommRing.toRing",
   "Nat",
   "Fact",
   "Neg",
   "Neg.mk",
   "Subtype.mk"],
  "name": "Matrix.SpecialLinearGroup.instNegSpecialLinearGroup",
  "constType":
  "{n : Type u} →\n  [inst : DecidableEq n] →\n    [inst_1 : Fintype n] →\n      {R : Type v} →\n        [inst_2 : CommRing R] → [inst_3 : Fact (Even (Fintype.card n))] → Neg (Matrix.SpecialLinearGroup n R)",
  "constCategory": "Definition"},
 {"references":
  ["And",
   "lt_of_le_not_le",
   "lt_of_le_of_lt.match_1",
   "le_not_le_of_lt",
   "Preorder.toLT",
   "LT.lt",
   "le_trans",
   "Not",
   "Preorder",
   "lt_of_lt_of_le.match_1",
   "LE.le",
   "Preorder.toLE"],
  "name": "lt_of_le_of_lt",
  "constType":
  "∀ {α : Type u} [inst : Preorder α] {a b c : α}, a ≤ b → b < c → a < c",
  "constCategory": "Theorem"},
 {"references":
  ["NormedAddCommGroup.toAddCommGroup",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "NormedAddCommGroup",
   "OfNat.ofNat",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "NontriviallyNormedField.toNormedField",
   "HasDerivAtFilter.proof_2",
   "Set",
   "AddCommGroup.toAddCommMonoid",
   "SeminormedRing.toPseudoMetricSpace",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NormedSpace",
   "RingHom.id",
   "NormedField.toField",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "HasDerivWithinAt",
   "NormedField.toNormedSpace",
   "ContinuousLinearMap.smulRight",
   "UniformSpace.toTopologicalSpace",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NontriviallyNormedField",
   "HasDerivAtFilter.proof_1",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Field.toSemifield",
   "One.toOfNat1",
   "NormedField.toNormedCommRing",
   "HasDerivAt",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "DivisionSemiring.toSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "ContinuousLinearMap",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Semifield.toDivisionSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NormedSpace.toModule",
   "NonUnitalNormedRing.toNormedAddCommGroup",
   "ContinuousLinearMap.one",
   "HasFDerivAt.hasFDerivWithinAt"],
  "name": "HasDerivAt.hasDerivWithinAt",
  "constType":
  "∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] {F : Type v} [inst_1 : NormedAddCommGroup F]\n  [inst_2 : NormedSpace 𝕜 F] {f : 𝕜 → F} {f' : F} {x : 𝕜} {s : Set 𝕜}, HasDerivAt f f' x → HasDerivWithinAt f f' s x",
  "constCategory": "Theorem"},
 {"references":
  ["Quot.liftOn", "letFun", "Quot", "congrArg", "Quot.sound", "Quot.mk", "Eq"],
  "name": "funext",
  "constType":
  "∀ {α : Sort u} {β : α → Sort v} {f g : (x : α) → β x}, (∀ (x : α), f x = g x) → f = g",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "AddCommSemigroup.toAddCommMagma",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Real.instAddMonoidReal",
   "one_div",
   "Semifield.toCommGroupWithZero",
   "pow_one",
   "MulZeroClass.toMul",
   "Real.instOneReal",
   "Mathlib.Tactic.Ring.inv_mul",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "IsROrC.charZero_isROrC",
   "LinearOrderedField.toLinearOrderedSemifield",
   "HDiv.hDiv",
   "GroupWithZero.toInv",
   "HPow.hPow",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "instHDiv",
   "add_comm",
   "Real.instRingReal",
   "Real.instAddCommSemigroupReal",
   "AddCommMagma.toAdd",
   "DivisionRing.toInv",
   "MonoidWithZero.toMulZeroOneClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Inv.inv",
   "congrFun",
   "CommMonoidWithZero.toZero",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "Monoid.toNatPow",
   "Mathlib.Tactic.Ring.inv_single",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "One.toOfNat1",
   "Mathlib.Tactic.Ring.inv_congr",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "Real.instDivisionRingReal",
   "Nat.commSemiring",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "letFun",
   "Mathlib.Tactic.Ring.one_mul",
   "DivisionMonoid.toDivInvMonoid",
   "Semifield.toDivisionSemiring",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Mathlib.Tactic.Ring.mul_congr",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.isROrC",
   "Eq",
   "Mathlib.Tactic.Ring.div_pf",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Real.instCommSemiringReal",
   "DivisionCommMonoid.toDivisionMonoid",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "Nat",
   "not_false_eq_true",
   "Eq.trans",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Ne",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.div_congr",
   "Mathlib.Tactic.Ring.add_congr",
   "MulZeroOneClass.toMulZeroClass",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DivInvMonoid.toInv",
   "instHMul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "mul_one",
   "Not",
   "congrArg",
   "add_zero",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "DivisionRing.toRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "LinearOrderedField.toDiv",
   "Zero.toOfNat0",
   "instHPow",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "mul_inv_cancel",
   "DivisionRing.toDiv",
   "id",
   "inv_div",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "instHAdd",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "eq_false",
   "Real.semiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul"],
  "name": "EisensteinSeries.div_self_add_eq_one_div_div_add_one",
  "constType": "∀ (a b : ℝ), a ≠ 0 → a / (a + b) = 1 / (b / a + 1)",
  "constCategory": "Theorem"},
 {"references": ["Applicative", "Pure"],
  "name": "Applicative.toPure",
  "constType": "{f : Type u → Type v} → [self : Applicative f] → Pure f",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "Distrib.toAdd",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "sq_nonneg",
   "Semiring.toMonoidWithZero",
   "ExistsAddOfLE",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "Preorder.toLE",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "StrictOrderedSemiring.toPartialOrder",
   "instHPow",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Monoid.toNatPow",
   "LinearOrderedSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "instOfNatNat",
   "Nat",
   "MonoidWithZero.toZero"],
  "name": "pow_two_nonneg",
  "constType":
  "∀ {α : Type u} [inst : LinearOrderedSemiring α] [inst_1 : ExistsAddOfLE α] (a : α), 0 ≤ a ^ 2",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "StrictOrderedCommRing.toStrictOrderedRing",
   "Real.instStrictOrderedCommRingReal",
   "Real",
   "StrictOrderedRing"],
  "name": "Real.strictOrderedRing",
  "constType": "StrictOrderedRing ℝ",
  "constCategory": "Definition"},
 {"references": ["EisensteinSeries.sliceCoe._rarg", "_obj"],
  "name": "EisensteinSeries.sliceCoe._cstage2",
  "constType": "_obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references": ["LT", "Preorder"],
  "name": "Preorder.toLT",
  "constType": "{α : Type u} → [self : Preorder α] → LT α",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Lean.Macro.State",
  "constType": "Type",
  "constCategory": "Other"},
 {"references": ["Zero", "OfNat", "OfNat.mk", "Zero.zero"],
  "name": "Zero.toOfNat0",
  "constType": "{α : Type u_1} → [inst : Zero α] → OfNat α 0",
  "constCategory": "Definition"},
 {"references":
  ["Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.sqrt_pos",
   "Real.instLTReal",
   "propext",
   "LT.lt",
   "Real",
   "Real.sqrt",
   "Eq"],
  "name": "Modformsported.ForMathlib.EisensteinSeries.bounds._auxLemma.2",
  "constType": "∀ {x : ℝ}, (0 < Real.sqrt x) = (0 < x)",
  "constCategory": "Theorem"},
 {"references": ["TopologicalSpace"],
  "name": "TopologicalSpace.Opens",
  "constType": "(α : Type u_2) → [inst : TopologicalSpace α] → Type u_2",
  "constCategory": "Other"},
 {"references":
  ["Complex.abs",
   "MulOneClass.toMul",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MulZeroOneClass.toMulOneClass",
   "MonoidHomClass.toMulHomClass",
   "AbsoluteValue",
   "Real",
   "Eq.refl",
   "MulHom.mk",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toMulZeroOneClass",
   "Real.orderedSemiring",
   "Real.sqrt",
   "Eq",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_add",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Real.semiring",
   "AbsoluteValue.mk",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_nonneg'",
   "Complex.normSq",
   "OrderedSemiring.toSemiring",
   "Complex",
   "MonoidWithZeroHom",
   "Complex.abs.proof_1",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_mul"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.bounds.0.Complex.abs._eq_1",
  "constType":
  "Complex.abs =\n  { toMulHom := { toFun := fun x => Real.sqrt (Complex.normSq x), map_mul' := Complex.AbsTheory.abs_mul },\n    nonneg' := Complex.AbsTheory.abs_nonneg', eq_zero' := Complex.abs.proof_1, add_le' := Complex.AbsTheory.abs_add }",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "instHMul",
   "OfNat.ofNat",
   "PosMulMono",
   "Left.mul_nonneg",
   "HMul.hMul",
   "MulZeroClass.toZero",
   "MulZeroClass",
   "Preorder",
   "LE.le",
   "Preorder.toLE",
   "MulZeroClass.toMul"],
  "name": "mul_nonneg",
  "constType":
  "∀ {α : Type u_1} {a b : α} [inst : MulZeroClass α] [inst_1 : Preorder α] [inst_2 : PosMulMono α],\n  0 ≤ a → 0 ≤ b → 0 ≤ a * b",
  "constCategory": "Theorem"},
 {"references": ["OrderedAddCommGroup", "AddCommGroup"],
  "name": "OrderedAddCommGroup.toAddCommGroup",
  "constType": "{α : Type u} → [self : OrderedAddCommGroup α] → AddCommGroup α",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "MulOneClass.toMul",
   "Trans.trans",
   "PartialOrder.toPreorder",
   "Monoid.toOne",
   "Semifield.toCommGroupWithZero",
   "MulZeroClass.toMul",
   "Preorder.toLE",
   "Iff.mpr",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Iff",
   "div_eq_iff",
   "HDiv.hDiv",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "instHDiv",
   "LinearOrderedSemifield",
   "DivisionSemiring.toGroupWithZero",
   "CommGroupWithZero.toCommMonoidWithZero",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "GroupWithZero.toDivInvMonoid",
   "MulZeroOneClass.toMulZeroClass",
   "Iff.intro",
   "instHMul",
   "MonoidWithZero.toMulZeroOneClass",
   "instTransEq_1",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "instTransEq",
   "OrderedSemiring.toMulPosMono",
   "MonoidWithZero.toZero",
   "CommMonoidWithZero.toZero",
   "LinearOrderedSemifield.toSemifield",
   "Eq.refl",
   "ne_of_lt",
   "div_eq_mul_one_div",
   "rfl",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Zero.toOfNat0",
   "ne_of_gt",
   "Preorder.toLT",
   "div_mul_cancel",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Eq.symm",
   "id",
   "DivInvMonoid.toDiv",
   "LT.lt.le",
   "One.toOfNat1",
   "Ne.symm",
   "mul_le_mul_of_nonneg_right",
   "NonUnitalNonAssocSemiring.toMul",
   "DivInvMonoid.toMonoid",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "Monoid.toMulOneClass",
   "GroupWithZero.toDiv",
   "Semiring.toOne",
   "Eq.ndrec",
   "LinearOrderedSemifield.toDiv",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedCommSemiring.toOrderedSemiring",
   "one_div_pos",
   "HMul.hMul",
   "Semifield.toDivisionSemiring"],
  "name": "div_le_iff",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a b c : α}, 0 < b → (a / b ≤ c ↔ a ≤ c * b)",
  "constCategory": "Theorem"},
 {"references": ["And", "Exists", "Eq"],
  "name": "ExistsUnique",
  "constType": "{α : Sort u_1} → (α → Prop) → Prop",
  "constCategory": "Definition"},
 {"references": ["False"],
  "name": "Not",
  "constType": "Prop → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.instLTReal",
   "lcProof",
   "Complex.mk",
   "LT.lt",
   "Real",
   "UpperHalfPlane",
   "Complex",
   "Real.wrapped._@.Mathlib.Data.Real.Basic._hyg.3933",
   "Subtype.mk"],
  "name": "EisensteinSeries.lbpoint._cstage1",
  "constType": "ℝ → (B : ℝ) → 0 < B → UpperHalfPlane",
  "constCategory": "Definition"},
 {"references": ["Mul", "Mul.mul", "HMul", "HMul.mk"],
  "name": "instHMul",
  "constType": "{α : Type u_1} → [inst : Mul α] → HMul α α α",
  "constCategory": "Definition"},
 {"references": ["Iff"],
  "name": "Iff.intro",
  "constType": "∀ {a b : Prop}, (a → b) → (b → a) → (a ↔ b)",
  "constCategory": "Other"},
 {"references": ["Add", "Int.add", "Int", "Add.mk"],
  "name": "Int.instAddInt",
  "constType": "Add ℤ",
  "constCategory": "Definition"},
 {"references": ["HPow", "Nat", "Int.pow", "Int", "HPow.mk"],
  "name": "Int.instHPowIntNat",
  "constType": "HPow ℤ ℕ ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Complex.ofReal_nat_cast",
   "OfNat.ofNat",
   "Real.natCast",
   "Real",
   "Eq.refl",
   "AddGroupWithOne.toAddGroup",
   "Eq",
   "Semiring.toNatCast",
   "Zero.toOfNat0",
   "Complex.Complex.addGroupWithOne",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "AddCancelMonoid.toAddRightCancelMonoid",
   "AddMonoid.toZero",
   "Real.strictOrderedSemiring",
   "AddGroup.toAddCancelMonoid",
   "Complex.ofReal_eq_zero",
   "instOfNatNat",
   "Nat",
   "Eq.symm",
   "Nat.cast_eq_zero",
   "Complex.ofReal'",
   "AddGroupWithOne.toAddMonoidWithOne",
   "charZero_of_inj_zero",
   "Complex.instZeroComplex",
   "Ring.toAddGroupWithOne",
   "AddRightCancelMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "Real.instRingReal",
   "Real.instZeroReal",
   "Eq.ndrec",
   "StrictOrderedSemiring.to_charZero",
   "CharZero",
   "propext",
   "Eq.mp",
   "Complex"],
  "name": "Complex.charZero",
  "constType": "CharZero ℂ",
  "constCategory": "Definition"},
 {"references":
  ["OrderedSemiring",
   "PartialOrder.toPreorder",
   "AbsoluteValue.zeroHomClass",
   "ZeroHomClass.toFunLike",
   "ZeroHomClass",
   "Semiring",
   "AbsoluteValue",
   "OrderedSemiring.toSemiring",
   "Semiring.toMonoidWithZero",
   "AbsoluteValue.nonneg'",
   "NonnegHomClass",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPartialOrder",
   "Preorder.toLE",
   "NonnegHomClass.mk"],
  "name": "AbsoluteValue.nonnegHomClass",
  "constType":
  "{R : Type u_1} →\n  {S : Type u_2} → [inst : Semiring R] → [inst_1 : OrderedSemiring S] → NonnegHomClass (AbsoluteValue R S) R S",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Finset.sum",
   "upper_half_plane_isOpen",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Set.Elem",
   "Finset.range",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "UpperHalfPlane.upperHalfSpace",
   "Complex",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Nat",
   "UniformSpace.toTopologicalSpace",
   "Int",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Subtype",
   "EisensteinSeries.eisenSquareSlice"],
  "name": "EisensteinSeries.eisenParSumSlice",
  "constType":
  "ℤ → (A B : ℝ) → ℕ → ↑(EisensteinSeries.upperHalfSpaceSlice A B) → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["_private.Mathlib.Data.Real.Basic.0.Real.inv'", "Real", "Inv", "Inv.mk"],
  "name": "Real.instInvReal",
  "constType": "Inv ℝ",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "AddZeroClass.toAdd",
   "instHSub",
   "OfNat.ofNat",
   "neg_zero",
   "SubNegMonoid.toNeg",
   "instHAdd",
   "HAdd.hAdd",
   "SubNegZeroMonoid",
   "HSub.hSub",
   "sub_eq_add_neg",
   "Neg.neg",
   "AddMonoid.toAddZeroClass",
   "SubNegZeroMonoid.toNegZeroClass",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "SubNegMonoid.toSub",
   "SubNegZeroMonoid.toSubNegMonoid",
   "of_eq_true",
   "SubNegMonoid.toAddMonoid",
   "add_zero",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "sub_zero",
  "constType":
  "∀ {G : Type u_3} [inst : SubNegZeroMonoid G] (a : G), a - 0 = a",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "AbsoluteValue.eq_zero",
   "AbsoluteValue.add_le",
   "PartialOrder.toPreorder",
   "Semiring",
   "AbsoluteValue",
   "AbsoluteValue.map_mul",
   "FunLike.coe",
   "SubadditiveHomClass.toFunLike",
   "Preorder.toLE",
   "AbsoluteValue.nonneg",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OrderedSemiring",
   "AbsoluteValue.subadditiveHomClass",
   "IsAbsoluteValue",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "IsAbsoluteValue.mk",
   "OrderedSemiring.toPartialOrder"],
  "name": "AbsoluteValue.isAbsoluteValue",
  "constType":
  "∀ {S : Type u_1} [inst : OrderedSemiring S] {R : Type u_2} [inst_1 : Semiring R] (abv : AbsoluteValue R S),\n  IsAbsoluteValue ⇑abv",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Mathlib.Tactic.Ring.one_pow",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "CommSemiring.toSemiring",
   "AddCommSemigroup.toAddCommMagma",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "add_nonpos",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "Real.instAddMonoidReal",
   "Mathlib.Tactic.Ring.pow_zero",
   "Semifield.toCommGroupWithZero",
   "MulZeroClass.toMul",
   "Mathlib.Meta.NormNum.isInt_add",
   "Nat.cast_zero",
   "Real.instOneReal",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Real.linearOrder",
   "SubNegMonoid.toSub",
   "Mathlib.Tactic.Ring.pow_bit0",
   "Mathlib.Tactic.Ring.pow_one",
   "mul_pos_of_neg_of_neg",
   "Nat.cast",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "Real.strictOrderedSemiring",
   "LinearOrderedField.toLinearOrderedSemifield",
   "le_of_lt",
   "Std.Classes.Order._auxLemma.3",
   "HDiv.hDiv",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Mathlib.Tactic.Ring.pow_add",
   "Linarith.lt_of_lt_of_eq",
   "instOfNat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "instHSub",
   "HPow.hPow",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "add_comm",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.instRingReal",
   "Real.instAddCommSemigroupReal",
   "Real.normedCommRing",
   "CommGroupWithZero.toCommMonoidWithZero",
   "AddCommMagma.toAdd",
   "Complex.im",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "LT.lt",
   "congr",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "LinearOrder.toPartialOrder",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPosMulMono",
   "Int",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "Mathlib.Tactic.Ring.add_overlap_pf",
   "EisensteinSeries.ineq1",
   "congrFun",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "Subtype.val",
   "Real",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Real.orderedCancelAddCommMonoid",
   "Int.rawCast",
   "Eq.refl",
   "Mathlib.Tactic.Ring.sub_congr",
   "StarOrderedRing.toExistsAddOfLE",
   "AddMonoid.toAddZeroClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Tactic.Ring.pow_bit1",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "neg_nonpos_of_nonneg",
   "NonUnitalNonAssocRing.toMul",
   "Not.intro",
   "Real.instLinearOrderedRingReal",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Real.instLTReal",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "add_lt_of_le_of_neg",
   "Neg.neg",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "Mathlib.Meta.NormNum.isNat_mul",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Real.instPreorderReal",
   "letFun",
   "Mathlib.Tactic.Ring.one_mul",
   "Mathlib.Tactic.Ring.add_mul",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.atom_pf",
   "Real.orderedAddCommGroup",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Mathlib.Tactic.Ring.mul_congr",
   "Real.instSubReal",
   "Real.instMulReal",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.instLEReal",
   "AddGroup.toSubtractionMonoid",
   "Mathlib.Tactic.Ring.pow_one_cast",
   "Preorder.toLE",
   "Eq",
   "AddZeroClass.toZero",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "Real.instCommSemiringReal",
   "Mathlib.Tactic.Ring.pow_nat",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "upper_half_im_pow_pos",
   "UpperHalfPlane",
   "Nat",
   "Real.instLinearOrderedSemiringReal",
   "Eq.trans",
   "Nat.cast_one",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "neg_neg_of_pos",
   "Real.partialOrder",
   "sq_nonneg",
   "Nat.rawCast",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "Mathlib.Tactic.Ring.coeff_one",
   "Real.orderedSemiring",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "add_pos_of_nonneg_of_pos",
   "mul_nonneg_of_nonpos_of_nonpos",
   "Mathlib.Tactic.Ring.add_congr",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "Eq.mp",
   "Real.instAddGroupReal",
   "div_le_iff",
   "congrArg",
   "Mathlib.Tactic.Ring.mul_one",
   "mul_nonneg",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Linarith.lt_irrefl",
   "Real.natCast",
   "lt_zero_of_zero_gt",
   "Mathlib.Meta.NormNum.isNat_add",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Ring.toNonAssocRing",
   "LinearOrderedField.toDiv",
   "Zero.toOfNat0",
   "instHPow",
   "Preorder.toLT",
   "AddMonoid.toZero",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "Eq.symm",
   "pow_two_nonneg",
   "id",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "IsCancelAdd.toIsLeftCancelAdd",
   "Real.instMonoidReal",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HSub.hSub",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Tactic.Ring.single_pow",
   "sub_nonneg",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "StrictOrderedSemiring.toSemiring",
   "GT.gt",
   "Complex.re",
   "Real.instZeroReal",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "LinearOrderedSemifield.toDiv",
   "StrictOrderedSemiring.toPartialOrder",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "sq_pos_of_ne_zero",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "NegZeroClass.toZero",
   "OrderedSemiring.toPartialOrder",
   "Nat.semiring"],
  "name": "EisensteinSeries.lowbound",
  "constType":
  "∀ (z : UpperHalfPlane) (δ : ℝ),\n  ((↑z).im ^ 4 + ((↑z).re * (↑z).im) ^ 2) / ((↑z).re ^ 2 + (↑z).im ^ 2) ^ 2 ≤ (δ * (↑z).re + 1) ^ 2 + (δ * (↑z).im) ^ 2",
  "constCategory": "Theorem"},
 {"references": ["PUnit"],
  "name": "PUnit.unit",
  "constType": "PUnit.{u}",
  "constCategory": "Other"},
 {"references":
  ["AddZeroClass.toAdd",
   "OfNat.ofNat",
   "NonAssocRing.toAddCommGroupWithOne",
   "NonAssocRing",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Eq",
   "Zero.toOfNat0",
   "Iff",
   "Iff.trans",
   "AddCommGroup.toAddGroup",
   "NonAssocRing.toNonAssocSemiring",
   "neg_eq_iff_add_eq_zero",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocRing.toMul",
   "instHAdd",
   "AddCommGroupWithOne.toAddCommGroup",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "add_self_eq_zero",
   "SubNegZeroMonoid.toNegZeroClass",
   "MulZeroOneClass.toZero",
   "AddGroup.toSubNegMonoid",
   "NoZeroDivisors",
   "CharZero",
   "SubNegMonoid.toAddMonoid",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "AddCommGroupWithOne.toAddGroupWithOne"],
  "name": "neg_eq_self_iff",
  "constType":
  "∀ {R : Type u_1} [inst : NonAssocRing R] [inst_1 : NoZeroDivisors R] [inst_2 : CharZero R] {a : R}, -a = a ↔ a = 0",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Preorder.toLE",
   "Iff.mpr",
   "Abs.abs",
   "Eq",
   "Zero.toOfNat0",
   "AddGroup",
   "SemilatticeSup.toSup",
   "AddMonoid.toAddSemigroup",
   "Lattice.toSemilatticeSup",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "max_eq_left",
   "Neg.toHasAbs",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "AddSemigroup.toAdd",
   "instHAdd",
   "instDistribLattice",
   "LE.le.trans",
   "SemilatticeInf.toPartialOrder",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "DistribLattice.toLattice",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg",
   "neg_nonpos"],
  "name": "abs_of_nonneg",
  "constType":
  "∀ {α : Type u_1} [inst : AddGroup α] [inst_1 : LinearOrder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] {a : α}, 0 ≤ a → |a| = a",
  "constCategory": "Theorem"},
 {"references": ["Lean.Syntax.Preresolved", "Lean.Name"],
  "name": "Lean.Syntax.Preresolved.namespace",
  "constType": "Lean.Name → Lean.Syntax.Preresolved",
  "constCategory": "Other"},
 {"references": ["LT", "Nat.lt", "Nat", "LT.mk"],
  "name": "instLTNat",
  "constType": "LT ℕ",
  "constCategory": "Definition"},
 {"references":
  ["instHAdd",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real",
   "Neg.neg",
   "Sub",
   "Real.instNegReal",
   "Sub.mk"],
  "name": "Real.instSubReal",
  "constType": "Sub ℝ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedSemiring.toMax",
   "LinearOrderedAddCommMonoid.toLinearOrder",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Monotone.map_max",
   "OrderedSemiring.zeroLEOneClass",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Nat.instMaxNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "StrictOrderedSemiring.toSemiring",
   "Semiring.toNatCast",
   "Eq",
   "Nat.linearOrder",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Nat.mono_cast",
   "StrictOrderedSemiring.toPartialOrder",
   "StrictOrderedSemiring.toOrderedSemiring",
   "Max.max",
   "LinearOrderedSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedSemiring.toLinearOrderedAddCommMonoid",
   "Nat"],
  "name": "Nat.cast_max",
  "constType":
  "∀ {α : Type u_3} [inst : LinearOrderedSemiring α] {a b : ℕ}, ↑(max a b) = max ↑a ↑b",
  "constCategory": "Theorem"},
 {"references": ["Finset", "Int"],
  "name": "Finset.Icc._at.EisensteinSeries.square._spec_1",
  "constType": "ℤ → ℤ → Finset ℤ",
  "constCategory": "Axiom"},
 {"references": ["_obj", "EisensteinSeries.MoebiusPerm"],
  "name": "EisensteinSeries.MoebiusEquiv._elambda_2._cstage2",
  "constType": "_obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references":
  ["MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "instHAdd",
   "MonoidHomClass.toMulHomClass",
   "Real.instMulReal",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real",
   "MulHomClass.toFunLike",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "FunLike.coe",
   "NonAssocSemiring.toMulZeroOneClass",
   "rfl",
   "Complex.re",
   "Eq",
   "Complex.im",
   "instHMul",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Real.semiring",
   "Complex.normSq",
   "HMul.hMul",
   "Complex",
   "MonoidWithZeroHom"],
  "name": "Complex.normSq_apply",
  "constType": "∀ (z : ℂ), Complex.normSq z = z.re * z.re + z.im * z.im",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "Distrib.rightDistribClass",
   "instHAdd",
   "HAdd.hAdd",
   "NonUnitalNonAssocSemiring.toMul",
   "True",
   "add_mul",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "HMul.hMul",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.add_mul",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a₁ b c₁ a₂ c₂ d : R},\n  a₁ * b = c₁ → a₂ * b = c₂ → c₁ + c₂ = d → (a₁ + a₂) * b = d",
  "constCategory": "Theorem"},
 {"references": ["Membership.mem", "Set", "Eq", "Set.instMembershipSet"],
  "name": "Set.EqOn",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → (α → β) → (α → β) → Set α → Prop",
  "constCategory": "Definition"},
 {"references": ["outParam", "MonadExcept"],
  "name": "MonadExcept.throw",
  "constType":
  "{ε : outParam (Type u)} → {m : Type v → Type w} → [self : MonadExcept ε m] → {α : Type v} → ε → m α",
  "constCategory": "Definition"},
 {"references":
  ["Exists",
   "OfNat.ofNat",
   "HAdd.hAdd",
   "Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat",
   "Exists.intro",
   "Nontrivial.mk",
   "CanonicallyOrderedCommSemiring.toOne",
   "Iff.mpr",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "LinearOrderedCommMonoidWithZero.toZero",
   "instOfNatNat",
   "Nat",
   "not_false_eq_true",
   "Eq.trans",
   "NeZero.succ",
   "Ne",
   "Nat.linearOrderedCommMonoidWithZero",
   "False",
   "instAddNat",
   "Fin.val",
   "instHAdd",
   "Mathlib.Algebra.NeZero._auxLemma.3",
   "One.toOfNat1",
   "Nat.canonicallyOrderedCommSemiring",
   "Nat.zero",
   "of_eq_true",
   "Not",
   "Fin.ne_iff_vne",
   "Nontrivial",
   "congrArg",
   "Fin"],
  "name": "Fin.nontrivial",
  "constType": "∀ {n : ℕ}, Nontrivial (Fin (n + 2))",
  "constCategory": "Definition"},
 {"references": ["setOf", "Set", "True"],
  "name": "Set.univ",
  "constType": "{α : Type u_1} → Set α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Set.instHasSubsetSet",
   "Set.inclusion.proof_1",
   "Set.Elem",
   "Subtype.val",
   "Set",
   "HasSubset.Subset",
   "Subtype.mk",
   "Set.instMembershipSet"],
  "name": "Set.inclusion",
  "constType": "{α : Type u_1} → {s t : Set α} → s ⊆ t → ↑s → ↑t",
  "constCategory": "Definition"},
 {"references":
  ["Zero",
   "Ne",
   "OfNat.ofNat",
   "Or",
   "NoZeroDivisors.eq_zero_or_eq_zero_of_mul_eq_zero",
   "mt",
   "Iff.mpr",
   "Eq",
   "NoZeroDivisors",
   "Zero.toOfNat0",
   "not_or",
   "instHMul",
   "And",
   "HMul.hMul",
   "Not",
   "And.intro",
   "Mul"],
  "name": "mul_ne_zero",
  "constType":
  "∀ {M₀ : Type u_2} [inst : Mul M₀] [inst_1 : Zero M₀] [inst_2 : NoZeroDivisors M₀] {a b : M₀}, a ≠ 0 → b ≠ 0 → a * b ≠ 0",
  "constCategory": "Theorem"},
 {"references":
  ["Ne",
   "instHDiv",
   "DivisionRing",
   "OfNat.ofNat",
   "DivisionRing.toDivisionSemiring",
   "DivisionRing.toRing",
   "Rat.cast_mk_of_ne_zero",
   "Semiring.toMonoidWithZero",
   "DivisionRing.toRatCast",
   "Rat.divInt",
   "Eq",
   "Zero.toOfNat0",
   "DivisionSemiring.toSemiring",
   "Int.cast",
   "Ring.toIntCast",
   "Rat.cast",
   "HDiv.hDiv",
   "MonoidWithZero.toZero",
   "Eq.symm",
   "Int",
   "DivisionRing.toDiv"],
  "name": "Mathlib.Data.Rat.Cast.Defs._auxLemma.1",
  "constType":
  "∀ {α : Type u_3} [inst : DivisionRing α] (a b : ℤ), ↑b ≠ 0 → ↑a / ↑b = ↑(Rat.divInt a b)",
  "constCategory": "Theorem"},
 {"references":
  ["Multiset.map", "Multiset.sum", "Finset", "Finset.val", "AddCommMonoid"],
  "name": "Finset.sum",
  "constType":
  "{β : Type u} → {α : Type v} → [inst : AddCommMonoid β] → Finset α → (α → β) → β",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "Membership.mem",
   "Zero",
   "OfNat.ofNat",
   "Set.Elem",
   "Classical.propDecidable",
   "Set",
   "Not",
   "dite",
   "Subtype.mk",
   "Set.instMembershipSet"],
  "name": "extendByZero",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → {s : Set α} → [inst : Zero β] → (↑s → β) → α → β",
  "constCategory": "Definition"},
 {"references": ["Or"],
  "name": "Or.inr",
  "constType": "∀ {a b : Prop}, b → a ∨ b",
  "constCategory": "Other"},
 {"references":
  ["SemilatticeSup",
   "PartialOrder.toPreorder",
   "Filter.HasBasis.neBot_iff",
   "Set.nonempty_Ici",
   "Set.Nonempty",
   "Set.Ici",
   "Filter.atTop",
   "Filter.NeBot",
   "Filter.atTop_basis",
   "True",
   "SemilatticeSup.toPartialOrder",
   "Iff.mpr",
   "Nonempty"],
  "name": "Filter.atTop_neBot",
  "constType":
  "∀ {α : Type u_3} [inst : Nonempty α] [inst : SemilatticeSup α], Filter.NeBot Filter.atTop",
  "constCategory": "Theorem"},
 {"references":
  ["Nat.instModNat",
   "instHMod",
   "OfNat.ofNat",
   "HMod.hMod",
   "instOfNatNat",
   "Nat.mod_lt",
   "Nat",
   "instLTNat",
   "Fin",
   "Fin.mk",
   "GT.gt"],
  "name": "Fin.ofNat'",
  "constType": "{n : ℕ} → ℕ → n > 0 → Fin n",
  "constCategory": "Definition"},
 {"references": ["NonUnitalNonAssocRing", "Mul"],
  "name": "NonUnitalNonAssocRing.toMul",
  "constType": "{α : Type u} → [self : NonUnitalNonAssocRing α] → Mul α",
  "constCategory": "Definition"},
 {"references":
  ["AddCommGroup.toDivisionAddCommMonoid",
   "OrderedAddCommGroup",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "AddGroup.toSubtractionMonoid",
   "Neg.neg",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "Iff.mpr",
   "Preorder.toLE",
   "Zero.toOfNat0",
   "AddCommGroup.toAddGroup",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "OrderedAddCommGroup.toAddCommGroup",
   "neg_nonpos"],
  "name": "neg_nonpos_of_nonneg",
  "constType":
  "∀ {α : Type u} [inst : OrderedAddCommGroup α] {a : α}, 0 ≤ a → -a ≤ 0",
  "constCategory": "Theorem"},
 {"references":
  ["EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_7",
   "_obj",
   "Lean.Name.str._override",
   "«termSL(_,_)».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.7._closed_11"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_8._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Decidable",
  "constType": "Prop → Type",
  "constCategory": "Other"},
 {"references": [],
  "name": "Finset",
  "constType": "Type u_4 → Type u_4",
  "constCategory": "Other"},
 {"references": ["Subtype.val", "Subtype"],
  "name": "Subtype.property",
  "constType": "∀ {α : Sort u} {p : α → Prop} (self : Subtype p), p ↑self",
  "constCategory": "Definition"},
 {"references":
  ["RingHom.instRingHomClass",
   "CommSemiring.toSemiring",
   "RingHom",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "Real",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "NonUnitalRingHomClass.toMulHomClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Inv.mk",
   "Complex.instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "Inv",
   "RingHomClass.toNonUnitalRingHomClass",
   "Complex.instSemiringComplex",
   "starRingEnd",
   "Semiring.toNonAssocSemiring",
   "Complex.normSq",
   "Real.instInvReal",
   "MonoidWithZeroHom",
   "Complex.ofReal'",
   "Complex.instCommSemiringComplex",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MonoidHomClass.toMulHomClass",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "NonUnitalNonAssocSemiring.toMul",
   "instHMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Real.semiring",
   "HMul.hMul",
   "Complex",
   "Complex.instMulComplex",
   "Inv.inv"],
  "name": "Complex.instInvComplex",
  "constType": "Inv ℂ",
  "constCategory": "Definition"},
 {"references":
  ["instHMul",
   "Nat.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "NonAssocSemiring.toNatCast",
   "NonUnitalNonAssocSemiring.toMul",
   "instMulNat",
   "Nat",
   "Eq.symm",
   "NonAssocSemiring",
   "Eq",
   "Nat.cast_mul"],
  "name": "Mathlib.Data.Nat.Cast.Basic._auxLemma.1",
  "constType":
  "∀ {α : Type u_1} [inst : NonAssocSemiring α] (m n : ℕ), ↑m * ↑n = ↑(m * n)",
  "constCategory": "Theorem"},
 {"references": ["Prod.mk", "propext", "Prod.forall", "Prod", "Eq"],
  "name": "Mathlib.Data.Prod.Basic._auxLemma.1",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} {p : α × β → Prop}, (∀ (x : α × β), p x) = ∀ (a : α) (b : β), p (a, b)",
  "constCategory": "Theorem"},
 {"references":
  ["trivial",
   "Iff.intro",
   "And",
   "And.right",
   "propext",
   "And.intro",
   "True",
   "Eq"],
  "name": "true_and",
  "constType": "∀ (p : Prop), (True ∧ p) = p",
  "constCategory": "Theorem"},
 {"references": ["outParam", "SetLike", "Set"],
  "name": "SetLike.coe",
  "constType":
  "{A : Type u_1} → {B : outParam (Type u_2)} → [self : SetLike A B] → A → Set B",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Subtype.val",
   "Set",
   "upper_half_plane_isOpen",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "Set.instMembershipSet",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Set.Elem",
   "EisensteinSeries.eisenSquare",
   "UpperHalfPlane.upperHalfSpace",
   "Complex",
   "Nat",
   "UniformSpace.toTopologicalSpace",
   "Int",
   "Subtype"],
  "name": "EisensteinSeries.eisenSquareSlice",
  "constType":
  "ℤ → (A B : ℝ) → ℕ → ↑(EisensteinSeries.upperHalfSpaceSlice A B) → ℂ",
  "constCategory": "Definition"},
 {"references": ["Nat"],
  "name": "Fin",
  "constType": "ℕ → Type",
  "constCategory": "Other"},
 {"references":
  ["NormedField.toField",
   "DivisionSemiring.toSemiring",
   "SeminormedAddCommGroup.toAddCommGroup",
   "NormedField",
   "AddCommGroup.toAddCommMonoid",
   "Field.toSemifield",
   "SeminormedAddCommGroup",
   "Semifield.toDivisionSemiring",
   "Module",
   "NormedSpace"],
  "name": "NormedSpace.toModule",
  "constType":
  "{α : Type u_5} →\n  {β : Type u_6} → [inst : NormedField α] → [inst_1 : SeminormedAddCommGroup β] → [self : NormedSpace α β] → Module α β",
  "constCategory": "Definition"},
 {"references": ["LT"],
  "name": "LT.lt",
  "constType": "{α : Type u} → [self : LT α] → α → α → Prop",
  "constCategory": "Definition"},
 {"references": ["AddMonoidWithOne", "One"],
  "name": "AddMonoidWithOne.toOne",
  "constType": "{R : Type u} → [self : AddMonoidWithOne R] → One R",
  "constCategory": "Definition"},
 {"references":
  ["Subgroup.toGroup.proof_5",
   "Membership.mem",
   "Subgroup.div",
   "Subtype.val",
   "Subgroup.one",
   "Subgroup.toGroup.proof_4",
   "Function.Injective.group",
   "Subgroup.npow",
   "SetLike.instMembership",
   "Subgroup.toGroup.proof_7",
   "Subgroup.toGroup.proof_3",
   "Subgroup.toGroup.proof_1",
   "Subgroup",
   "Subgroup.toGroup.proof_2",
   "Group",
   "Subgroup.inv",
   "Subgroup.mul",
   "Subgroup.zpow",
   "Subtype",
   "Subgroup.toGroup.proof_6",
   "Subgroup.instSetLikeSubgroup"],
  "name": "Subgroup.toGroup",
  "constType":
  "{G : Type u_5} → [inst : Group G] → (H : Subgroup G) → Group ↥H",
  "constCategory": "Definition"},
 {"references":
  ["Semigroup.toMul",
   "Monoid.toSemigroup",
   "Monoid.toOne",
   "MulZeroOneClass.mk",
   "MonoidWithZero.toMonoid",
   "Monoid.one_mul",
   "MonoidWithZero.mul_zero",
   "MonoidWithZero.zero_mul",
   "MonoidWithZero.toZero",
   "Monoid.mul_one",
   "MulOneClass.mk",
   "MulZeroOneClass",
   "MonoidWithZero"],
  "name": "MonoidWithZero.toMulZeroOneClass",
  "constType":
  "{M₀ : Type u} → [self : MonoidWithZero M₀] → MulZeroOneClass M₀",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "OfNat.ofNat",
   "One.mk",
   "One.toOfNat1",
   "CommRing",
   "Eq",
   "Matrix.det",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "Fintype",
   "One",
   "Matrix.SpecialLinearGroup",
   "DecidableEq",
   "Matrix",
   "CommSemiring.toCommMonoidWithZero",
   "Subtype.mk",
   "Matrix.one",
   "Matrix.SpecialLinearGroup.hasOne.proof_1"],
  "name": "Matrix.SpecialLinearGroup.hasOne",
  "constType":
  "{n : Type u} →\n  [inst : DecidableEq n] →\n    [inst_1 : Fintype n] → {R : Type v} → [inst_2 : CommRing R] → One (Matrix.SpecialLinearGroup n R)",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "add_assoc",
   "OfNat.ofNat",
   "instAddNat",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "AddMonoid.toAddZeroClass",
   "Nat.cast_zero",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "AddMonoidWithOne",
   "Nat.rec",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "AddMonoid.toAddSemigroup",
   "Nat.cast_succ",
   "AddMonoid.toZero",
   "congr",
   "instOfNatNat",
   "Nat",
   "add_zero",
   "congrArg",
   "Nat.succ",
   "Eq.trans",
   "congrFun"],
  "name": "Nat.cast_add",
  "constType":
  "∀ {R : Type u_1} [inst : AddMonoidWithOne R] (m n : ℕ), ↑(m + n) = ↑m + ↑n",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Finset.sum",
   "dif_pos",
   "Eq.refl",
   "dite",
   "Finset.instMembershipFinset",
   "Eq",
   "Eq.mpr",
   "Decidable",
   "Finset",
   "congr",
   "dif_neg",
   "Not",
   "congrArg",
   "Finset.sum_congr",
   "AddCommMonoid",
   "id"],
  "name": "Finset.sum_dite_irrel",
  "constType":
  "∀ {β : Type u} {α : Type v} [inst : AddCommMonoid β] (p : Prop) [inst_1 : Decidable p] (s : Finset α) (f : p → α → β)\n  (g : ¬p → α → β),\n  (Finset.sum s fun x => if h : p then f h x else g h x) =\n    if h : p then Finset.sum s fun x => f h x else Finset.sum s fun x => g h x",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Function.comp",
  "constType":
  "{α : Sort u} → {β : Sort v} → {δ : Sort w} → (β → δ) → (α → β) → α → δ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "PartialOrder.toPreorder",
   "le_add_of_nonneg_left",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.instLEReal",
   "AbsoluteValue",
   "Real.instAddMonoidReal",
   "Real.commRing",
   "Real.instSupReal",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "sq",
   "Complex.normSq",
   "Nat",
   "MonoidWithZeroHom",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Real.instLinearOrderedSemiringReal",
   "HPow.hPow",
   "Complex.abs",
   "Real.partialOrder",
   "sq_nonneg",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Complex.im",
   "instHMul",
   "Real.orderedAddCommMonoid",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "CommRing.toNonUnitalCommRing",
   "Real",
   "Eq.refl",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "AddMonoid.toAddZeroClass",
   "StarOrderedRing.toExistsAddOfLE",
   "NonAssocSemiring.toMulZeroOneClass",
   "Abs.abs",
   "Real.instNegReal",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "instHPow",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Eq.symm",
   "id",
   "Neg.toHasAbs",
   "Real.instMonoidReal",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "instHAdd",
   "MonoidHomClass.toMulHomClass",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "LE.le",
   "Monoid.toMulOneClass",
   "Complex.re",
   "Eq.ndrec",
   "Real.abs_le_sqrt",
   "Real.semiring",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "Complex.normSq_apply",
   "OrderedSemiring.toPartialOrder"],
  "name": "Complex.abs_im_le_abs",
  "constType": "∀ (z : ℂ), |z.im| ≤ Complex.abs z",
  "constCategory": "Theorem"},
 {"references":
  ["Equiv",
   "tsum_disjoint_union_of_nonneg'",
   "CompleteSpace",
   "CompleteSemilatticeInf.toPartialOrder",
   "AddCommGroup.toAddCommMonoid",
   "unionEquiv.proof_3",
   "unionEquiv.proof_2",
   "implies_congr",
   "Eq",
   "BooleanAlgebra.toBiheytingAlgebra",
   "Eq.mpr",
   "Set.iUnion",
   "Set.Elem",
   "Finset.toSet",
   "Nat",
   "Eq.trans",
   "Summable",
   "Subtype",
   "Mathlib.Data.Finset.Basic._auxLemma.60",
   "Ne",
   "CompletelyDistribLattice.toCompleteLattice",
   "CompleteLattice.instOmegaCompletePartialOrder",
   "Function.comp",
   "Finset.instMembershipFinset",
   "unionEquiv.proof_1",
   "BiheytingAlgebra.toHeytingAlgebra",
   "Set.instMembershipSet",
   "CompleteAtomicBooleanAlgebra.toCompletelyDistribLattice",
   "of_eq_true",
   "propext",
   "Finset.tsum_subtype",
   "disjoint_aux",
   "T2Space",
   "Not",
   "ExistsUnique",
   "AddCommGroup",
   "congrArg",
   "Set.mem_iUnion_of_mem",
   "Int",
   "congrFun",
   "Subtype.val",
   "Set",
   "OmegaCompletePartialOrder.toPartialOrder",
   "Eq.refl",
   "Equiv.tsum_eq",
   "True",
   "Subtype.property",
   "UniformSpace",
   "forall_congr",
   "Finset",
   "AddCommGroup.toAddGroup",
   "T0Space",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "Equiv.summable_iff",
   "id",
   "eq_self",
   "Membership.mem",
   "funext",
   "Finset.sum",
   "Disjoint",
   "tsum",
   "Finset.partialOrder",
   "Set.Set.completeAtomicBooleanAlgebra",
   "FunLike.coe",
   "UniformAddGroup",
   "HeytingAlgebra.toOrderBot",
   "Equiv.instFunLikeEquiv",
   "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
   "unionEquiv",
   "Eq.ndrec",
   "Set.instBooleanAlgebraSet",
   "letFun",
   "Equiv.mk",
   "Prod",
   "_private.Modformsported.ForMathlib.TsumLemmas.0.unionEquiv._eq_1",
   "CompleteLattice.toCompleteSemilatticeInf",
   "Subtype.mk"],
  "name": "tsum_lemma",
  "constType":
  "∀ {γ : Type} [inst : AddCommGroup γ] [inst_1 : UniformSpace γ] [inst_2 : UniformAddGroup γ] [inst_3 : CompleteSpace γ]\n  [inst_4 : T0Space γ] [inst_5 : T2Space γ] (f : ℤ × ℤ → γ) (ι : ℕ → Finset (ℤ × ℤ)),\n  (∀ (y : ℤ × ℤ), ∃! i, y ∈ ι i) → Summable f → ∑' (x : ℤ × ℤ), f x = ∑' (n : ℕ), Finset.sum (ι n) fun x => f x",
  "constCategory": "Theorem"},
 {"references": ["funext", "Eq.rec", "rfl", "Eq"],
  "name": "pi_congr",
  "constType":
  "∀ {α : Sort u_5} {β β' : α → Sort u_1}, (∀ (a : α), β a = β' a) → ((a : α) → β a) = ((a : α) → β' a)",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "SeminormedAddCommGroup.to_uniformAddGroup",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "upper_half_plane_isOpen",
   "AddCommGroup.toAddCommMonoid",
   "SetLike.instMembership",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Complex.instCompleteSpaceComplexToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
   "Nat.cast",
   "Set.Elem",
   "EisensteinSeries.squares_cover_all",
   "secondCountable_of_proper",
   "UpperHalfPlane.upperHalfSpace",
   "Nat",
   "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.EisensteinSeries.eisensteinSeriesRestrict._eq_1",
   "T3Space.toT0Space",
   "EisensteinSeries.square",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Subtype",
   "Summable",
   "separated_t3",
   "tsum_lemma",
   "NormedField.toMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Finset.instMembershipFinset",
   "Set.instMembershipSet",
   "polishSpace_of_complete_second_countable",
   "eise",
   "ExistsUnique",
   "Int",
   "Int.instLEInt",
   "EisensteinSeries.eisenSquareSlice",
   "TopologicalSpace.Opens",
   "instOfNatInt",
   "Subtype.val",
   "Real",
   "Set",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "TopologicalSpace.Opens.mk",
   "Eisenstein_tsum",
   "EisensteinSeries.eisenSquare",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "id",
   "Membership.mem",
   "Complex.addCommGroup",
   "Finset.sum",
   "PolishSpace.t2Space",
   "tsum",
   "Complex.instProperSpaceComplexToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
   "NormedField.toNormedCommRing",
   "LE.le",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "instNatCastInt",
   "EisensteinSeries.Eisenstein_tsum_summable",
   "EisensteinSeries.eisensteinSeriesRestrict",
   "letFun",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Prod",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "MetricSpace.to_separated"],
  "name": "EisensteinSeries.Eisenstein_series_is_sum_eisen_squares_slice",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (A B : ℝ) (z : ↑(EisensteinSeries.upperHalfSpaceSlice A B)),\n      EisensteinSeries.eisensteinSeriesRestrict k A B z = ∑' (n : ℕ), EisensteinSeries.eisenSquareSlice k A B n z",
  "constCategory": "Theorem"},
 {"references": ["Zero", "LinearOrderedCommMonoidWithZero"],
  "name": "LinearOrderedCommMonoidWithZero.toZero",
  "constType":
  "{α : Type u_1} → [self : LinearOrderedCommMonoidWithZero α] → Zero α",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Semiring.toMonoidWithZero",
   "True",
   "pow_one",
   "Eq",
   "of_eq_true",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.pow_one",
  "constType": "∀ {R : Type u_1} [inst : CommSemiring R] (a : R), a ^ 1 = a",
  "constCategory": "Theorem"},
 {"references":
  ["LinearOrderedCommRing.toLinearOrderedRing",
   "StrictOrderedCommSemiring.mk",
   "LinearOrderedCommSemiring.mk",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_3",
   "LinearOrderedRing.decidableEq",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_1",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_2",
   "LinearOrderedCommSemiring",
   "LinearOrderedRing.decidableLE",
   "LinearOrderedRing.toOrd",
   "LinearOrderedSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommRing",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "LinearOrderedCommRing.mul_comm",
   "LinearOrderedRing.toMin",
   "LinearOrderedRing.toMax",
   "LinearOrderedRing.decidableLT",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_4"],
  "name": "LinearOrderedCommRing.toLinearOrderedCommSemiring",
  "constType":
  "{α : Type u} → [d : LinearOrderedCommRing α] → LinearOrderedCommSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "instHSMul",
   "HAdd.hAdd",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "UpperHalfPlane.SLAction",
   "Nat.cast_zero",
   "SetLike.instMembership",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "SlashInvariantFormClass",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Eq.mpr",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "NormedDivisionRing.toDivisionRing",
   "Subgroup.toSubmonoid",
   "Ring.toIntCast",
   "HSMul.hSMul",
   "Subgroup",
   "UpperHalfPlane",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "Int.instCommRingInt",
   "Subtype",
   "HPow.hPow",
   "Matrix.semiring",
   "UpperHalfPlane.coe",
   "Fin.fintype",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "Set.instMembershipSet",
   "instHMul",
   "Fin.instAddMonoidWithOne",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "AddMonoidWithOne.toOne",
   "Int.cast",
   "congr",
   "Fin.instOfNatFin",
   "Submonoid.smul",
   "congrArg",
   "Int",
   "NormedField.toNormedDivisionRing",
   "Fin",
   "congrFun",
   "SlashInvariantForm.slash_action_eqn'",
   "SetLike.coe",
   "Subtype.val",
   "Real",
   "Set",
   "SlashInvariantFormClass.toFunLike",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "algebraInt",
   "Zero.toOfNat0",
   "Matrix.det",
   "AddMonoidWithOne.toNatCast",
   "instHPow",
   "AddMonoid.toZero",
   "Matrix",
   "instOfNatNat",
   "Eq.symm",
   "id",
   "Membership.mem",
   "NeZero.succ",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "FunLike.coe",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup.coeToGL",
   "Eq.ndrec",
   "Units.val",
   "letFun",
   "HMul.hMul",
   "Complex",
   "Group.toDivInvMonoid",
   "Complex.instMulComplex",
   "Subgroup.instSetLikeSubgroup"],
  "name": "EisensteinSeries.slash_action_eqn''",
  "constType":
  "∀ {F : Type u_1} (k : ℤ) (Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) [inst : SlashInvariantFormClass F Γ k]\n  (f : F) (γ : ↥Γ) (z : UpperHalfPlane), f (γ • z) = (↑(↑↑γ 1 0) * ↑z + ↑(↑↑γ 1 1)) ^ k * f z",
  "constCategory": "Theorem"},
 {"references":
  ["instHSub",
   "Nat.sub_add_cancel",
   "Eq.mpr",
   "Eq.ndrec",
   "instLENat",
   "instAddNat",
   "instSubNat",
   "instHAdd",
   "HAdd.hAdd",
   "HSub.hSub",
   "Eq.refl",
   "Nat",
   "Eq.symm",
   "LE.le",
   "id",
   "Eq"],
  "name": "Nat.eq_add_of_sub_eq",
  "constType": "∀ {a b c : ℕ}, b ≤ a → a - b = c → a = c + b",
  "constCategory": "Theorem"},
 {"references": ["Real", "UpperHalfPlane.coe", "UpperHalfPlane", "Complex.re"],
  "name": "UpperHalfPlane.re",
  "constType": "UpperHalfPlane → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "OrderedAddCommGroup.toPartialOrder",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "PartialOrder.toPreorder",
   "upper_half_plane_isOpen",
   "Real.instLEReal",
   "AbsoluteValue",
   "Real.instSupReal",
   "exists_true_iff_nonempty",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Nonempty",
   "Iff.mpr",
   "Complex.abs_ofReal",
   "Eq",
   "Iff.of_eq",
   "Real.linearOrder",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "SemilatticeSup.toSup",
   "Set.Elem",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "UpperHalfPlane.upperHalfSpace",
   "Std.Classes.Order._auxLemma.3",
   "Eq.trans",
   "Subtype",
   "Complex.abs",
   "setOf",
   "instDistribLattice",
   "PseudoMetricSpace.toUniformSpace",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "le_abs_self",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DistribLattice.toLattice",
   "Complex.im",
   "And",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "Mathlib.Topology.Sets.Opens._auxLemma.1",
   "LT.lt",
   "congr",
   "And.intro",
   "congrArg",
   "OrderedAddCommGroup.toAddCommGroup",
   "congrFun",
   "exists_prop_congr'",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Exists",
   "TopologicalSpace.Opens",
   "Mathlib.Data.Subtype._auxLemma.2",
   "Subtype.val",
   "Real",
   "Set",
   "GE.ge",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "Exists.intro",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "abs_eq_self",
   "TopologicalSpace.Opens.mk",
   "True",
   "Abs.abs",
   "Real.instNegReal",
   "AbsoluteValue.subadditiveHomClass",
   "Zero.toOfNat0",
   "Complex.instSemiringComplex",
   "Lattice.toSemilatticeSup",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "Complex.ofReal'",
   "Membership.mem",
   "Neg.toHasAbs",
   "funext",
   "Real.instLTReal",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "Real.instLinearOrderedAddCommGroupReal",
   "LE.le",
   "Std.Logic._auxLemma.51",
   "and_true",
   "Complex.re",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Complex.mk",
   "Real.instPreorderReal",
   "le_refl",
   "letFun",
   "OrderedSemiring.toSemiring",
   "Complex",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg",
   "OrderedSemiring.toPartialOrder",
   "Subtype.mk"],
  "name": "EisensteinSeries.nonemp",
  "constType":
  "∀ (A B : ℝ), 0 ≤ A → 0 < B → Nonempty ↑(EisensteinSeries.upperHalfSpaceSlice A B)",
  "constCategory": "Definition"},
 {"references": ["List", "String", "Lean.Syntax.Preresolved", "Lean.Name"],
  "name": "Lean.Syntax.Preresolved.decl",
  "constType": "Lean.Name → List String → Lean.Syntax.Preresolved",
  "constCategory": "Other"},
 {"references":
  ["Finset", "LocallyFiniteOrder.finsetIcc", "LocallyFiniteOrder", "Preorder"],
  "name": "Finset.Icc",
  "constType":
  "{α : Type u_1} → [inst : Preorder α] → [inst : LocallyFiniteOrder α] → α → α → Finset α",
  "constCategory": "Definition"},
 {"references":
  ["NormedField.toField",
   "SeminormedRing",
   "SeminormedRing.toRing",
   "Semifield.toCommSemiring",
   "NormedField",
   "Algebra",
   "Field.toSemifield",
   "NormedAlgebra",
   "Ring.toSemiring"],
  "name": "NormedAlgebra.toAlgebra",
  "constType":
  "{𝕜 : Type u_5} →\n  {𝕜' : Type u_6} → [inst : NormedField 𝕜] → [inst_1 : SeminormedRing 𝕜'] → [self : NormedAlgebra 𝕜 𝕜'] → Algebra 𝕜 𝕜'",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "PartialOrder.toPreorder",
   "LT.lt.le",
   "instHAdd",
   "HAdd.hAdd",
   "LE.le",
   "Preorder.toLE",
   "Iff.mpr",
   "LT.lt.ne",
   "PartialOrder",
   "CovariantClass.elim",
   "LE.le.lt_of_ne",
   "Preorder.toLT",
   "LT.lt",
   "CovariantClass",
   "Add",
   "CovariantClass.mk",
   "add_ne_add_right",
   "IsLeftCancelAdd"],
  "name": "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
  "constType":
  "∀ (N : Type u_2) [inst : Add N] [inst_1 : IsLeftCancelAdd N] [inst_2 : PartialOrder N]\n  [inst_3 : CovariantClass N N (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1],\n  CovariantClass N N (fun x x_1 => x + x_1) fun x x_1 => x < x_1",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Monoid.toOne",
   "Nat.rawCast",
   "Semiring.toMonoidWithZero",
   "One.toOfNat1",
   "one_pow",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "congr",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "congrArg",
   "Eq.trans",
   "Nat.cast_one",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.one_pow",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (b : ℕ), Nat.rawCast 1 ^ b = Nat.rawCast 1",
  "constCategory": "Theorem"},
 {"references":
  ["IsCompact.image_of_continuousOn",
   "Membership.mem",
   "Exists",
   "IsCompact.exists_isLeast",
   "LinearOrder",
   "PartialOrder.toPreorder",
   "Lattice.toSemilatticeInf",
   "Set.Nonempty.image",
   "instDistribLattice",
   "Set",
   "Set.Nonempty",
   "SemilatticeInf.toPartialOrder",
   "IsMinOn",
   "Exists.intro",
   "Exists.casesOn",
   "Preorder.toLE",
   "Eq",
   "Set.instMembershipSet",
   "DistribLattice.toLattice",
   "And",
   "Iff.mp",
   "Eq.ndrec",
   "Set.ball_image_iff",
   "ClosedIicTopology",
   "lowerBounds",
   "TopologicalSpace",
   "And.intro",
   "IsLeast",
   "Set.image",
   "And.casesOn",
   "IsCompact",
   "ContinuousOn"],
  "name": "IsCompact.exists_isMinOn",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrder α] [inst_1 : TopologicalSpace α] [inst_2 : TopologicalSpace β]\n  [inst_3 : ClosedIicTopology α] {s : Set β},\n  IsCompact s → Set.Nonempty s → ∀ {f : β → α}, ContinuousOn f s → ∃ x ∈ s, IsMinOn f s x",
  "constCategory": "Theorem"},
 {"references": ["Int.neg.match_1", "Nat", "Nat.succ", "Int"],
  "name": "Int.natAbs",
  "constType": "ℤ → ℕ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Semiring.toMonoidWithZero",
   "Nat.cast_nonneg",
   "LE.le",
   "Preorder.toLE",
   "True",
   "Semiring.toNatCast",
   "Eq",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "eq_true",
   "Nat.cast",
   "OrderedSemiring.toSemiring",
   "Nat",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name": "Mathlib.Data.Nat.Cast.Order._auxLemma.2",
  "constType":
  "∀ {α : Type u_3} [inst : OrderedSemiring α] (n : ℕ), (0 ≤ ↑n) = True",
  "constCategory": "Theorem"},
 {"references": ["Mul", "Nat", "Nat.mul", "Mul.mk"],
  "name": "instMulNat",
  "constType": "Mul ℕ",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "Matrix.semiring",
   "Matrix.GeneralLinearGroup.det",
   "Semiring.toMonoidWithZero",
   "Matrix.GeneralLinearGroup",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "Subgroup.comap",
   "Units.instGroupUnits",
   "CommRing.toCommSemiring",
   "Units",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Fintype",
   "DecidableEq",
   "StrictOrderedCommRing.toCommRing",
   "MonoidWithZero.toMonoid",
   "Matrix",
   "Subgroup",
   "LinearOrderedCommRing",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Units.posSubgroup"],
  "name": "Matrix.GLPos",
  "constType":
  "(n : Type u) →\n  (R : Type v) → [inst : DecidableEq n] → [inst_1 : Fintype n] → [inst_2 : LinearOrderedCommRing R] → Subgroup (GL n R)",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup",
   "Complex.instIsROrCComplex",
   "InnerProductSpace",
   "Real",
   "Real.isROrC",
   "Complex",
   "InnerProductSpace.isROrCToReal"],
  "name": "InnerProductSpace.complexToReal",
  "constType":
  "{G : Type u_4} → [inst : NormedAddCommGroup G] → [inst_1 : InnerProductSpace ℂ G] → InnerProductSpace ℝ G",
  "constCategory": "Definition"},
 {"references":
  ["Eq.mpr",
   "OfNat.ofNat",
   "Eq.ndrec",
   "propext",
   "Eq.refl",
   "Fin.instOfNatFinHAddNatInstHAddInstAddNatOfNat",
   "Fin.forall_fin_one",
   "instOfNatNat",
   "Matrix.vecCons",
   "Nat",
   "Fin",
   "id",
   "Eq"],
  "name": "Matrix.cons_val_fin_one",
  "constType":
  "∀ {α : Type u} (x : α) (u : Fin 0 → α) (i : Fin 1), Matrix.vecCons x u i = x",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "IsROrC.innerProductSpace",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "CommSemiring.toSemiring",
   "Complex.instNormedFieldComplex",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Filter.eventually_of_forall",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "upper_half_plane_isOpen",
   "EisensteinSeries.Eisen_partial_tends_to_uniformly_on_ball'",
   "TendstoLocallyUniformlyOn",
   "Mathlib.Meta.NormNum.isInt_add",
   "Nat.cast_zero",
   "Semiring.toNatCast",
   "Dist.dist",
   "SubNegMonoid.toSub",
   "Complex.instCompleteSpaceComplexToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "Set.Elem",
   "EisensteinSeries.eisenSquare'",
   "UpperHalfPlane.upperHalfSpace",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Linarith.lt_of_lt_of_eq",
   "instOfNat",
   "Subtype",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Nat.strictOrderedSemiring",
   "HPow.hPow",
   "instHSub",
   "Complex.instZeroComplex",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Complex.instDenselyNormedFieldComplex",
   "Mathlib.Order.Basic._auxLemma.1",
   "PseudoMetricSpace.toUniformSpace",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "DifferentiableOn.mono",
   "Complex.im",
   "InnerProductSpace.toNormedSpace",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "And",
   "eq_true",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Metric.isOpen_ball",
   "instInhabitedNat",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "And.intro",
   "MonoidWithZero.toZero",
   "Int",
   "SetLike.coe",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Exists",
   "CommMonoidWithZero.toZero",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Subtype.val",
   "Set",
   "Real",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Int.rawCast",
   "Eq.refl",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsHolomorphicOn",
   "Exists.intro",
   "AddMonoid.toAddZeroClass",
   "diff_on_diff",
   "IsCancelAdd.toIsRightCancelAdd",
   "TopologicalSpace.Opens.mk",
   "Mathlib.Tactic.Ring.sub_pf",
   "Subtype.pseudoMetricSpace",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.10",
   "EisensteinSeries.eisenSquare'_diff_on",
   "AddMonoidWithOne.toNatCast",
   "Complex.instIsROrCComplex",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "Lattice.toSemilatticeSup",
   "UniformSpace.toTopologicalSpace",
   "instNonempty",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Not.intro",
   "NonUnitalNonAssocRing.toMul",
   "Filter.atTop_neBot",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Real.instLTReal",
   "EisensteinSeries.ball_in_upper_half",
   "extendByZero",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "One.toOfNat1",
   "Neg.neg",
   "Complex.instProperSpaceComplexToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "NormedCommRing.toSeminormedCommRing",
   "Set.instHasSubsetSet",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Bool.false",
   "letFun",
   "Real.instPreorderReal",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "NegZeroClass.toNeg",
   "Int.instAddMonoidInt",
   "Mathlib.Tactic.Ring.mul_congr",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Metric.closedBall",
   "Real.instLEReal",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Exists.casesOn",
   "_private.Mathlib.Data.Real.Basic.0.Real.lt",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Eq",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "NormedField.toNormedSpace",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "le_trans",
   "Metric.ball",
   "Nat",
   "And.casesOn",
   "Eq.trans",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Ne",
   "neg_neg_of_pos",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "HasSubset.Subset",
   "Int.instCommSemiringInt",
   "Nat.instLatticeNat",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "tendstoLocallyUniformlyOn_iff_tendstoUniformlyOn_of_compact",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instLTInt",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "Int.instAddGroupInt",
   "TopologicalSpace.Opens.carrier",
   "AddCancelMonoid.toIsCancelAdd",
   "of_eq_true",
   "Eq.mp",
   "Not",
   "EisensteinSeries.holExtn",
   "Filter.atTop",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "StrictOrderedRing.toRing",
   "TopologicalSpace.Opens",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "TendstoUniformlyOn",
   "SeminormedRing.toPseudoMetricSpace",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Int.linearOrderedCommRing",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Ring.toNonAssocRing",
   "isHolomorphicOn_iff_differentiableOn",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "Eisenstein_tsum",
   "instHPow",
   "Preorder.toLT",
   "TendstoLocallyUniformlyOn.mono",
   "AddMonoid.toZero",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "Linarith.mul_neg",
   "instOfNatNat",
   "NeZero.charZero_one",
   "add_lt_of_neg_of_le",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "Membership.mem",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "LT.lt.le",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.7",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HSub.hSub",
   "AddMonoidWithOne.toAddMonoid",
   "Metric.ball_subset_closedBall",
   "ProperSpace.isCompact_closedBall",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Semiring.toOne",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "PseudoMetricSpace.toDist",
   "StrictOrderedSemiring.to_charZero",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedCommSemiring.toOrderedSemiring",
   "TendstoLocallyUniformlyOn.differentiableOn",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Int.instSemiringInt",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "Bool",
   "Complex.instNormedAddCommGroupComplex",
   "NegZeroClass.toZero",
   "DenselyNormedField.toNontriviallyNormedField",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.Eisenstein_is_holomorphic'",
  "constType":
  "∀ (k : ℤ), 3 ≤ k → IsHolomorphicOn (EisensteinSeries.holExtn (Eisenstein_tsum k))",
  "constCategory": "Theorem"},
 {"references":
  ["MonoidWithZeroHom.toZeroHom",
   "MulOneClass.toMul",
   "ZeroHom.toFun",
   "MulZeroOneClass.toMulOneClass",
   "MonoidWithZeroHomClass",
   "FunLike.mk",
   "MonoidWithZeroHom.map_one'",
   "MonoidWithZeroHom.monoidWithZeroHomClass.proof_2",
   "MonoidWithZeroHom.map_mul'",
   "MulZeroOneClass.toZero",
   "MonoidWithZeroHom",
   "MonoidWithZeroHomClass.mk",
   "MonoidWithZeroHom.monoidWithZeroHomClass.proof_1",
   "MulHomClass.mk",
   "MonoidHomClass.mk",
   "MulZeroOneClass"],
  "name": "MonoidWithZeroHom.monoidWithZeroHomClass",
  "constType":
  "{M : Type u_3} →\n  {N : Type u_4} → [inst : MulZeroOneClass M] → [inst_1 : MulZeroOneClass N] → MonoidWithZeroHomClass (M →*₀ N) M N",
  "constCategory": "Definition"},
 {"references": [],
  "name": "False",
  "constType": "Prop",
  "constCategory": "Other"},
 {"references": ["outParam", "Membership"],
  "name": "Membership.mem",
  "constType":
  "{α : outParam (Type u)} → {γ : Type v} → [self : Membership α γ] → α → γ → Prop",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedCancelAddCommMonoid.toOrd",
   "LinearOrderedCancelAddCommMonoid.toOrderedCancelAddCommMonoid",
   "LinearOrderedCancelAddCommMonoid.decidableLE",
   "LinearOrderedCancelAddCommMonoid.decidableEq",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
   "LinearOrderedCancelAddCommMonoid.toMin",
   "LinearOrderedAddCommMonoid",
   "LinearOrderedCancelAddCommMonoid.min_def",
   "LinearOrderedCancelAddCommMonoid.le_total",
   "LinearOrderedCancelAddCommMonoid.toMax",
   "LinearOrderedAddCommMonoid.mk",
   "LinearOrderedCancelAddCommMonoid",
   "LinearOrderedCancelAddCommMonoid.compare_eq_compareOfLessAndEq",
   "LinearOrderedCancelAddCommMonoid.max_def",
   "LinearOrderedCancelAddCommMonoid.decidableLT"],
  "name": "LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid",
  "constType":
  "{α : Type u_3} → [self : LinearOrderedCancelAddCommMonoid α] → LinearOrderedAddCommMonoid α",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Matrix",
  "constType": "Type u → Type u' → Type v → Type (max u u' v)",
  "constCategory": "Definition"},
 {"references": ["Zero", "AddMonoid"],
  "name": "AddMonoid.toZero",
  "constType": "{M : Type u} → [self : AddMonoid M] → Zero M",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_one",
   "Distrib.toAdd",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "PartialOrder.toPreorder",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Real.instAddMonoidReal",
   "DivInvMonoid.Pow",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Nat.cast_zero",
   "Iff.mpr",
   "Real.orderedRing",
   "Mathlib.Meta.NormNum.isInt_add",
   "Semiring.toNatCast",
   "Real.instOneReal",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "IsROrC.charZero_isROrC",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "Real.instPowReal",
   "LinearOrderedField.toLinearOrderedSemifield",
   "HDiv.hDiv",
   "Linarith.lt_of_lt_of_eq",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Summable",
   "HPow.hPow",
   "instHSub",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "instHDiv",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "eq_of_heq",
   "PseudoMetricSpace.toUniformSpace",
   "Real.instRingReal",
   "Real.normedCommRing",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Real.summable_nat_rpow_inv",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "False.elim",
   "AddMonoidWithOne.toOne",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "instNatAtLeastTwo",
   "LinearOrder.toPartialOrder",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "MonoidWithZero.toZero",
   "Int",
   "congrFun",
   "Inv.inv",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Mathlib.Data.Int.Cast.Lemmas._auxLemma.8",
   "HEq",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Real",
   "GE.ge",
   "Semiring.toMonoidWithZero",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "EisensteinSeries.rfunct",
   "AddMonoid.toAddZeroClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "UniformSpace.toTopologicalSpace",
   "EisensteinSeries.rfunct_pos",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "zpow_ne_zero",
   "Not.intro",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Real.nontrivial",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "One.toOfNat1",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "GroupWithZero.toMonoidWithZero",
   "LE.le",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "div_ne_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "instNatCastInt",
   "instTopologicalRingRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceToNonUnitalNonAssocRingToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "Bool.false",
   "Real.instPreorderReal",
   "letFun",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.8",
   "Semifield.toDivisionSemiring",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
   "Mathlib.Tactic.Ring.add_mul",
   "Real.instAddCommMonoidReal",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.atom_pf",
   "Modformsported.ForMathlib.EisensteinSeries.summable._auxLemma.12",
   "Real.orderedAddCommGroup",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "HAdd.hAdd",
   "Real.instSubReal",
   "Real.instMulReal",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Inv",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "AddCommMonoid",
   "StrictOrderedRing.toPartialOrder",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Real.partialOrder",
   "DivisionSemiring.toGroupWithZero",
   "neg_neg_of_pos",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Int.instCommSemiringInt",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.intCast",
   "Real.orderedSemiring",
   "lt_of_not_ge",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instLTInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Iff.symm",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Int.instAddGroupInt",
   "Mathlib.Tactic.Ring.of_eq",
   "HEq.refl",
   "of_eq_true",
   "AddCancelMonoid.toIsCancelAdd",
   "Int.cast",
   "Eq.mp",
   "Not",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "LinearOrderedRing.toStrictOrderedRing",
   "Linarith.lt_irrefl",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "Preorder.toLT",
   "instHPow",
   "TopologicalRing.toTopologicalSemiring",
   "summable_mul_left_iff",
   "AddMonoid.toZero",
   "TopologicalSpace",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "Linarith.mul_neg",
   "instOfNatNat",
   "Int.instLinearOrderInt",
   "Real.strictOrderedRing",
   "NeZero.charZero_one",
   "add_lt_of_neg_of_le",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "funext",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "False",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoidWithOne.toAddMonoid",
   "HSub.hSub",
   "Real.pseudoMetricSpace",
   "Real.rpow_int_cast",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Real.instZeroReal",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "StrictOrderedSemiring.to_charZero",
   "Real.semiring",
   "OrderedCommSemiring.toOrderedSemiring",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Eq.casesOn",
   "Bool",
   "NegZeroClass.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.summable_rfunct_twist",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane), 3 ≤ k → Summable fun n => 8 / EisensteinSeries.rfunct z ^ k * (↑n ^ (k - 1))⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["Mathlib.Tactic.Ring.one_pow",
   "Distrib.toAdd",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "PartialOrder.toPreorder",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "upper_half_plane_isOpen",
   "Real.instAddMonoidReal",
   "Mathlib.Tactic.Ring.pow_zero",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "pow_one",
   "Nat.cast_zero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Real.instOneReal",
   "Semiring.toNatCast",
   "Mathlib.Tactic.Ring.inv_mul",
   "Real.linearOrder",
   "IsROrC.charZero_isROrC",
   "Nat.cast",
   "Set.Elem",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "Real.strictOrderedSemiring",
   "LinearOrderedField.toLinearOrderedSemifield",
   "UpperHalfPlane.upperHalfSpace",
   "Std.Classes.Order._auxLemma.3",
   "HDiv.hDiv",
   "Mathlib.Tactic.Ring.pow_add",
   "InvOneClass.toInv",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "Left.add_neg",
   "Subtype",
   "instHSub",
   "HPow.hPow",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "instHDiv",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "PseudoMetricSpace.toUniformSpace",
   "Real.instRingReal",
   "CommGroupWithZero.toCommMonoidWithZero",
   "DivisionRing.toInv",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "congr",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "LinearOrder.toPartialOrder",
   "OrderedSemiring.toMulPosMono",
   "MonoidWithZero.toZero",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "congrFun",
   "Inv.inv",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "LinearOrderedSemifield.toInv",
   "instOfNatInt",
   "Subtype.val",
   "Real",
   "Set",
   "Semiring.toMonoidWithZero",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "EisensteinSeries.rfunct",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "TopologicalSpace.Opens.mk",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.15",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "Mathlib.Tactic.Ring.inv_single",
   "UniformSpace.toTopologicalSpace",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "CommGroupWithZero.toDivisionCommMonoid",
   "EisensteinSeries.rfunct_pos",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "NonUnitalNonAssocRing.toMul",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Mathlib.Tactic.Ring.mul_pow",
   "EisensteinSeries.rfunct_lower_bound_on_slice",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "pow_pos",
   "One.toOfNat1",
   "Neg.neg",
   "mul_le_mul_of_nonneg_right",
   "NormedField.toNormedCommRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "Real.instDivisionRingReal",
   "Nat.commSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "instNatCastInt",
   "Bool.false",
   "DivisionMonoid.toDivInvMonoid",
   "Mathlib.Tactic.Ring.one_mul",
   "letFun",
   "Real.instPreorderReal",
   "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
   "Mathlib.Tactic.Ring.add_mul",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.atom_pf",
   "Real.orderedAddCommGroup",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Real.instLEReal",
   "HAdd.hAdd",
   "Real.isROrC",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Eq",
   "Mathlib.Tactic.Ring.div_pf",
   "AddZeroClass.toZero",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Semiring.toNonAssocSemiring",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.16",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Real.instInvReal",
   "Nat",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "neg_neg_of_pos",
   "Real.partialOrder",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.div_congr",
   "Mathlib.Tactic.Ring.add_congr",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "AddCancelMonoid.toIsCancelAdd",
   "DivInvOneMonoid.toInvOneClass",
   "Eq.mp",
   "Real.instAddGroupReal",
   "mul_one",
   "add_zero",
   "congrArg",
   "Mathlib.Tactic.Ring.mul_one",
   "OrderedAddCommGroup.toAddCommGroup",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "TopologicalSpace.Opens",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Linarith.lt_irrefl",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "DivisionRing.toRing",
   "Real.natCast",
   "lt_zero_of_zero_gt",
   "SeminormedRing.toPseudoMetricSpace",
   "pow_le_pow_left",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "zpow_nonneg",
   "LinearOrderedField.toDiv",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "instHPow",
   "Preorder.toLT",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "Linarith.mul_neg",
   "instOfNatNat",
   "Real.strictOrderedRing",
   "Mathlib.Tactic.Ring.pow_congr",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "DivisionRing.toDiv",
   "id",
   "Membership.mem",
   "inv_pow",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "IsCancelAdd.toIsLeftCancelAdd",
   "Real.instMonoidReal",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "GT.gt",
   "Semiring.toOne",
   "Real.instZeroReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "inv_le_inv",
   "StrictOrderedSemiring.toPartialOrder",
   "EisensteinSeries.lbpoint",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "Bool",
   "OrderedSemiring.toPartialOrder",
   "Nat.semiring"],
  "name": "EisensteinSeries.rfunctbound'",
  "constType":
  "∀ (k : ℕ) (A B : ℝ) (hb : 0 < B) (z : ↑(EisensteinSeries.upperHalfSpaceSlice A B)) (n : ℕ),\n  8 / EisensteinSeries.rfunct ↑z ^ k * (↑n ^ (↑k - 1))⁻¹ ≤\n    8 / EisensteinSeries.rfunct (EisensteinSeries.lbpoint A B hb) ^ k * (↑n ^ (↑k - 1))⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableOn",
   "upper_half_plane_isOpen",
   "dite",
   "Finset.sum_const_zero",
   "SetLike.instMembership",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Nat.cast",
   "NormedField.toNormedSpace",
   "UpperHalfPlane.upperHalfSpace",
   "Nat",
   "Finset.sum_congr",
   "EisensteinSeries.square",
   "Eq.trans",
   "Subtype",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Ne",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "Classical.propDecidable",
   "PseudoMetricSpace.toUniformSpace",
   "Finset.sum_dite_irrel",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Finset.instMembershipFinset",
   "Eq.mpr_prop",
   "Set.instMembershipSet",
   "TopologicalSpace.Opens.carrier",
   "of_eq_true",
   "propext",
   "eise",
   "congr",
   "Not",
   "congrArg",
   "Int",
   "SetLike.coe",
   "TopologicalSpace.Opens",
   "instOfNatInt",
   "Set",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "AddCommMonoid.toAddMonoid",
   "IsHolomorphicOn",
   "DifferentiableOn.sum",
   "dite_congr",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "TopologicalSpace.Opens.mk",
   "True",
   "isHolomorphicOn_iff_differentiableOn",
   "Zero.toOfNat0",
   "EisensteinSeries.eisenSquare",
   "AddMonoid.toZero",
   "Finset",
   "EisensteinSeries.Eise'_has_diff_within_at",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "id",
   "eq_self",
   "Membership.mem",
   "funext",
   "extendByZero",
   "Finset.sum",
   "NormedField.toNormedCommRing",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "instNatCastInt",
   "letFun",
   "Complex",
   "Prod",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Complex.instNormedAddCommGroupComplex",
   "DenselyNormedField.toNontriviallyNormedField",
   "Subtype.mk"],
  "name": "EisensteinSeries.eisenSquare_diff_on",
  "constType":
  "∀ (k : ℤ), k ≠ 0 → ∀ (n : ℕ), IsHolomorphicOn fun z => EisensteinSeries.eisenSquare k n z",
  "constCategory": "Theorem"},
 {"references": ["Pure"],
  "name": "Pure.pure",
  "constType":
  "{f : Type u → Type v} → [self : Pure f] → {α : Type u} → α → f α",
  "constCategory": "Definition"},
 {"references": ["SubtractionCommMonoid", "SubtractionMonoid"],
  "name": "SubtractionCommMonoid.toSubtractionMonoid",
  "constType":
  "{G : Type u} → [self : SubtractionCommMonoid G] → SubtractionMonoid G",
  "constCategory": "Definition"},
 {"references": ["AddGroupWithOne", "IntCast"],
  "name": "AddGroupWithOne.toIntCast",
  "constType": "{R : Type u} → [self : AddGroupWithOne R] → IntCast R",
  "constCategory": "Definition"},
 {"references": ["String", "String.toSubstring", "Substring"],
  "name": "String.toSubstring'",
  "constType": "String → Substring",
  "constCategory": "Definition"},
 {"references": ["Nat"],
  "name": "Nat.le",
  "constType": "ℕ → ℕ → Prop",
  "constCategory": "Other"},
 {"references": [],
  "name": "SMul",
  "constType": "Type u → Type v → Type (max u v)",
  "constCategory": "Other"},
 {"references":
  ["MulOneClass.toMul",
   "DivisionRing.toDivisionSemiring",
   "Monoid.toOne",
   "DivisionRing.toRing",
   "div_eq_mul_inv",
   "Invertible",
   "True",
   "Ring.toNonAssocRing",
   "MulZeroClass.toMul",
   "Semiring.toNatCast",
   "Eq",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "Rat.rawCast",
   "HDiv.hDiv",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "GroupWithZero.toInv",
   "DivInvMonoid.toDiv",
   "eq_self",
   "NonUnitalNonAssocRing.toMul",
   "DivisionRing",
   "Invertible.invOf",
   "instHDiv",
   "DivisionSemiring.toGroupWithZero",
   "Mathlib.Meta.NormNum.IsRat",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Mathlib.Meta.NormNum.IsRat.to_raw_eq.match_1",
   "DivInvMonoid.toMonoid",
   "Ring.toSemiring",
   "Monoid.toMulOneClass",
   "MulZeroOneClass.toMulZeroClass",
   "GroupWithZero.toMonoidWithZero",
   "invOf_eq_inv",
   "DivInvMonoid.toInv",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "instHMul",
   "MonoidWithZero.toMulZeroOneClass",
   "of_eq_true",
   "Int.cast",
   "congr",
   "HMul.hMul",
   "congrArg",
   "Int",
   "Inv.inv"],
  "name": "Mathlib.Meta.NormNum.IsRat.to_raw_eq",
  "constType":
  "∀ {α : Type u_1} {n : ℤ} {d : ℕ} [inst : DivisionRing α] {a : α}, Mathlib.Meta.NormNum.IsRat a n d → a = Rat.rawCast n d",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "Monoid.toOne",
   "instOfNatInt",
   "HAdd.hAdd",
   "Eq.refl",
   "DivInvMonoid.Pow",
   "inv_one",
   "True",
   "zpow_ofNat",
   "DivInvMonoid.zpow_neg'",
   "Eq",
   "DivisionMonoid",
   "Eq.mpr",
   "Nat.add",
   "Nat.cast",
   "instHPow",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Int.instNegInt",
   "InvolutiveInv.toInv",
   "Nat",
   "Eq.symm",
   "DivisionMonoid.toInvolutiveInv",
   "InvOneClass.toInv",
   "Eq.trans",
   "zpow_negSucc",
   "id",
   "HPow.hPow",
   "eq_self",
   "instAddNat",
   "instHAdd",
   "Unit",
   "Neg.neg",
   "One.toOfNat1",
   "inv_inv",
   "DivInvMonoid.toMonoid",
   "DivInvMonoid.toInv",
   "InvOneClass.toOne",
   "Eq.ndrec",
   "instNatCastInt",
   "of_eq_true",
   "Int.negSucc",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvMonoid",
   "letFun",
   "congr",
   "zpow_zero",
   "DivisionMonoid.toDivInvOneMonoid",
   "congrArg",
   "Int",
   "zpow_neg.match_1",
   "Inv.inv"],
  "name": "zpow_neg",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionMonoid α] (a : α) (n : ℤ), a ^ (-n) = (a ^ n)⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "Subtype.val",
   "HAdd.hAdd",
   "Real",
   "DivInvMonoid.Pow",
   "Zero.toOfNat0",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "instHPow",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "HDiv.hDiv",
   "DivisionRing.toDivInvMonoid",
   "Complex.instOneComplex",
   "HPow.hPow",
   "instHDiv",
   "Prod.snd",
   "Real.instLTReal",
   "instHAdd",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "Complex.instAddComplex",
   "Prod.fst",
   "Complex.im",
   "Real.instZeroReal",
   "instHMul",
   "Int.cast",
   "LT.lt",
   "HMul.hMul",
   "Complex",
   "Prod",
   "Field.toDiv",
   "NormedField.toNormedDivisionRing",
   "Int",
   "Complex.instMulComplex"],
  "name": "eise",
  "constType": "ℤ → UpperHalfPlane → ℤ × ℤ → ℂ",
  "constCategory": "Definition"},
 {"references": ["NonUnitalNormedRing", "NonUnitalNormedCommRing"],
  "name": "NonUnitalNormedCommRing.toNonUnitalNormedRing",
  "constType":
  "{α : Type u_5} → [self : NonUnitalNormedCommRing α] → NonUnitalNormedRing α",
  "constCategory": "Definition"},
 {"references": ["HEq"],
  "name": "HEq.refl",
  "constType": "∀ {α : Sort u} (a : α), HEq a a",
  "constCategory": "Other"},
 {"references": ["SubNegMonoid", "SubNegZeroMonoid"],
  "name": "SubNegZeroMonoid.toSubNegMonoid",
  "constType": "{G : Type u_2} → [self : SubNegZeroMonoid G] → SubNegMonoid G",
  "constCategory": "Definition"},
 {"references":
  ["lt_of_le_not_le",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Preorder.toLT",
   "LT.lt",
   "GE.ge",
   "Or.resolve_right",
   "LinearOrder.toPartialOrder",
   "Not",
   "LE.le",
   "Preorder.toLE",
   "le_total"],
  "name": "lt_of_not_ge",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b : α}, ¬a ≥ b → a < b",
  "constCategory": "Theorem"},
 {"references": ["NonAssocRing", "NonUnitalNonAssocRing"],
  "name": "NonAssocRing.toNonUnitalNonAssocRing",
  "constType":
  "{α : Type u_1} → [self : NonAssocRing α] → NonUnitalNonAssocRing α",
  "constCategory": "Definition"},
 {"references":
  ["Mathlib.Tactic.Ring.one_pow",
   "Min.min",
   "Distrib.toAdd",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "add_nonpos",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "Real.instAddMonoidReal",
   "Mathlib.Tactic.Ring.pow_zero",
   "MulZeroClass.toMul",
   "Nat.cast_zero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Real.instOneReal",
   "UpperHalfPlane.re",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "Real.linearOrder",
   "Nat.cast",
   "mul_pos_of_neg_of_neg",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "Real.strictOrderedSemiring",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_nonneg'",
   "HDiv.hDiv",
   "le_of_lt",
   "Mathlib.Tactic.Ring.pow_add",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Complex.instOneComplex",
   "_private.Modformsported.ForMathlib.EisensteinSeries.bounds.0.EisensteinSeries.rfunct._eq_1",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Or",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "instDistribLattice",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "Complex.instAddComplex",
   "Real.instRingReal",
   "Real.normedCommRing",
   "Real.sqrt",
   "SubadditiveHomClass.toFunLike",
   "Complex.im",
   "And",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "LT.lt",
   "congr",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "LinearOrder.toPartialOrder",
   "And.intro",
   "Int",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "Mathlib.Tactic.Ring.add_overlap_pf",
   "congrFun",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "Subtype.val",
   "Real",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Real.orderedCancelAddCommMonoid",
   "Eq.refl",
   "Int.rawCast",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "StarOrderedRing.toExistsAddOfLE",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "Real.instAddCommGroupReal",
   "UpperHalfPlane.im",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_add",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Complex.abs.proof_1",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "_private.Modformsported.ForMathlib.EisensteinSeries.bounds.0.EisensteinSeries.lb._eq_1",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.ofReal'",
   "pow_two",
   "neg_nonpos_of_nonneg",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Real.instLinearOrderedRingReal",
   "Or.inr",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Real.instLTReal",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.mul_pow",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Tactic.Ring.mul_add",
   "add_lt_of_le_of_neg",
   "MulHom.mk",
   "MulHomClass.toFunLike",
   "One.toOfNat1",
   "Mathlib.Order.MinMax._auxLemma.3",
   "Neg.neg",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "Monoid.toMulOneClass",
   "LE.le",
   "EisensteinSeries.lb",
   "Mathlib.Meta.NormNum.isNat_mul",
   "NormedCommRing.toSeminormedCommRing",
   "sub_neg_of_lt",
   "mul_self_nonneg",
   "Or.inl",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.one_mul",
   "letFun",
   "Real.instPreorderReal",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "NegZeroClass.toNeg",
   "Complex.normSq_apply",
   "Real.orderedAddCommGroup",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "Real.instSubReal",
   "AbsoluteValue",
   "Real.instLEReal",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.instMulReal",
   "AddGroup.toSubtractionMonoid",
   "Preorder.toLE",
   "Eq",
   "AddZeroClass.toZero",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "EisensteinSeries.lowbound",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Complex.normSq",
   "sub_zero",
   "UpperHalfPlane",
   "MonoidWithZeroHom",
   "Nat",
   "Real.instLinearOrderedSemiringReal",
   "Eq.trans",
   "Nat.cast_one",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Real.sqrt_le_sqrt_iff",
   "neg_neg_of_pos",
   "Real.partialOrder",
   "Lattice.toSemilatticeInf",
   "Nat.rawCast",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "Real.orderedSemiring",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "mul_nonneg_of_nonpos_of_nonpos",
   "Mathlib.Tactic.Ring.add_congr",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "DistribLattice.toLattice",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "Eq.mp",
   "Real.instAddGroupReal",
   "add_zero",
   "congrArg",
   "Mathlib.Tactic.Ring.mul_one",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "_private.Modformsported.ForMathlib.EisensteinSeries.bounds.0.Complex.abs._eq_1",
   "Real.instLinearOrderedFieldReal",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Linarith.lt_irrefl",
   "lt_zero_of_zero_gt",
   "Mathlib.Meta.NormNum.isNat_add",
   "MulZeroClass.zero_mul",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "instHPow",
   "Preorder.toLT",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "Mathlib.Tactic.Ring.pow_congr",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_mul",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "IsCancelAdd.toIsLeftCancelAdd",
   "Real.instMonoidReal",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "SemilatticeInf.toPartialOrder",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "AddGroup.toSubNegMonoid",
   "StrictOrderedSemiring.toSemiring",
   "Complex.re",
   "GT.gt",
   "Real.instZeroReal",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "Real.semiring",
   "AbsoluteValue.mk",
   "SubNegMonoid.toAddMonoid",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "LinearOrderedRing.toMin",
   "NegZeroClass.toZero",
   "Complex.instMulComplex",
   "OrderedSemiring.toPartialOrder",
   "Nat.semiring"],
  "name": "EisensteinSeries.auxlem",
  "constType":
  "∀ (z : UpperHalfPlane) (δ : ℝ),\n  EisensteinSeries.rfunct z ≤ Complex.abs (↑z + ↑δ) ∧ EisensteinSeries.rfunct z ≤ Complex.abs (↑δ * ↑z + 1)",
  "constCategory": "Theorem"},
 {"references": ["SMul.mk", "SMul", "instHSMul", "HSMul.hSMul"],
  "name": "Pi.instSMul",
  "constType":
  "{I : Type u} → {α : Type u_1} → {f : I → Type v₁} → [inst : (i : I) → SMul α (f i)] → SMul α ((i : I) → f i)",
  "constCategory": "Definition"},
 {"references": ["CompleteLattice", "CompletelyDistribLattice"],
  "name": "CompletelyDistribLattice.toCompleteLattice",
  "constType":
  "{α : Type u} → [self : CompletelyDistribLattice α] → CompleteLattice α",
  "constCategory": "Definition"},
 {"references": ["SemilatticeSup", "PartialOrder"],
  "name": "SemilatticeSup.toPartialOrder",
  "constType": "{α : Type u} → [self : SemilatticeSup α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "Ne",
   "OfNat.ofNat",
   "One",
   "DecidableEq",
   "Matrix",
   "Matrix.diagonal_apply_ne",
   "One.toOfNat1",
   "Matrix.one",
   "Eq"],
  "name": "Matrix.one_apply_ne",
  "constType":
  "∀ {n : Type u_3} {α : Type v} [inst : DecidableEq n] [inst_1 : Zero α] [inst_2 : One α] {i j : n},\n  i ≠ j → OfNat.ofNat 1 i j = 0",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "DivisionRing",
   "Monoid.mk",
   "DivisionRing.div_eq_mul_inv",
   "NonUnitalSemiring.mul_assoc",
   "DivisionRing.zpow_succ'",
   "DivisionRing.toRing",
   "DivisionRing.zpow_zero'",
   "DivInvMonoid",
   "Semiring.mul_one",
   "Semiring.npow_succ",
   "DivInvMonoid.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "Semiring.npow_zero",
   "Ring.toSemiring",
   "Semiring.one_mul",
   "DivisionRing.zpow_neg'",
   "DivisionRing.zpow",
   "DivisionRing.toInv",
   "Semiring.toOne",
   "Semiring.npow",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "DivisionRing.toDiv",
   "Semigroup.mk"],
  "name": "DivisionRing.toDivInvMonoid",
  "constType": "{K : Type u} → [self : DivisionRing K] → DivInvMonoid K",
  "constCategory": "Definition"},
 {"references": ["MulZeroOneClass"],
  "name": "MonoidWithZeroHom",
  "constType":
  "(M : Type u_9) → (N : Type u_10) → [inst : MulZeroOneClass M] → [inst : MulZeroOneClass N] → Type (max u_10 u_9)",
  "constCategory": "Other"},
 {"references":
  ["NormedField.toField",
   "DivisionSemiring.toSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "NormedSpace.mk",
   "NormedField",
   "NormedField.toNormedSpace.proof_1",
   "Field.toSemifield",
   "Semifield.toDivisionSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NormedField.toNormedCommRing",
   "NormedSpace",
   "Semiring.toModule",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup"],
  "name": "NormedField.toNormedSpace",
  "constType": "{α : Type u_1} → [inst : NormedField α] → NormedSpace α α",
  "constCategory": "Definition"},
 {"references": ["Monoid", "MonoidWithZero"],
  "name": "MonoidWithZero.toMonoid",
  "constType": "{M₀ : Type u} → [self : MonoidWithZero M₀] → Monoid M₀",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat", "instOfNatNat", "Nat", "Int.toNat.match_1", "Int"],
  "name": "Int.toNat",
  "constType": "ℤ → ℕ",
  "constCategory": "Definition"},
 {"references":
  ["EStateM.Result.ok",
   "List.cons",
   "Lean.Name.anonymous._impl",
   "Lean.Syntax.isOfKind",
   "String.toSubstring'",
   "Lean.Syntax.Preresolved.decl",
   "_neutral",
   "Lean.addMacroScope",
   "Lean.Syntax.Preresolved.namespace",
   "EStateM.Result.error",
   "Lean.Macro.Exception.unsupportedSyntax",
   "UInt8",
   "Lean.Name.mkStr2",
   "Bool.casesOn",
   "_obj",
   "Lean.Name.num._override",
   "Bool.false",
   "Lean.Name.str._override",
   "Lean.Syntax.ident",
   "Lean.SourceInfo.fromRef",
   "List.nil"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._cstage2",
  "constType": "_obj → _obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references":
  ["AddGroupWithOne.toAddMonoidWithOne",
   "CharZero",
   "AddGroupWithOne.toIntCast",
   "Int.cast",
   "propext",
   "Int.cast_inj",
   "AddGroupWithOne",
   "Int",
   "Eq"],
  "name": "Mathlib.Data.Int.CharZero._auxLemma.2",
  "constType":
  "∀ {α : Type u_1} [inst : AddGroupWithOne α] [inst_1 : CharZero α] {m n : ℤ}, (↑m = ↑n) = (m = n)",
  "constCategory": "Theorem"},
 {"references":
  ["Finset.mem_product",
   "Membership.mem",
   "And",
   "Prod.snd",
   "Finset.instSProd",
   "propext",
   "SProd.sprod",
   "Finset",
   "Finset.instMembershipFinset",
   "Prod",
   "Prod.fst",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.7",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} {s : Finset α} {t : Finset β} {p : α × β}, (p ∈ s ×ˢ t) = (p.1 ∈ s ∧ p.2 ∈ t)",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "upper_half_plane_isOpen",
   "Real.instLEReal",
   "AbsoluteValue",
   "Real.instMulReal",
   "NormedLatticeAddCommGroup.orderClosedTopology",
   "DivInvMonoid.Pow",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "Set.Elem",
   "le_trans",
   "EisensteinSeries.Eisenstein_series_is_sum_eisen_squares_slice",
   "UpperHalfPlane.upperHalfSpace",
   "Real.instInvReal",
   "HDiv.hDiv",
   "Nat",
   "DivisionRing.toDivInvMonoid",
   "instOfNat",
   "Summable",
   "Subtype",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "instHDiv",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "Real.orderedAddCommMonoid",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "instNatAtLeastTwo",
   "Real.normedLatticeAddCommGroup",
   "Int",
   "Int.instLEInt",
   "Inv.inv",
   "EisensteinSeries.eisenSquareSlice",
   "TopologicalSpace.Opens",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Real.natCast",
   "instOfNatInt",
   "Real",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "EisensteinSeries.rfunct",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "TopologicalSpace.Opens.mk",
   "LinearOrderedField.toDiv",
   "EisensteinSeries.summable_rfunct_twist",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "instHPow",
   "instOfNatNat",
   "UniformSpace.toTopologicalSpace",
   "id",
   "EisensteinSeries.eisenslice_bounded",
   "Membership.mem",
   "Real.instLTReal",
   "HSub.hSub",
   "Real.pseudoMetricSpace",
   "tsum",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "LE.le",
   "AbsoluteValue.nonneg",
   "Real.instDivisionRingReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "NormedCommRing.toSeminormedCommRing",
   "abs_tsum'",
   "Eq.ndrec",
   "tsum_le_tsum",
   "EisensteinSeries.lbpoint",
   "Real.instPreorderReal",
   "EisensteinSeries.eisensteinSeriesRestrict",
   "letFun",
   "OrderedSemiring.toSemiring",
   "Summable.of_nonneg_of_le",
   "HMul.hMul",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Real.instAddCommMonoidReal",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.Eisen_slice_bounded",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (A B : ℝ),\n      0 ≤ A →\n        ∀ (hb : 0 < B) (z : ↑(EisensteinSeries.upperHalfSpaceSlice A B)),\n          Complex.abs (EisensteinSeries.eisensteinSeriesRestrict k A B z) ≤\n            ∑' (n : ℕ), 8 / EisensteinSeries.rfunct (EisensteinSeries.lbpoint A B hb) ^ k * (↑n ^ (k - 1))⁻¹",
  "constCategory": "Theorem"},
 {"references": ["Int.decLe", "maxOfLe", "Max", "Int", "Int.instLEInt"],
  "name": "Int.instMaxInt",
  "constType": "Max ℤ",
  "constCategory": "Definition"},
 {"references":
  ["AddGroup",
   "AddGroup.toSubtractionMonoid.proof_1",
   "SubtractionMonoid",
   "AddGroup.toSubNegMonoid",
   "_private.Mathlib.Algebra.Group.Defs.0.neg_eq_of_add",
   "AddGroup.toSubtractionMonoid.proof_2",
   "SubtractionMonoid.mk"],
  "name": "AddGroup.toSubtractionMonoid",
  "constType": "{G : Type u_1} → [inst : AddGroup G] → SubtractionMonoid G",
  "constCategory": "Definition"},
 {"references": ["OrderedSemiring", "Semiring"],
  "name": "AbsoluteValue",
  "constType":
  "(R : Type u_1) → (S : Type u_2) → [inst : Semiring R] → [inst : OrderedSemiring S] → Type (max u_1 u_2)",
  "constCategory": "Other"},
 {"references": ["Nat"],
  "name": "Nat.AtLeastTwo",
  "constType": "ℕ → Prop",
  "constCategory": "Other"},
 {"references":
  ["Finset.empty", "EmptyCollection.mk", "Finset", "EmptyCollection"],
  "name": "Finset.instEmptyCollectionFinset",
  "constType": "{α : Type u_1} → EmptyCollection (Finset α)",
  "constCategory": "Definition"},
 {"references": ["MulOneClass", "Mul"],
  "name": "MulOneClass.toMul",
  "constType": "{M : Type u} → [self : MulOneClass M] → Mul M",
  "constCategory": "Definition"},
 {"references":
  ["Equiv",
   "Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "NormedAlgebra.toAlgebra",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "UpperHalfPlane.coe'",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Nat.cast_zero",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "EisensteinSeries.MoebiusEquiv",
   "Nat.cast",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "Subgroup.toSubmonoid",
   "HSMul.hSMul",
   "Subgroup",
   "Subtype",
   "Int.instCommRingInt",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "NormedField.toMetricSpace",
   "tsum_mul_left",
   "Matrix.semiring",
   "eq_of_heq",
   "EisensteinSeries.eise_Moebius",
   "PseudoMetricSpace.toUniformSpace",
   "UpperHalfPlane.coe",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Complex.instAddComplex",
   "Real.instRingReal",
   "Pi.addMonoid",
   "ModularForm.subgroupAction",
   "Complex.im",
   "Units.instGroupUnits",
   "Fin.instAddMonoidWithOne",
   "Subgroup.toGroup",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "Submonoid.smul",
   "Int",
   "Fin",
   "congrFun",
   "NormedAlgebra.id",
   "SetLike.coe",
   "HEq",
   "Subtype.val",
   "Real",
   "SlashAction.map",
   "Set",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "algebraInt",
   "MetricSpace.toMetrizableSpace",
   "Matrix.det",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "UniformSpace.toTopologicalSpace",
   "tsum_congr",
   "_private.Modformsported.ForMathlib.EisensteinSeries.basic.0.Eisenstein_tsum._eq_1",
   "Complex.instCommSemiringComplex",
   "Real.instLTReal",
   "NormedDivisionRing.to_topologicalDivisionRing",
   "Field.toSemifield",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "NormedCommRing.toSeminormedCommRing",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup.coeToGL",
   "Eq.ndrec",
   "Real.linearOrderedCommRing",
   "letFun",
   "Semifield.toDivisionSemiring",
   "Prod",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Subgroup.instSetLikeSubgroup",
   "instHSMul",
   "HAdd.hAdd",
   "UpperHalfPlane.SLAction",
   "SetLike.instMembership",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "Nat",
   "Algebra.toSMul",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "AddCommMonoid",
   "TopologicalSpace.t2Space_of_metrizableSpace",
   "Pi.instSMul",
   "Fin.fintype",
   "Set.instMembershipSet",
   "instHMul",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "HEq.refl",
   "Int.cast",
   "eise",
   "Fin.instOfNatFin",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "UpperHalfPlane.instMulActionSubtypeGeneralLinearGroupFinOfNatNatInstOfNatNatRealInstDecidableEqFinFintypeToCommRingToStrictOrderedCommRingLinearOrderedCommRingMemSubgroupInstGroupUnitsMatrixToMonoidToMonoidWithZeroSemiringToSemiringToCommSemiringInstMembershipInstSetLikeSubgroupGLPosUpperHalfPlaneToMonoidToMonoidToDivInvMonoidToSubmonoid",
   "SeminormedRing.toPseudoMetricSpace",
   "Matrix.GeneralLinearGroup",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "Equiv.tsum_eq",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Zero.toOfNat0",
   "outParam",
   "Eisenstein_tsum",
   "instHPow",
   "AddMonoid.toZero",
   "TopologicalRing.toTopologicalSemiring",
   "Matrix",
   "TopologicalSpace",
   "instOfNatNat",
   "Eq.symm",
   "id",
   "Submonoid.toMonoid",
   "Membership.mem",
   "NeZero.succ",
   "funext",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "tsum",
   "NonUnitalNonAssocSemiring.toMul",
   "Equiv.instFunLikeEquiv",
   "Semiring.toOne",
   "Real.instZeroReal",
   "DivisionSemiring.toSemiring",
   "StrictOrderedCommRing.toCommRing",
   "Modformsported.ForMathlib.EisensteinSeries.basic._auxLemma.1",
   "Units.val",
   "TopologicalDivisionRing.toTopologicalRing",
   "HMul.hMul",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Matrix.GLPos",
   "Group.toDivInvMonoid",
   "Eq.casesOn",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.Eisenstein_SIF.proof_1",
  "constType":
  "∀ (Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) (k : ℤ) (A : ↥Γ),\n  SlashAction.map ℂ k A (Eisenstein_tsum k) = Eisenstein_tsum k",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalNormedRing.dist_eq",
   "NormedAddCommGroup",
   "NormedAddCommGroup.mk",
   "NonUnitalNormedRing.toNorm",
   "NonUnitalNormedRing",
   "NonUnitalNormedRing.toMetricSpace",
   "NonUnitalNormedRing.toNonUnitalRing",
   "NonUnitalRing.toNonUnitalNonAssocRing",
   "NonUnitalNonAssocRing.toAddCommGroup"],
  "name": "NonUnitalNormedRing.toNormedAddCommGroup",
  "constType":
  "{α : Type u_1} → [β : NonUnitalNormedRing α] → NormedAddCommGroup α",
  "constCategory": "Definition"},
 {"references":
  ["NNReal.toReal",
   "Exists",
   "NNReal.summable_of_le",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Pi.canLift",
   "Real.instLEReal",
   "Real",
   "CanLift.prf",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Eq.refl",
   "Exists.casesOn",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "Eq.mpr",
   "Iff.mp",
   "UniformSpace.toTopologicalSpace",
   "NNReal",
   "Summable",
   "id",
   "NNReal.instTopologicalSpaceNNReal",
   "instNNRealStrictOrderedSemiring",
   "PseudoMetricSpace.toUniformSpace",
   "LE.le.trans",
   "Real.pseudoMetricSpace",
   "LE.le",
   "Real.instZeroReal",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "propext",
   "OrderedCommSemiring.toOrderedSemiring",
   "Eq.mp",
   "Real.instPreorderReal",
   "instNNRealOrderedCommSemiring",
   "NNReal.coe_le_coe",
   "Real.instAddCommMonoidReal",
   "NNReal.canLift",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "NNReal.summable_coe"],
  "name": "Summable.of_nonneg_of_le",
  "constType":
  "∀ {β : Type u_2} {f g : β → ℝ}, (∀ (b : β), 0 ≤ g b) → (∀ (b : β), g b ≤ f b) → Summable f → Summable g",
  "constCategory": "Theorem"},
 {"references": ["propext", "GE.ge", "ge_iff_le", "LE", "LE.le", "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.8",
  "constType": "∀ {α : Type u_1} [inst : LE α] {x y : α}, (x ≥ y) = (y ≤ x)",
  "constCategory": "Theorem"},
 {"references":
  ["ZeroLEOneClass",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "LE.le",
   "True",
   "Preorder.toLE",
   "Eq",
   "PartialOrder",
   "Zero.toOfNat0",
   "AddMonoidWithOne",
   "eq_true",
   "NeZero",
   "AddMonoidWithOne.toNatCast",
   "AddMonoidWithOne.toOne",
   "zero_lt_three",
   "Preorder.toLT",
   "AddMonoid.toAddSemigroup",
   "LT.lt",
   "AddMonoid.toZero",
   "CovariantClass",
   "instNatAtLeastTwo",
   "instOfNatNat",
   "Nat",
   "instOfNat"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.3",
  "constType":
  "∀ {α : Type u_1} [inst : AddMonoidWithOne α] [inst_1 : PartialOrder α] [inst_2 : ZeroLEOneClass α] [inst_3 : NeZero 1]\n  [inst_4 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1], (0 < 3) = True",
  "constCategory": "Theorem"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "DivisionRing.toDivisionSemiring",
   "Monoid.toOne",
   "DivisionRing.toRing",
   "div_eq_mul_inv",
   "Semiring.toMonoidWithZero",
   "Invertible",
   "True",
   "Ring.toNonAssocRing",
   "MulZeroClass.toMul",
   "invertibleOfNonzero",
   "Semiring.toNatCast",
   "Eq",
   "Zero.toOfNat0",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "Rat.rawCast",
   "HDiv.hDiv",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "GroupWithZero.toInv",
   "DivInvMonoid.toDiv",
   "eq_self",
   "Ne",
   "Invertible.invOf",
   "NonUnitalNonAssocRing.toMul",
   "DivisionRing",
   "instHDiv",
   "DivisionSemiring.toGroupWithZero",
   "Mathlib.Meta.NormNum.IsRat",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Mathlib.Meta.NormNum.IsRat.mk",
   "DivInvMonoid.toMonoid",
   "Ring.toSemiring",
   "Monoid.toMulOneClass",
   "MulZeroOneClass.toMulZeroClass",
   "GroupWithZero.toMonoidWithZero",
   "invOf_eq_inv",
   "DivInvMonoid.toInv",
   "instHMul",
   "MonoidWithZero.toMulZeroOneClass",
   "DivisionSemiring.toSemiring",
   "of_eq_true",
   "Int.cast",
   "letFun",
   "congr",
   "HMul.hMul",
   "MonoidWithZero.toZero",
   "congrArg",
   "Int",
   "Inv.inv"],
  "name": "Mathlib.Meta.NormNum.IsRat.of_raw",
  "constType":
  "∀ (α : Type u_1) [inst : DivisionRing α] (n : ℤ) (d : ℕ), ↑d ≠ 0 → Mathlib.Meta.NormNum.IsRat (Rat.rawCast n d) n d",
  "constCategory": "Theorem"},
 {"references":
  ["DifferentiableAt",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "propext",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableWithinAt",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "differentiableWithinAt_univ",
   "Set.univ",
   "NormedSpace",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.2",
  "constType":
  "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\n  {x : E}, DifferentiableWithinAt 𝕜 f Set.univ x = DifferentiableAt 𝕜 f x",
  "constCategory": "Theorem"},
 {"references":
  ["Real.field",
   "inferInstance",
   "DivisionRing",
   "Real",
   "Field.toDivisionRing"],
  "name": "Real.instDivisionRingReal",
  "constType": "DivisionRing ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_one",
   "Equiv",
   "Distrib.toAdd",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommSemiring.toSemiring",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "EisensteinSeries.slcoe",
   "AddGroupWithOne.toAddGroup",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "Subgroup.toSubmonoid",
   "HSMul.hSMul",
   "Subgroup",
   "Subtype",
   "Int.instCommRingInt",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Matrix.semiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "Complex.instAddComplex",
   "Real.instRingReal",
   "Complex.im",
   "forall_prop_domain_congr",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "one_zpow",
   "LT.lt",
   "congr",
   "Submonoid.smul",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "Fin",
   "SetLike.coe",
   "congrFun",
   "CommMonoidWithZero.toZero",
   "instOfNatInt",
   "Subtype.val",
   "Matrix.empty_val'",
   "Set",
   "Real",
   "Semiring.toMonoidWithZero",
   "SlashInvariantFormClass.toFunLike",
   "Eq.refl",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "algebraInt",
   "True",
   "Matrix.det",
   "Complex.instSemiringComplex",
   "zero_add",
   "ModularGroup.coe_T_zpow",
   "Nat.succ",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "CommGroupWithZero.toDivisionCommMonoid",
   "Complex.instCommSemiringComplex",
   "Real.instLTReal",
   "Top.top",
   "Field.toSemifield",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "Set.univ",
   "Monoid.toMulOneClass",
   "Matrix.vecEmpty",
   "NormedCommRing.toSeminormedCommRing",
   "Matrix.SpecialLinearGroup.coeToGL",
   "CommRing.toCommSemiring",
   "ModularGroup.T",
   "InvOneClass.toOne",
   "Eq.ndrec",
   "Matrix.cons_val'",
   "letFun",
   "Subtype.mk",
   "Subgroup.instSetLikeSubgroup",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.3",
   "instHSMul",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Subgroup.instTopSubgroup",
   "UpperHalfPlane.SLAction",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.2",
   "SetLike.instMembership",
   "Eq",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "Ring.toIntCast",
   "SlashInvariantForm",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.1",
   "UpperHalfPlane",
   "Nat",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Int.instCommSemiringInt",
   "Fin.fintype",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.cast_zero",
   "instHMul",
   "Matrix.SpecialLinearGroup",
   "MulAction.toSMul",
   "Matrix.of",
   "of_eq_true",
   "Int.cast",
   "DivInvOneMonoid.toInvOneClass",
   "Eq.mp",
   "Fin.instOfNatFin",
   "Matrix.vecCons",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "SlashInvariantForm.slash_action_eqn'",
   "MulZeroClass.zero_mul",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Zero.toOfNat0",
   "one_mul",
   "instHPow",
   "SlashInvariantFormClass.slashInvariantForm",
   "forall_congr",
   "Matrix",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Fin.instCommRing",
   "id",
   "eq_self",
   "Membership.mem",
   "NeZero.succ",
   "funext",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "Equiv.instFunLikeEquiv",
   "Semiring.toOne",
   "Real.instZeroReal",
   "Matrix.cons_val_fin_one",
   "Units.val",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "Group.toDivInvMonoid",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.mod_form_periodic",
  "constType":
  "∀ (k : ℤ) (f : SlashInvariantForm ⊤ k) (z : UpperHalfPlane) (n : ℤ), f (ModularGroup.T ^ n • z) = f z",
  "constCategory": "Theorem"},
 {"references": ["OfNat.ofNat", "Fin.elim0'", "instOfNatNat", "Nat", "Fin"],
  "name": "Matrix.vecEmpty",
  "constType": "{α : Type u} → Fin 0 → α",
  "constCategory": "Definition"},
 {"references":
  ["ChartedSpace.mk",
   "Set.instSingletonSet",
   "chartedSpaceSelf.proof_1",
   "PartialHomeomorph.refl",
   "Set",
   "PartialHomeomorph",
   "ChartedSpace",
   "TopologicalSpace",
   "Singleton.singleton",
   "Set.mem_univ"],
  "name": "chartedSpaceSelf",
  "constType":
  "(H : Type u_5) → [inst : TopologicalSpace H] → ChartedSpace H H",
  "constCategory": "Definition"},
 {"references": ["Neg"],
  "name": "Neg.neg",
  "constType": "{α : Type u} → [self : Neg α] → α → α",
  "constCategory": "Definition"},
 {"references":
  ["PartialHomeomorph",
   "ChartedSpace.chartAt",
   "ChartedSpace",
   "TopologicalSpace"],
  "name": "chartAt",
  "constType":
  "(H : Type u_5) →\n  [inst : TopologicalSpace H] →\n    {M : Type u_6} → [inst_1 : TopologicalSpace M] → [inst_2 : ChartedSpace H M] → M → PartialHomeomorph M H",
  "constCategory": "Definition"},
 {"references": ["Iff.intro", "And", "And.right", "Iff", "And.intro"],
  "name": "and_iff_right_of_imp",
  "constType": "∀ {b a : Prop}, (b → a) → (a ∧ b ↔ b)",
  "constCategory": "Theorem"},
 {"references":
  ["Real.orderedAddCommGroup",
   "Distrib.toAdd",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "PartialOrder.toPreorder",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.instLEReal",
   "AbsoluteValue",
   "Real.instAddMonoidReal",
   "Real.commRing",
   "Real.instSupReal",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "sq",
   "Complex.normSq",
   "Nat",
   "MonoidWithZeroHom",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Real.instLinearOrderedSemiringReal",
   "HPow.hPow",
   "Complex.abs",
   "Real.partialOrder",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Complex.im",
   "instHMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "CommRing.toNonUnitalCommRing",
   "Real",
   "Eq.refl",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "AddMonoid.toAddZeroClass",
   "StarOrderedRing.toExistsAddOfLE",
   "NonAssocSemiring.toMulZeroOneClass",
   "Abs.abs",
   "Real.instNegReal",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "instHPow",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Eq.symm",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "id",
   "Neg.toHasAbs",
   "Real.instMonoidReal",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "instHAdd",
   "MonoidHomClass.toMulHomClass",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "LE.le",
   "Monoid.toMulOneClass",
   "Complex.re",
   "mul_self_nonneg",
   "Eq.ndrec",
   "Real.abs_le_sqrt",
   "Real.semiring",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "Complex.normSq_apply",
   "OrderedSemiring.toPartialOrder",
   "le_add_of_nonneg_right"],
  "name": "Complex.abs_re_le_abs",
  "constType": "∀ (z : ℂ), |z.re| ≤ Complex.abs z",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "HAdd.hAdd",
   "AddMonoid.toAddZeroClass",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Semiring.toNonAssocSemiring",
   "CommSemiring",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "eq_self",
   "mul_add",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Distrib.leftDistribClass",
   "instHMul",
   "Eq.ndrec",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "congr",
   "congrArg",
   "add_zero",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.mul_add",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a b₁ c₁ b₂ c₂ d : R},\n  a * b₁ = c₁ → a * b₂ = c₂ → c₁ + 0 + c₂ = d → a * (b₁ + b₂) = d",
  "constCategory": "Theorem"},
 {"references": ["List"],
  "name": "List.cons",
  "constType": "{α : Type u} → α → List α → List α",
  "constCategory": "Other"},
 {"references":
  ["SubNegMonoid.zsmul_succ'",
   "SubNegMonoid.toSub",
   "SubNegMonoid",
   "SubNegMonoid.toNeg",
   "SubtractionMonoid.toSubNegMonoid",
   "SubNegZeroMonoid",
   "SubNegMonoid.zsmul",
   "SubNegMonoid.toAddMonoid",
   "SubNegMonoid.zsmul_neg'",
   "SubNegMonoid.sub_eq_add_neg",
   "SubNegZeroMonoid.mk",
   "SubtractionMonoid",
   "SubNegMonoid.mk",
   "SubNegMonoid.zsmul_zero'",
   "SubtractionMonoid.toSubNegZeroMonoid.proof_1"],
  "name": "SubtractionMonoid.toSubNegZeroMonoid",
  "constType":
  "{α : Type u_1} → [inst : SubtractionMonoid α] → SubNegZeroMonoid α",
  "constCategory": "Definition"},
 {"references":
  ["DivisionMonoid",
   "DivisionMonoid.inv_inv",
   "DivisionMonoid.toDivInvMonoid",
   "InvolutiveInv",
   "DivInvMonoid.toInv",
   "InvolutiveInv.mk"],
  "name": "DivisionMonoid.toInvolutiveInv",
  "constType": "{G : Type u} → [self : DivisionMonoid G] → InvolutiveInv G",
  "constCategory": "Definition"},
 {"references":
  ["AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "of_decide_eq_false",
   "AddGroupWithOne.toIntCast",
   "Mathlib.Meta.NormNum.isInt_eq_false.match_1",
   "Eq",
   "Mathlib.Data.Int.CharZero._auxLemma.2",
   "Decidable.decide",
   "Eq.mpr",
   "CharZero",
   "Int.instDecidableEqInt",
   "Bool.false",
   "Int.cast",
   "Ring.toIntCast",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "Not",
   "Bool",
   "congrArg",
   "Int",
   "id"],
  "name": "Mathlib.Meta.NormNum.isInt_eq_false",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] [inst_1 : CharZero α] {a b : α} {a' b' : ℤ},\n  Mathlib.Meta.NormNum.IsInt a a' → Mathlib.Meta.NormNum.IsInt b b' → decide (a' = b') = false → ¬a = b",
  "constCategory": "Theorem"},
 {"references":
  ["_obj",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_11",
   "Lean.ParserDescr.symbol"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_12._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references": ["StrictOrderedSemiring", "LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.toStrictOrderedSemiring",
  "constType":
  "{α : Type u} → [self : LinearOrderedSemiring α] → StrictOrderedSemiring α",
  "constCategory": "Definition"},
 {"references": ["PUnit.unit", "Unit"],
  "name": "Unit.unit",
  "constType": "Unit",
  "constCategory": "Definition"},
 {"references":
  ["AddGroup.toAddCancelMonoid.proof_3",
   "AddMonoid.nsmul",
   "AddGroup.toAddCancelMonoid.proof_1",
   "AddGroup.toAddCancelMonoid.proof_6",
   "AddGroup",
   "AddGroup.toAddCancelMonoid.proof_5",
   "AddMonoid.toAddSemigroup",
   "AddMonoid.toZero",
   "AddCancelMonoid",
   "SubNegMonoid.toAddMonoid",
   "AddLeftCancelMonoid.mk",
   "AddCancelMonoid.mk",
   "AddGroup.toAddCancelMonoid.proof_2",
   "AddGroup.toSubNegMonoid",
   "AddLeftCancelSemigroup.mk",
   "AddGroup.toAddCancelMonoid.proof_4"],
  "name": "AddGroup.toAddCancelMonoid",
  "constType": "{G : Type u_1} → [inst : AddGroup G] → AddCancelMonoid G",
  "constCategory": "Definition"},
 {"references": [],
  "name": "StrictOrderedRing",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references": ["Field", "NormedField"],
  "name": "NormedField.toField",
  "constType": "{α : Type u_5} → [self : NormedField α] → Field α",
  "constCategory": "Definition"},
 {"references": ["Eq.refl", "Eq"],
  "name": "rfl",
  "constType": "∀ {α : Sort u} {a : α}, a = a",
  "constCategory": "Definition"},
 {"references":
  ["Decidable.em",
   "Or",
   "Or.inr",
   "dif_pos",
   "Eq.refl",
   "Eq.mpr_prop",
   "dite",
   "Or.casesOn",
   "Eq",
   "Eq.mpr",
   "Or.inl",
   "Eq.ndrec",
   "Eq.rec",
   "Decidable",
   "dif_neg",
   "Not",
   "Eq.mpr_not",
   "Eq.symm",
   "id"],
  "name": "dite_congr",
  "constType":
  "∀ {b c : Prop} {α : Sort u_1} {x : Decidable b} [inst : Decidable c] {x_1 : b → α} {u : c → α} {y : ¬b → α} {v : ¬c → α}\n  (h₁ : b = c), (∀ (h : c), x_1 (_ : b) = u h) → (∀ (h : ¬c), y (_ : ¬b) = v h) → dite b x_1 y = dite c u v",
  "constCategory": "Theorem"},
 {"references":
  ["NonAssocSemiring.mul_one",
   "MulZeroOneClass.mk",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "AddMonoid.toZero",
   "NonAssocSemiring.toOne",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonAssocSemiring.one_mul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalNonAssocSemiring.mul_zero",
   "MulOneClass.mk",
   "NonAssocSemiring",
   "MulZeroOneClass"],
  "name": "NonAssocSemiring.toMulZeroOneClass",
  "constType": "{α : Type u} → [self : NonAssocSemiring α] → MulZeroOneClass α",
  "constCategory": "Definition"},
 {"references":
  ["Min.min",
   "HPow.hPow",
   "OfNat.ofNat",
   "Real.instLinearOrderedRingReal",
   "Real.instMonoidReal",
   "Real.instLTReal",
   "Subtype.val",
   "Real",
   "Real.sqrt",
   "EisensteinSeries.lb",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Complex.im",
   "instHPow",
   "LT.lt",
   "Monoid.toNatPow",
   "instOfNatNat",
   "UpperHalfPlane",
   "Complex",
   "LinearOrderedRing.toMin",
   "Nat"],
  "name": "EisensteinSeries.rfunct",
  "constType": "UpperHalfPlane → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "HAdd.hAdd",
   "Insert.insert",
   "Preorder.toLE",
   "Eq",
   "IsAbsoluteValue",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "LinearOrderedField.toLinearOrderedSemifield",
   "le_trans",
   "Eq.trans",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Order.Basic._auxLemma.1",
   "Semiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Finset.instMembershipFinset",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "EuclideanDomain.toCommRing",
   "IsAbsoluteValue.abv_zero",
   "add_le_add_left",
   "NonUnitalNonAssocSemiring.toDistrib",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Field.toEuclideanDomain",
   "Not",
   "MonoidWithZero.toZero",
   "congrArg",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "Finset.induction_on",
   "congrFun",
   "AddZeroClass.toAdd",
   "LinearOrderedRing.toStrictOrderedRing",
   "CommRing.toNonUnitalCommRing",
   "Semiring.toMonoidWithZero",
   "LinearOrderedField.toLinearOrderedCommRing",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Eq.refl",
   "AddCommMonoid.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "IsAbsoluteValue.abv_add",
   "True",
   "Zero.toOfNat0",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "LinearOrderedField",
   "AddMonoid.toZero",
   "Finset",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "id",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Membership.mem",
   "Finset.instInsertFinset",
   "instHAdd",
   "Finset.sum",
   "LE.le",
   "Finset.sum_insert",
   "Classical.decEq",
   "Eq.ndrec",
   "LinearOrderedField.toField",
   "OrderedCommSemiring.toOrderedSemiring",
   "OrderedSemiring.toSemiring",
   "NonUnitalNonAssocSemiring.toAddCommMonoid"],
  "name": "abv_sum_le_sum_abv",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} [inst : LinearOrderedField α] {abv : β → α} [inst_1 : Semiring β]\n  [inst_2 : IsAbsoluteValue abv] {γ : Type u_3} (f : γ → β) (s : Finset γ),\n  abv (Finset.sum s fun k => f k) ≤ Finset.sum s fun k => abv (f k)",
  "constCategory": "Theorem"},
 {"references":
  ["MonoidHomClass",
   "outParam",
   "MulZeroOneClass.toMulOneClass",
   "MonoidWithZeroHomClass",
   "MulZeroOneClass"],
  "name": "MonoidWithZeroHomClass.toMonoidHomClass",
  "constType":
  "{F : Type u_9} →\n  {M : outParam (Type u_10)} →\n    {N : outParam (Type u_11)} →\n      [inst : MulZeroOneClass M] →\n        [inst_1 : MulZeroOneClass N] → [self : MonoidWithZeroHomClass F M N] → MonoidHomClass F M N",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "CharP",
   "AddMonoidWithOne",
   "OfNat.ofNat",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "AddMonoid.toZero",
   "Nat.monoid",
   "CharP.cast_eq_zero_iff",
   "Nat.instDvdNat",
   "AddMonoidWithOne.toAddMonoid",
   "dvd_refl",
   "Dvd.dvd",
   "Nat",
   "Iff.mpr",
   "Eq"],
  "name": "CharP.cast_eq_zero",
  "constType":
  "∀ (R : Type u_1) [inst : AddMonoidWithOne R] (p : ℕ) [inst_1 : CharP R p], ↑p = 0",
  "constCategory": "Theorem"},
 {"references": ["semiOutParam"],
  "name": "CoeOut",
  "constType": "Sort u → semiOutParam (Sort v) → Sort (max (max 1 u) v)",
  "constCategory": "Other"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "PartialOrder.toPreorder",
   "one_div",
   "AbsoluteValue.mulHomClass",
   "DivInvMonoid.Pow",
   "Complex.abs_ofReal",
   "Semiring.toNatCast",
   "IsROrC.charZero_isROrC",
   "SemilatticeSup.toSup",
   "AbsoluteValue.zeroHomClass",
   "NormedDivisionRing.toDivisionRing",
   "map_mul",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "instOfNat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Subtype",
   "Complex.instOneComplex",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "GroupWithZero.toInv",
   "add_comm",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Complex.instNontrivialComplex",
   "instHDiv",
   "Prod.snd",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "MulOneClass.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "instDistribLattice",
   "UpperHalfPlane.coe",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "AddCommMagma.toAdd",
   "map_inv₀",
   "SubadditiveHomClass.toFunLike",
   "DivisionRing.toInv",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instNatAtLeastTwo",
   "congr",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "Mathlib.Tactic.Ring.atom_pf'",
   "Field.toDivisionRing",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "HEq",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "natpowsinv",
   "Mathlib.Algebra.GroupWithZero.Basic._auxLemma.3",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Nat.cast_mul",
   "Mathlib.Tactic.Ring.sub_pf",
   "Complex.instSemiringComplex",
   "FunLike",
   "Int.add_one_le_iff",
   "AddGroup.toAddCancelMonoid",
   "map_zero",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "zero_lt_one",
   "Lattice.toSemilatticeSup",
   "DivisionMonoid.toInvolutiveInv",
   "EisensteinSeries.rfunct_pos",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Real.instLinearOrderedRingReal",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Real.instLTReal",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "Neg.neg",
   "Finset.sum_const",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "Real.instLinearOrderedAddCommGroupReal",
   "Monoid.toMulOneClass",
   "GroupWithZero.inv_zero",
   "GroupWithZero.toMonoidWithZero",
   "LE.le",
   "Real.instDivisionRingReal",
   "Nat.commSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "Mathlib.Tactic.Ring.one_mul",
   "DivisionMonoid.toDivInvMonoid",
   "letFun",
   "Semifield.toDivisionSemiring",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Finset.instSingletonFinset",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Tactic.RingNF.int_rawCast_neg",
   "MulOneClass.toMul",
   "instHSMul",
   "OrderedAddCommGroup.toPartialOrder",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "dite",
   "Inv",
   "Mathlib.Tactic.Ring.div_pf",
   "Mathlib.Data.Complex.Basic._auxLemma.14",
   "Semiring.toNonAssocSemiring",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "Ring.toIntCast",
   "nsmul_eq_mul",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "or_false",
   "HPow",
   "mul_inv_rev",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "GroupWithZero.toDivInvMonoid",
   "Real.orderedSemiring",
   "MulZeroOneClass.toMulZeroClass",
   "Int.instLTInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.cast_zero",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "HEq.refl",
   "of_eq_true",
   "Int.negSucc",
   "Int.cast",
   "Eq.mp",
   "mul_one",
   "Singleton.singleton",
   "Mathlib.Tactic.Ring.mul_one",
   "NormedField.toNormedDivisionRing",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "LinearOrderedRing.toStrictOrderedRing",
   "Linarith.lt_irrefl",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "MulZeroClass.zero_mul",
   "div_mul_eq_mul_div",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "abs_eq_self",
   "LinearOrderedField.toDiv",
   "LinearOrderedRing.toLinearOrder",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "Finset.sum_le_sum",
   "AddMonoid.toZero",
   "Complex.abs_natCast",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "Int.instLinearOrderInt",
   "CommSemiring.toCommMonoidWithZero",
   "NeZero.charZero_one",
   "id",
   "eq_self",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "False",
   "instAddNat",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.toSemiring",
   "AddMonoid.toNatSMul",
   "StrictOrderedSemiring.to_charZero",
   "zpow_coe_nat",
   "OrderedCommSemiring.toOrderedSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Eq.casesOn",
   "Bool",
   "instMulNat",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Real.instAddMonoidReal",
   "mul_div_assoc'",
   "Semifield.toCommGroupWithZero",
   "EisensteinSeries.Eise_on_square_is_bounded''",
   "MulZeroClass.toMul",
   "pow_one",
   "AddGroupWithOne.toAddGroup",
   "Real.orderedRing",
   "Mathlib.Meta.NormNum.isInt_add",
   "Iff.mpr",
   "instDecidableEqNat",
   "Nat.cast_zero",
   "Mathlib.Tactic.Ring.inv_mul",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Complex.Complex.addGroupWithOne",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "le_of_not_gt",
   "Complex.instField",
   "Mathlib.Tactic.Ring.neg_congr",
   "AbsEise",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "HSMul.hSMul",
   "HDiv.hDiv",
   "Linarith.lt_of_lt_of_eq",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "instHSub",
   "Complex.abs",
   "Or",
   "Nat.pos_of_ne_zero",
   "Mathlib.Order.Basic._auxLemma.1",
   "eq_of_heq",
   "Complex.instAddComplex",
   "Real.instRingReal",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.7",
   "CommMagma.toMul",
   "Real.normedCommRing",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Complex.im",
   "MonoidWithZero.toMulZeroOneClass",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Int",
   "Inv.inv",
   "Exists",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Data.Nat.Cast.Basic._auxLemma.1",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "AddMonoid.toAddZeroClass",
   "Abs.abs",
   "True",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Eq.rec",
   "Finset",
   "Mathlib.Tactic.Ring.inv_single",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Neg.toHasAbs",
   "Complex.ofReal'",
   "Not.intro",
   "NonUnitalNonAssocRing.toMul",
   "EisensteinSeries.square_size'",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Finset.sum",
   "Mathlib.Tactic.Ring.cast_pos",
   "div_div",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "Mathlib.Tactic.Ring.neg_add",
   "Bool.false",
   "Prod.mk",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.3",
   "Real.instPreorderReal",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Prod",
   "Mathlib.Tactic.Ring.add_mul",
   "Real.instAddCommMonoidReal",
   "Mathlib.Tactic.Ring.atom_pf",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Real.instLEReal",
   "MulZeroClass.mul_zero",
   "Exists.casesOn",
   "instLTNat",
   "Preorder.toLE",
   "Mathlib.Tactic.RingNF.mul_assoc_rev",
   "Eq",
   "Nat.linearOrder",
   "Eq.mpr",
   "Ring.toNeg",
   "DivisionCommMonoid.toDivisionMonoid",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Finset.sum_singleton",
   "Nat",
   "Finset.sum_congr",
   "EisensteinSeries.square",
   "OrderedAddCommMonoid.toPartialOrder",
   "abs_pow",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Mathlib.Algebra.Group.Basic._auxLemma.13",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "OrderedSemiring.zeroLEOneClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Zify._auxLemma.3",
   "Mathlib.Tactic.Ring.div_congr",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "Int.instAddInt",
   "DistribLattice.toLattice",
   "instHMul",
   "Int.instAddGroupInt",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.instIsDomainRealSemiring",
   "Not",
   "CancelMonoidWithZero.toMonoidWithZero",
   "add_zero",
   "map_zpow₀",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Finset.card",
   "Int.instAddCommSemigroupInt",
   "zero_zpow",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "DivisionRing.toRing",
   "CanLift.prf",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "AddCommMonoid.toAddMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "zpow_nonneg",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "mul_comm",
   "Zero.toOfNat0",
   "outParam",
   "Int.instRingInt",
   "instLENat",
   "Preorder.toLT",
   "instHPow",
   "Ring.toSub",
   "LE",
   "Linarith.mul_neg",
   "MulZeroClass.toZero",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "HAdd",
   "DivisionRing.toDiv",
   "EisensteinSeries.square_zero",
   "LT.lt.le",
   "instHAdd",
   "AddSemigroup.toAdd",
   "IsDomain.toCancelMonoidWithZero",
   "HSub.hSub",
   "AddGroupWithOne.toNeg",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "inv_eq_one_div",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "NonAssocSemiring.toNatCast",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "Complex.instMulComplex",
   "HMul"],
  "name": "EisensteinSeries.AbsEise_bounded_on_square",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane),\n  3 ≤ k →\n    ∀ (n : ℕ),\n      (Finset.sum (EisensteinSeries.square ↑n) fun y => AbsEise k z y) ≤\n        8 / EisensteinSeries.rfunct z ^ k * (↑n ^ (k - 1))⁻¹",
  "constCategory": "Theorem"},
 {"references": ["SMul", "SlashAction", "Group", "AddMonoid"],
  "name": "SlashAction.map",
  "constType":
  "{β : Type u_1} →\n  {G : Type u_2} →\n    {α : Type u_3} →\n      (γ : Type u_4) →\n        [inst : Group G] → [inst_1 : AddMonoid α] → [inst_2 : SMul γ α] → [self : SlashAction β G α γ] → β → G → α → α",
  "constCategory": "Definition"},
 {"references":
  ["Exists", "Subtype.exists", "propext", "Subtype.mk", "Subtype", "Eq"],
  "name": "Mathlib.Data.Subtype._auxLemma.2",
  "constType":
  "∀ {α : Sort u_1} {p : α → Prop} {q : { a // p a } → Prop}, (∃ x, q x) = ∃ a, ∃ (b : p a), q { val := a, property := b }",
  "constCategory": "Theorem"},
 {"references": ["Int.ofNat", "OfNat", "OfNat.mk", "Nat", "Int"],
  "name": "instOfNatInt",
  "constType": "{n : ℕ} → OfNat ℤ n",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalNonAssocRing.toMul",
   "NonUnitalCommRing",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_3",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_1",
   "NonUnitalCommRing.mul_comm",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_2",
   "NonUnitalCommSemiring",
   "NonUnitalNonAssocSemiring.mk",
   "AddGroup.toSubNegMonoid",
   "NonUnitalRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalRing",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_6",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_5",
   "AddCommMonoid.mk",
   "NonUnitalSemiring.mk",
   "SubNegMonoid.toAddMonoid",
   "AddCommGroup.toAddGroup",
   "NonUnitalCommSemiring.mk",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_4",
   "NonUnitalNonAssocRing.toAddCommGroup"],
  "name": "NonUnitalCommRing.toNonUnitalCommSemiring",
  "constType":
  "{α : Type u} → [s : NonUnitalCommRing α] → NonUnitalCommSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["OrderedRing.toRing",
   "OrderedRing.toPartialOrder",
   "Int.cast_lt",
   "PartialOrder.toPreorder",
   "Int.cast",
   "Preorder.toLT",
   "propext",
   "Ring.toIntCast",
   "LT.lt",
   "OrderedRing",
   "Nontrivial",
   "Int",
   "Int.instLTInt",
   "Eq"],
  "name": "Mathlib.Data.Int.Cast.Lemmas._auxLemma.8",
  "constType":
  "∀ {α : Type u_3} [inst : OrderedRing α] [inst_1 : Nontrivial α] {m n : ℤ}, (↑m < ↑n) = (m < n)",
  "constCategory": "Theorem"},
 {"references":
  ["AddCommGroup.add_comm",
   "SubtractionCommMonoid",
   "SubtractionMonoid.neg_eq_of_add",
   "AddGroup.toSubtractionMonoid",
   "AddCommGroup.toAddGroup",
   "SubtractionMonoid.neg_neg",
   "SubtractionMonoid",
   "AddCommGroup",
   "SubtractionCommMonoid.mk",
   "AddGroup.toSubNegMonoid",
   "SubtractionMonoid.neg_add_rev",
   "SubtractionMonoid.mk"],
  "name": "AddCommGroup.toDivisionAddCommMonoid",
  "constType":
  "{G : Type u_1} → [inst : AddCommGroup G] → SubtractionCommMonoid G",
  "constCategory": "Definition"},
 {"references": [],
  "name": "IntCast",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["Finset.product.proof_1",
   "Multiset.instSProd",
   "SProd.sprod",
   "Multiset",
   "Finset",
   "Finset.val",
   "Prod",
   "Finset.mk"],
  "name": "Finset.product",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → Finset α → Finset β → Finset (α × β)",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "Iff",
   "Nat.cast_injective",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "CharZero",
   "Nat",
   "Function.Injective.eq_iff",
   "Eq"],
  "name": "Nat.cast_inj",
  "constType":
  "∀ {R : Type u_1} [inst : AddMonoidWithOne R] [inst_1 : CharZero R] {m n : ℕ}, ↑m = ↑n ↔ m = n",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Int.ofNat",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "AddGroupWithOne.toIntCast",
   "Mathlib.Meta.NormNum.IsNat.to_isInt.match_1",
   "True",
   "Int.cast_ofNat",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat",
   "of_eq_true",
   "instNatCastInt",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Int.cast",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "Nat",
   "congrArg",
   "Eq.trans",
   "Int"],
  "name": "Mathlib.Meta.NormNum.IsNat.to_isInt",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {a : α} {n : ℕ},\n  Mathlib.Meta.NormNum.IsNat a n → Mathlib.Meta.NormNum.IsInt a (Int.ofNat n)",
  "constCategory": "Theorem"},
 {"references": ["outParam", "FunLike", "LE", "Add", "SubadditiveHomClass"],
  "name": "SubadditiveHomClass.toFunLike",
  "constType":
  "{F : Type u_7} →\n  {α : outParam (Type u_8)} →\n    {β : outParam (Type u_9)} →\n      [inst : Add α] → [inst_1 : Add β] → [inst_2 : LE β] → [self : SubadditiveHomClass F α β] → FunLike F α fun x => β",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toRing",
   "Neg.toHasAbs",
   "LinearOrderedRing.toStrictOrderedRing",
   "instDistribLattice",
   "Abs.abs",
   "Eq",
   "DistribLattice.toLattice",
   "LinearOrderedRing.toLinearOrder",
   "SemilatticeSup.toSup",
   "Ring.toNeg",
   "Int.cast_abs",
   "LinearOrderedRing",
   "Int.cast",
   "Ring.toIntCast",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "Lattice.toSemilatticeSup",
   "Eq.symm",
   "Int"],
  "name": "Mathlib.Data.Int.Cast.Lemmas._auxLemma.14",
  "constType":
  "∀ {α : Type u_3} [inst : LinearOrderedRing α] {a : ℤ}, |↑a| = ↑|a|",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "Real",
   "AddCommSemigroup",
   "Real.instAddCommMonoidReal",
   "AddCommMonoid.toAddCommSemigroup"],
  "name": "Real.instAddCommSemigroupReal",
  "constType": "AddCommSemigroup ℝ",
  "constCategory": "Definition"},
 {"references":
  ["UniformSpace.to_regularSpace",
   "Iff.mp",
   "UniformSpace",
   "T3Space.mk",
   "SeparatedSpace",
   "T2Space",
   "T3Space",
   "T1Space.t0Space",
   "separated_iff_t2",
   "T2Space.t1Space",
   "UniformSpace.toTopologicalSpace"],
  "name": "separated_t3",
  "constType":
  "∀ {α : Type u} [inst : UniformSpace α] [inst_1 : SeparatedSpace α], T3Space α",
  "constCategory": "Definition"},
 {"references":
  ["AddCommMagma.add_comm",
   "AddCommMagma",
   "instHAdd",
   "HAdd.hAdd",
   "AddCommMagma.toAdd",
   "Eq"],
  "name": "add_comm",
  "constType":
  "∀ {G : Type u_1} [inst : AddCommMagma G] (a b : G), a + b = b + a",
  "constCategory": "Theorem"},
 {"references":
  ["SlashInvariantForm.instAdd",
   "OfNat.ofNat",
   "SlashInvariantForm.instAddCommGroupSlashInvariantForm.proof_3",
   "SlashInvariantForm.instSMul",
   "SlashInvariantFormClass.toFunLike",
   "instDecidableEqFin",
   "SlashInvariantForm.coe_add",
   "SlashInvariantForm.instAddCommGroupSlashInvariantForm.proof_5",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "SlashInvariantForm.instSub",
   "NormedAddGroup.toAddGroup",
   "SlashInvariantFormClass.slashInvariantForm",
   "SlashInvariantForm",
   "Subgroup",
   "UpperHalfPlane",
   "instOfNatNat",
   "Nat",
   "Int.instCommRingInt",
   "Complex.addCommGroup",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Function.Injective.addCommGroup",
   "SlashInvariantForm.instAddCommGroupSlashInvariantForm.proof_4",
   "AddMonoidWithOne.toAddMonoid",
   "SlashInvariantForm.instAddCommGroupSlashInvariantForm.proof_2",
   "Fin.fintype",
   "FunLike.coe",
   "SubNegMonoid.SMulInt",
   "AddGroup.toSubNegMonoid",
   "AddMonoid.toNatSMul",
   "SlashInvariantForm.instAddCommGroupSlashInvariantForm.proof_6",
   "SlashInvariantForm.instAddCommGroupSlashInvariantForm.proof_1",
   "SlashInvariantForm.instNeg",
   "SlashInvariantForm.coe_sub",
   "Matrix.SpecialLinearGroup",
   "SlashInvariantForm.coe_neg",
   "SlashInvariantForm.instZero",
   "Complex",
   "NormedAddCommGroup.toNormedAddGroup",
   "AddCommGroup",
   "Complex.instNormedAddCommGroupComplex",
   "Pi.addCommGroup",
   "Int",
   "Fin"],
  "name": "SlashInvariantForm.instAddCommGroupSlashInvariantForm",
  "constType":
  "{Γ : outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ))} →\n  {k : outParam ℤ} → AddCommGroup (SlashInvariantForm Γ k)",
  "constCategory": "Definition"},
 {"references": ["GroupWithZero", "Inv"],
  "name": "GroupWithZero.toInv",
  "constType": "{G₀ : Type u} → [self : GroupWithZero G₀] → Inv G₀",
  "constCategory": "Definition"},
 {"references":
  ["OrderedSemiring",
   "StrictOrderedCommSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "StrictOrderedSemiring.toOrderedSemiring",
   "OrderedSemiring.mk",
   "StrictOrderedCommSemiring.toOrderedCommSemiring.proof_2",
   "OrderedCommSemiring.mk",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "OrderedSemiring.mul_le_mul_of_nonneg_left",
   "OrderedCommSemiring",
   "StrictOrderedCommSemiring.mul_comm",
   "OrderedSemiring.mul_le_mul_of_nonneg_right",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring.proof_1"],
  "name": "StrictOrderedCommSemiring.toOrderedCommSemiring",
  "constType":
  "{α : Type u} → [inst : StrictOrderedCommSemiring α] → OrderedCommSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Int.ofNat",
   "instAddNat",
   "Int.negSucc",
   "instHAdd",
   "HAdd.hAdd",
   "Nat",
   "Nat.succ",
   "Int",
   "Int.subNatNat",
   "Int.add.match_1"],
  "name": "Int.add",
  "constType": "ℤ → ℤ → ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Real",
   "LT.lt",
   "UpperHalfPlane",
   "Complex",
   "Subtype.mk"],
  "name": "UpperHalfPlane.mk",
  "constType": "(z : ℂ) → 0 < z.im → UpperHalfPlane",
  "constCategory": "Definition"},
 {"references":
  ["Int.normedCommRing.proof_5",
   "NormedAddCommGroup.toAddCommGroup",
   "NormedAddCommGroup",
   "SubNegMonoid.toNeg",
   "NormedRing.mk",
   "Ring.intCast_negSucc",
   "Int.normedCommRing.proof_4",
   "Ring.intCast_ofNat",
   "Ring.toSemiring",
   "AddGroup.toSubNegMonoid",
   "Int.normedCommRing.proof_7",
   "NormedAddCommGroup.toMetricSpace",
   "Int.instRingInt",
   "SubNegMonoid.toSub",
   "NormedCommRing",
   "Int.normedCommRing.proof_3",
   "Ring.toIntCast",
   "Int.normedCommRing.proof_1",
   "Ring",
   "SubNegMonoid.zsmul",
   "Int.normedCommRing.proof_2",
   "Int.normedAddCommGroup",
   "NormedAddCommGroup.dist_eq",
   "AddCommGroup.toAddGroup",
   "NormedAddCommGroup.toNorm",
   "Ring.mk",
   "NormedCommRing.mk",
   "Int",
   "Int.normedCommRing.proof_6"],
  "name": "Int.normedCommRing",
  "constType": "NormedCommRing ℤ",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "SeminormedAddCommGroup.to_uniformAddGroup",
   "OfNat.ofNat",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "instOfNatInt",
   "AddCommGroup.toAddCommMonoid",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Eq",
   "Complex.instCompleteSpaceComplexToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Nat.cast",
   "Eisenstein_tsum",
   "EisensteinSeries.eisenSquare",
   "EisensteinSeries.squares_cover_all",
   "secondCountable_of_proper",
   "Finset",
   "UpperHalfPlane",
   "UniformSpace.toTopologicalSpace",
   "Nat",
   "T3Space.toT0Space",
   "EisensteinSeries.square",
   "Summable",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "id",
   "Membership.mem",
   "separated_t3",
   "Complex.addCommGroup",
   "tsum_lemma",
   "NormedField.toMetricSpace",
   "Finset.sum",
   "PseudoMetricSpace.toUniformSpace",
   "PolishSpace.t2Space",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Finset.instMembershipFinset",
   "tsum",
   "Complex.instProperSpaceComplexToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
   "NormedField.toNormedCommRing",
   "LE.le",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.Eisenstein_tsum._eq_1",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "instNatCastInt",
   "EisensteinSeries.Eisenstein_tsum_summable",
   "polishSpace_of_complete_second_countable",
   "eise",
   "letFun",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "Prod",
   "ExistsUnique",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Int",
   "MetricSpace.to_separated",
   "Int.instLEInt"],
  "name": "EisensteinSeries.Eisenstein_series_is_sum_eisen_squares",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane), 3 ≤ k → Eisenstein_tsum k z = ∑' (n : ℕ), EisensteinSeries.eisenSquare k n z",
  "constCategory": "Theorem"},
 {"references":
  ["Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "instDecidableEqFin",
   "Subgroup",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "SlashInvariantFormClass",
  "constType":
  "Type u_1 → outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) → outParam ℤ → Type u_1",
  "constCategory": "Other"},
 {"references":
  ["Distrib.toAdd",
   "MulOneClass.toMul",
   "PartialOrder.toPreorder",
   "MulZeroOneClass.toMulOneClass",
   "AbsoluteValue",
   "Real",
   "Real.instMulReal",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "Real.instSupReal",
   "NonAssocSemiring.toMulZeroOneClass",
   "Preorder.toLE",
   "Abs.abs",
   "True",
   "Eq",
   "Real.instNegReal",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Complex.normSq",
   "MonoidWithZeroHom",
   "Eq.trans",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "eq_self",
   "Complex.abs",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MonoidHomClass.toMulHomClass",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "Real.orderedSemiring",
   "Real.sqrt",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Real.semiring",
   "Real.sqrt_mul_self_eq_abs",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "Complex.normSq_ofReal",
   "congrArg",
   "OrderedSemiring.toPartialOrder",
   "congrFun"],
  "name": "Complex.abs_ofReal",
  "constType": "∀ (r : ℝ), Complex.abs ↑r = |r|",
  "constCategory": "Theorem"},
 {"references": ["Monad", "Bind"],
  "name": "Monad.toBind",
  "constType": "{m : Type u → Type v} → [self : Monad m] → Bind m",
  "constCategory": "Definition"},
 {"references":
  ["OrderedSemiring",
   "MulHomClass",
   "Semiring.toNonAssocSemiring",
   "AbsoluteValue.mulHomClass.proof_1",
   "AbsoluteValue.zeroHomClass",
   "ZeroHomClass.toFunLike",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "ZeroHomClass",
   "Semiring",
   "AbsoluteValue",
   "OrderedSemiring.toSemiring",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocSemiring.toMul",
   "MonoidWithZero.toZero",
   "MulHomClass.mk"],
  "name": "AbsoluteValue.mulHomClass",
  "constType":
  "{R : Type u_1} →\n  {S : Type u_2} → [inst : Semiring R] → [inst_1 : OrderedSemiring S] → MulHomClass (AbsoluteValue R S) R S",
  "constCategory": "Definition"},
 {"references":
  ["TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Metric.closedBall",
   "Real.instLEReal",
   "upper_half_plane_isOpen",
   "Exists.casesOn",
   "implies_congr",
   "Preorder.toLE",
   "SetLike.instMembership",
   "_private.Mathlib.Data.Real.Basic.0.Real.lt",
   "Dist.dist",
   "Eq",
   "Mathlib.Data.Subtype._auxLemma.1",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "EisensteinSeries.eisenSquare'",
   "EisensteinSeries.Eisen_partial_tends_to_uniformly_on_ball",
   "Filter",
   "UpperHalfPlane.upperHalfSpace",
   "Nat",
   "And.casesOn",
   "Eq.trans",
   "SemilatticeSup.toPartialOrder",
   "Subtype",
   "Nat.strictOrderedSemiring",
   "Complex.instZeroComplex",
   "PseudoMetricSpace.toUniformSpace",
   "HasSubset.Subset",
   "Nat.instLatticeNat",
   "Filter.Eventually",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.6",
   "Set.instMembershipSet",
   "Complex.im",
   "And",
   "forall_prop_domain_congr",
   "eq_true",
   "Std.Classes.Order._auxLemma.4",
   "TopologicalSpace.Opens.carrier",
   "of_eq_true",
   "Mathlib.Topology.Sets.Opens._auxLemma.1",
   "LT.lt",
   "instInhabitedNat",
   "Eq.mp",
   "congr",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.23",
   "Filter.atTop",
   "congrArg",
   "Int",
   "Int.instLEInt",
   "SetLike.coe",
   "congrFun",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.21",
   "Exists",
   "TopologicalSpace.Opens",
   "instOfNatInt",
   "Subtype.val",
   "Set",
   "Real",
   "GE.ge",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "TendstoUniformlyOn",
   "Exists.intro",
   "TopologicalSpace.Opens.mk",
   "True",
   "Zero.toOfNat0",
   "Subtype.pseudoMetricSpace",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.10",
   "Eisenstein_tsum",
   "Eq.substr",
   "forall_congr",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.22",
   "Lattice.toSemilatticeSup",
   "UniformSpace.toTopologicalSpace",
   "instNonempty",
   "id",
   "Membership.mem",
   "funext",
   "EisensteinSeries.ball_in_upper_half",
   "Real.instLTReal",
   "ext_by_zero_apply",
   "extendByZero",
   "NormedField.toNormedCommRing",
   "LE.le",
   "GT.gt",
   "Real.instZeroReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "PseudoMetricSpace.toDist",
   "Set.instHasSubsetSet",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "letFun",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.8",
   "Complex",
   "Subtype.mk"],
  "name": "EisensteinSeries.Eisen_partial_tends_to_uniformly_on_ball'",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (z : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }),\n      ∃ A B ε,\n        0 < ε ∧\n          Metric.closedBall z ε ⊆ EisensteinSeries.upperHalfSpaceSlice A B ∧\n            0 < B ∧\n              ε < B ∧\n                TendstoUniformlyOn (fun n => extendByZero (EisensteinSeries.eisenSquare' k n))\n                  (extendByZero (Eisenstein_tsum k)) Filter.atTop (Metric.closedBall (↑z) ε)",
  "constCategory": "Theorem"},
 {"references":
  ["TopologicalAddGroup.to_continuousSub",
   "SeminormedAddCommGroup.toTopologicalAddGroup",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "OrderClosedTopology.mk",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "NormedLatticeAddCommGroup",
   "OrderClosedTopology",
   "NormedLatticeAddCommGroup.toOrderedAddCommGroup",
   "NormedLatticeAddCommGroup.toNormedAddCommGroup",
   "isClosed_nonneg",
   "isClosed_le_of_isClosed_nonneg",
   "NormedAddGroup.toAddGroup",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "NormedAddCommGroup.toNormedAddGroup",
   "UniformSpace.toTopologicalSpace"],
  "name": "NormedLatticeAddCommGroup.orderClosedTopology",
  "constType":
  "∀ {E : Type u_2} [inst : NormedLatticeAddCommGroup E], OrderClosedTopology E",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "instHMul",
   "OfNat.ofNat",
   "PosMulMono",
   "mul_le_mul_of_nonneg_left",
   "LE.le.trans",
   "HMul.hMul",
   "MulZeroClass.toZero",
   "MulZeroClass",
   "mul_le_mul_of_nonneg_right",
   "Preorder",
   "LE.le",
   "Preorder.toLE",
   "MulPosMono",
   "MulZeroClass.toMul"],
  "name": "mul_le_mul",
  "constType":
  "∀ {α : Type u_1} {a b c d : α} [inst : MulZeroClass α] [inst_1 : Preorder α] [inst_2 : PosMulMono α]\n  [inst_3 : MulPosMono α], a ≤ b → c ≤ d → 0 ≤ c → 0 ≤ b → a * c ≤ b * d",
  "constCategory": "Theorem"},
 {"references":
  ["NormedAddCommGroup.toMetricSpace",
   "Complex.instNormedFieldComplex.proof_2",
   "Complex.instNormComplex",
   "Complex.instField",
   "NormedField",
   "NormedField.mk",
   "Complex",
   "Complex.instNormedAddCommGroupComplex",
   "Complex.instNormedFieldComplex.proof_1"],
  "name": "Complex.instNormedFieldComplex",
  "constType": "NormedField ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Or",
   "PartialOrder.toPreorder",
   "Preorder.toLT",
   "Or.symm",
   "LE.le.lt_or_eq",
   "LT.lt",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "PartialOrder"],
  "name": "eq_or_lt_of_le",
  "constType":
  "∀ {α : Type u} [inst : PartialOrder α] {a b : α}, a ≤ b → a = b ∨ a < b",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Metric.dist_mem_uniformity",
   "OfNat.ofNat",
   "Prod.snd",
   "setOf",
   "Real.instLTReal",
   "Set",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "MetricSpace.toPseudoMetricSpace",
   "Prod.fst",
   "eq_of_forall_dist_le",
   "Iff.mpr",
   "Dist.dist",
   "GT.gt",
   "Set.instMembershipSet",
   "Eq",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "MetricSpace",
   "separated_def",
   "PseudoMetricSpace.toDist",
   "uniformity",
   "Prod.mk",
   "LT.lt",
   "SeparatedSpace",
   "Real.instPreorderReal",
   "Prod",
   "Filter",
   "le_of_lt",
   "instMembershipSetFilter"],
  "name": "MetricSpace.to_separated",
  "constType": "∀ {γ : Type w} [inst : MetricSpace γ], SeparatedSpace γ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Substring",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["LinearOrderedSemiring.toMax",
   "Nat.cast",
   "Nat.cast_max",
   "Max.max",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedSemiring",
   "Nat",
   "Nat.instMaxNat",
   "Eq.symm",
   "StrictOrderedSemiring.toSemiring",
   "Eq",
   "Semiring.toNatCast"],
  "name": "Mathlib.Data.Nat.Cast.Order._auxLemma.4",
  "constType":
  "∀ {α : Type u_3} [inst : LinearOrderedSemiring α] {a b : ℕ}, max ↑a ↑b = ↑(max a b)",
  "constCategory": "Theorem"},
 {"references":
  ["Lean.Name._impl",
   "String.hash",
   "Lean.Name.str._impl",
   "String",
   "Lean.Name",
   "mixHash",
   "unsafeCast",
   "Lean.Name.hash"],
  "name": "Lean.Name.str._override",
  "constType": "Lean.Name → String → Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["wrapped._@.Mathlib.NumberTheory.ZetaFunction._hyg.136", "Complex"],
  "name": "riemannZeta",
  "constType": "ℂ → ℂ",
  "constCategory": "Definition"},
 {"references": ["Nat.commSemiring", "inferInstance", "CommSemiring", "Nat"],
  "name": "Mathlib.Tactic.Ring.instCommSemiringNat",
  "constType": "CommSemiring ℕ",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "inferInstance",
   "Semiring",
   "Int.instCommSemiringInt",
   "Int"],
  "name": "Int.instSemiringInt",
  "constType": "Semiring ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Exists",
   "Set.mem_setOf",
   "Subtype.val",
   "Set",
   "Eq.refl",
   "Exists.intro",
   "Set.mem_range",
   "Exists.casesOn",
   "Subtype.coe_mk",
   "Eq",
   "Set.range",
   "Set.ext",
   "Eq.mpr",
   "Iff",
   "Set.Elem",
   "Eq.symm",
   "Subtype",
   "id",
   "Membership.mem",
   "Subtype.mk.injEq",
   "Subtype.coe_prop",
   "setOf",
   "HasSubset.Subset",
   "Set.inclusion",
   "_private.Mathlib.Data.Set.Image.0.Set.inclusion._eq_1",
   "Set.instMembershipSet",
   "Iff.intro",
   "Set.instHasSubsetSet",
   "Eq.ndrec",
   "Set.inclusion.proof_1",
   "propext",
   "Eq.mp",
   "Subtype.mk",
   "Subtype.casesOn"],
  "name": "Set.range_inclusion",
  "constType":
  "∀ {α : Type u_1} {s t : Set α} (h : s ⊆ t), Set.range (Set.inclusion h) = {x | ↑x ∈ s}",
  "constCategory": "Theorem"},
 {"references":
  ["LinearOrderedField.mul_inv_cancel",
   "StrictOrderedRing.toRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "Field.mk",
   "LinearOrderedField.qsmul",
   "LinearOrderedField.toLinearOrderedCommRing",
   "StrictOrderedRing.toNontrivial",
   "LinearOrderedField.inv_zero",
   "CommRing.mk",
   "LinearOrderedField.toDiv",
   "LinearOrderedField.ratCast_mk",
   "LinearOrderedField",
   "LinearOrderedField.div_eq_mul_inv",
   "LinearOrderedField.zpow_succ'",
   "Field",
   "LinearOrderedField.zpow_zero'",
   "LinearOrderedCommRing.mul_comm",
   "LinearOrderedField.toRatCast",
   "LinearOrderedField.qsmul_eq_mul'",
   "LinearOrderedField.toInv",
   "LinearOrderedField.zpow",
   "LinearOrderedField.zpow_neg'"],
  "name": "LinearOrderedField.toField",
  "constType": "{α : Type u_2} → [self : LinearOrderedField α] → Field α",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedSemifield.toSemifield",
   "CommMonoidWithZero.toZero",
   "div_eq_inv_mul",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "LinearOrderedSemifield.toInv",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Iff.rfl",
   "one_div",
   "Eq.refl",
   "Semifield.toCommGroupWithZero",
   "NonAssocSemiring.toMulZeroOneClass",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "one_mul",
   "Iff",
   "DivisionCommMonoid.toDivisionMonoid",
   "Preorder.toLT",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "HDiv.hDiv",
   "InvOneClass.toInv",
   "Eq.symm",
   "le_div_iff",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "id",
   "instHDiv",
   "LinearOrderedSemifield",
   "DivisionSemiring.toGroupWithZero",
   "MulOneClass.toOne",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "CommGroupWithZero.toCommMonoidWithZero",
   "GroupWithZero.toDivInvMonoid",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "DivInvMonoid.toInv",
   "instHMul",
   "LinearOrderedSemifield.toDiv",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "DivInvOneMonoid.toInvOneClass",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "Semifield.toDivisionSemiring",
   "div_le_iff",
   "DivisionMonoid.toDivInvOneMonoid",
   "Inv.inv"],
  "name": "inv_le_inv",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a b : α}, 0 < a → 0 < b → (a⁻¹ ≤ b⁻¹ ↔ b ≤ a)",
  "constCategory": "Theorem"},
 {"references": ["Array", "List.nil", "Nat", "Array.mk"],
  "name": "Array.mkEmpty",
  "constType": "{α : Type u} → ℕ → Array α",
  "constCategory": "Definition"},
 {"references": ["SubNegMonoid", "AddGroup"],
  "name": "AddGroup.toSubNegMonoid",
  "constType": "{A : Type u} → [self : AddGroup A] → SubNegMonoid A",
  "constCategory": "Definition"},
 {"references":
  ["TopologicalSpace",
   "Filter",
   "wrapped._@.Mathlib.Topology.Basic._hyg.10680"],
  "name": "nhds",
  "constType": "{α : Type u_1} → [inst : TopologicalSpace α] → α → Filter α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Ne",
   "OfNat.ofNat",
   "instHDiv",
   "DivisionSemiring.toGroupWithZero",
   "instHAdd",
   "DivisionSemiring",
   "HAdd.hAdd",
   "add_div",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "DivisionSemiring.toDiv",
   "NonUnitalNonAssocSemiring.toMul",
   "GroupWithZero.toMonoidWithZero",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "mul_div_cancel",
   "GroupWithZero.toDiv",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Zero.toOfNat0",
   "MonoidWithZero.toMulZeroOneClass",
   "instHMul",
   "DivisionSemiring.toSemiring",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "HDiv.hDiv",
   "MonoidWithZero.toZero",
   "id"],
  "name": "add_div'",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionSemiring α] (a b c : α), c ≠ 0 → b + a / c = (b * c + a) / c",
  "constCategory": "Theorem"},
 {"references": ["DivisionRing", "Div"],
  "name": "DivisionRing.toDiv",
  "constType": "{K : Type u} → [self : DivisionRing K] → Div K",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "OfNat.ofNat",
   "Monoid.toOne",
   "GroupWithZero.mul_inv_cancel",
   "One.toOfNat1",
   "GroupWithZero.toMonoidWithZero",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "Eq",
   "Zero.toOfNat0",
   "instHMul",
   "MonoidWithZero.toMulZeroOneClass",
   "MonoidWithZero.toMonoid",
   "GroupWithZero",
   "HMul.hMul",
   "MonoidWithZero.toZero",
   "Inv.inv",
   "GroupWithZero.toInv"],
  "name": "mul_inv_cancel",
  "constType":
  "∀ {G₀ : Type u} [inst : GroupWithZero G₀] {a : G₀}, a ≠ 0 → a * a⁻¹ = 1",
  "constCategory": "Theorem"},
 {"references": ["String", "Lean.ParserDescr"],
  "name": "Lean.ParserDescr.symbol",
  "constType": "String → Lean.ParserDescr",
  "constCategory": "Other"},
 {"references":
  ["Semigroup.toMul",
   "Fin.mul_zero'",
   "Semiring.mk",
   "Fin.instCommSemigroup",
   "SubNegMonoid.toNeg",
   "Fin.instCommRing.proof_5",
   "Fin.zero_mul'",
   "npowRec",
   "Fin.instCommRing.proof_12",
   "CommSemigroup",
   "Fin.instDistrib",
   "NonUnitalNonAssocSemiring.mk",
   "CommRing",
   "Fin.instCommRing.proof_8",
   "CommRing.mk",
   "Fin.instCommRing.proof_9",
   "Fin.instCommRing.proof_1",
   "SubNegMonoid.toSub",
   "Fin.instCommRing.proof_6",
   "NeZero",
   "Fin.instCommRing.proof_3",
   "AddCommMonoid.mk",
   "AddMonoidWithOne.toNatCast",
   "Int.castDef",
   "LinearOrderedCommMonoidWithZero.toZero",
   "Fin.instCommRing.proof_14",
   "Fin.instCommRing.proof_10",
   "AddCommGroup.toAddGroup",
   "Nat",
   "Fin.instCommRing.proof_4",
   "Distrib",
   "Fin.one_mul'",
   "Fin.instCommRing.proof_7",
   "Fin.addCommGroup",
   "Nat.linearOrderedCommMonoidWithZero",
   "Fin.mul_one'",
   "AddMonoidWithOne.toAddMonoid",
   "Fin.instCommRing.proof_13",
   "AddGroup.toSubNegMonoid",
   "Fin.instCommRing.proof_11",
   "Fin.instCommRing.proof_2",
   "Fin.instCommRing.proof_16",
   "CommSemigroup.toSemigroup",
   "Fin.instCommRing.proof_15",
   "AddMonoidWithOne",
   "Fin.instAddMonoidWithOne",
   "IntCast.mk",
   "AddMonoidWithOne.toOne",
   "NonUnitalSemiring.mk",
   "SubNegMonoid.zsmul",
   "Ring.mk",
   "AddCommGroup",
   "Fin"],
  "name": "Fin.instCommRing",
  "constType": "(n : ℕ) → [inst : NeZero n] → CommRing (Fin n)",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoid.toAddSemigroup",
   "AddCommMonoid.add_comm",
   "AddCommSemigroup",
   "AddCommMonoid.toAddMonoid",
   "AddCommSemigroup.mk",
   "AddCommMonoid"],
  "name": "AddCommMonoid.toAddCommSemigroup",
  "constType": "{M : Type u} → [self : AddCommMonoid M] → AddCommSemigroup M",
  "constCategory": "Definition"},
 {"references": ["LinearOrder", "Min"],
  "name": "LinearOrder.toMin",
  "constType": "{α : Type u} → [self : LinearOrder α] → Min α",
  "constCategory": "Definition"},
 {"references": ["Ring", "Sub"],
  "name": "Ring.toSub",
  "constType": "{R : Type u} → [self : Ring R] → Sub R",
  "constCategory": "Definition"},
 {"references": [],
  "name": "outParam",
  "constType": "Sort u → Sort u",
  "constCategory": "Definition"},
 {"references": ["Exists", "setOf", "Set", "Eq"],
  "name": "Set.range",
  "constType": "{α : Type u_1} → {ι : Sort u_4} → (ι → α) → Set α",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedSemifield.toSemifield",
   "CommMonoidWithZero.toZero",
   "OfNat.ofNat",
   "LinearOrderedSemifield.toInv",
   "PartialOrder.toPreorder",
   "zpow_nonneg.match_1",
   "HAdd.hAdd",
   "Eq.refl",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "Preorder.toLE",
   "Eq",
   "zpow_ofNat",
   "pow_nonneg",
   "Zero.toOfNat0",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Eq.mpr",
   "Nat.cast",
   "DivisionCommMonoid.toDivisionMonoid",
   "instHPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Int.instNegInt",
   "Nat",
   "InvOneClass.toInv",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "CommGroupWithZero.toDivisionCommMonoid",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "id",
   "HPow.hPow",
   "LinearOrderedSemifield",
   "instAddNat",
   "DivisionSemiring.toGroupWithZero",
   "instHAdd",
   "Neg.neg",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "CommGroupWithZero.toCommMonoidWithZero",
   "GroupWithZero.toDivInvMonoid",
   "DivInvMonoid.toMonoid",
   "LE.le",
   "Eq.ndrec",
   "inv_nonneg",
   "StrictOrderedSemiring.toPartialOrder",
   "instNatCastInt",
   "propext",
   "DivInvOneMonoid.toInvOneClass",
   "OrderedCommSemiring.toOrderedSemiring",
   "DivisionMonoid.toDivInvMonoid",
   "zpow_neg",
   "Semifield.toDivisionSemiring",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "Inv.inv"],
  "name": "zpow_nonneg",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a : α}, 0 ≤ a → ∀ (n : ℤ), 0 ≤ a ^ n",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "uniformity",
   "UniformSpace",
   "Prod.mk",
   "Set",
   "Prod",
   "Filter",
   "Filter.Eventually",
   "Set.instMembershipSet",
   "instMembershipSetFilter"],
  "name": "TendstoUniformlyOn",
  "constType":
  "{α : Type u} → {β : Type v} → {ι : Type x} → [inst : UniformSpace β] → (ι → α → β) → (α → β) → Filter ι → Set α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Real",
   "Semiring.toMonoidWithZero",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "instDecidableEqFin",
   "Matrix.GeneralLinearGroup",
   "SetLike.instMembership",
   "UpperHalfPlane.mul_smul'",
   "MulAction.mk",
   "MonoidWithZero.toMonoid",
   "Matrix",
   "Subgroup.toSubmonoid",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "MulAction",
   "UpperHalfPlane.smulAux",
   "Subtype",
   "Submonoid.toMonoid",
   "Membership.mem",
   "SMul.mk",
   "Matrix.semiring",
   "UpperHalfPlane.instMulActionSubtypeGeneralLinearGroupFinOfNatNatInstOfNatNatRealInstDecidableEqFinFintypeToCommRingToStrictOrderedCommRingLinearOrderedCommRingMemSubgroupInstGroupUnitsMatrixToMonoidToMonoidWithZeroSemiringToSemiringToCommSemiringInstMembershipInstSetLikeSubgroupGLPosUpperHalfPlaneToMonoidToMonoidToDivInvMonoidToSubmonoid.proof_1",
   "Fin.fintype",
   "DivInvMonoid.toMonoid",
   "Units.instGroupUnits",
   "CommRing.toCommSemiring",
   "StrictOrderedCommRing.toCommRing",
   "Real.linearOrderedCommRing",
   "Matrix.GLPos",
   "Group.toDivInvMonoid",
   "Fin",
   "Subgroup.instSetLikeSubgroup"],
  "name":
  "UpperHalfPlane.instMulActionSubtypeGeneralLinearGroupFinOfNatNatInstOfNatNatRealInstDecidableEqFinFintypeToCommRingToStrictOrderedCommRingLinearOrderedCommRingMemSubgroupInstGroupUnitsMatrixToMonoidToMonoidWithZeroSemiringToSemiringToCommSemiringInstMembershipInstSetLikeSubgroupGLPosUpperHalfPlaneToMonoidToMonoidToDivInvMonoidToSubmonoid",
  "constType": "MulAction (↥(Matrix.GLPos (Fin 2) ℝ)) UpperHalfPlane",
  "constCategory": "Definition"},
 {"references":
  ["Array", "OfNat.ofNat", "Array.mkEmpty", "instOfNatNat", "Nat"],
  "name": "Array.mkArray0",
  "constType": "{α : Type u} → Array α",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast",
   "Ring.toIntCast",
   "Ring",
   "Int.rawCast",
   "Mathlib.Meta.NormNum.IsInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq.match_1",
   "Int",
   "Eq"],
  "name": "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
  "constType":
  "∀ {α : Type u_1} {a : α} {n : ℤ} [inst : Ring α], Mathlib.Meta.NormNum.IsInt a n → a = Int.rawCast n",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "Multiset.card",
   "AddHomClass.toFunLike",
   "AddCommMonoid.toAddMonoid",
   "FunLike.coe",
   "AddMonoid.toAddZeroClass",
   "Nat.addMonoid",
   "Finset",
   "Multiset",
   "Finset.val",
   "AddMonoidHomClass.toAddHomClass",
   "Nat",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "AddMonoidHom.addMonoidHomClass",
   "Multiset.instCanonicallyOrderedAddCommMonoidMultiset",
   "AddMonoidHom",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "Finset.card",
  "constType": "{α : Type u_1} → Finset α → ℕ",
  "constCategory": "Definition"},
 {"references":
  ["exists_prop_congr", "Exists", "Iff", "propext", "Iff.mpr", "Eq"],
  "name": "exists_prop_congr'",
  "constType":
  "∀ {p p' : Prop} {q q' : p → Prop}, (∀ (h : p), q h ↔ q' h) → ∀ (hp : p ↔ p'), Exists q = ∃ (h : p'), q' (_ : p)",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "AddZeroClass.toAdd",
   "AddZeroClass.toZero",
   "OfNat.ofNat",
   "AddZeroClass.add_zero",
   "instHAdd",
   "HAdd.hAdd",
   "AddZeroClass",
   "Eq"],
  "name": "add_zero",
  "constType": "∀ {M : Type u} [inst : AddZeroClass M] (a : M), a + 0 = a",
  "constCategory": "Theorem"},
 {"references":
  ["Ring.toAddGroupWithOne",
   "AddGroupWithOne.toIntCast",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "Eq",
   "Ring.toNeg",
   "Mathlib.Meta.NormNum.isInt_neg.match_1",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Int.cast",
   "Int.cast_neg",
   "Ring.toIntCast",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.instNegInt",
   "Eq.symm",
   "Int",
   "Int.neg"],
  "name": "Mathlib.Meta.NormNum.isInt_neg",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {f : α → α} {a : α} {a' b : ℤ},\n  f = Neg.neg → Mathlib.Meta.NormNum.IsInt a a' → Int.neg a' = b → Mathlib.Meta.NormNum.IsInt (-a) b",
  "constCategory": "Theorem"},
 {"references":
  ["IsDomain.toIsCancelMulZero",
   "PartialOrder.toPreorder",
   "Real",
   "Real.nontrivial",
   "IsDomain",
   "Real.commRing",
   "AddGroup.existsAddOfLE",
   "StrictOrderedSemiring.toSemiring",
   "CommRing",
   "Preorder.toLE",
   "StrictOrderedSemiring.toPartialOrder",
   "IsDomain.mk",
   "Real.semiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Real.instAddGroupReal",
   "IsDomain.toNontrivial",
   "Nontrivial",
   "LinearOrderedRing.isDomain",
   "Real.instLinearOrderedSemiringReal"],
  "name": "Real.instIsDomainRealSemiring",
  "constType": "IsDomain ℝ",
  "constCategory": "Definition"},
 {"references": ["SMul", "Monoid", "MulAction"],
  "name": "MulAction.toSMul",
  "constType":
  "{α : Type u_10} → {β : Type u_11} → [inst : Monoid α] → [self : MulAction α β] → SMul α β",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "HAdd.hAdd",
   "Eq.refl",
   "DivInvMonoid.Pow",
   "inv_inj",
   "Int.negSucc_mul_negSucc",
   "Eq",
   "zpow_ofNat",
   "DivisionMonoid",
   "Eq.mpr",
   "pow_mul",
   "Nat.cast",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instNegInt",
   "instOfNatNat",
   "InvolutiveInv.toInv",
   "Nat",
   "DivisionMonoid.toInvolutiveInv",
   "InvOneClass.toInv",
   "Eq.symm",
   "Nat.succ",
   "id",
   "zpow_negSucc",
   "HPow.hPow",
   "inv_pow",
   "Int.instMulInt",
   "instAddNat",
   "instHAdd",
   "Neg.neg",
   "inv_inv",
   "Int.ofNat_mul_negSucc",
   "DivInvMonoid.toMonoid",
   "Int.negSucc_mul_ofNat",
   "DivInvMonoid.toInv",
   "instHMul",
   "Eq.ndrec",
   "instNatCastInt",
   "propext",
   "DivInvOneMonoid.toInvOneClass",
   "Int.negSucc",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "zpow_neg",
   "instMulNat",
   "DivisionMonoid.toDivInvOneMonoid",
   "zpow_mul.match_1",
   "Int",
   "Inv.inv"],
  "name": "zpow_mul",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionMonoid α] (a : α) (m n : ℤ), a ^ (m * n) = (a ^ m) ^ n",
  "constCategory": "Theorem"},
 {"references": ["DistribLattice", "Lattice"],
  "name": "DistribLattice.toLattice",
  "constType": "{α : Type u_1} → [self : DistribLattice α] → Lattice α",
  "constCategory": "Definition"},
 {"references":
  ["Monad",
   "Monad.toApplicative",
   "Bool.false",
   "Lean.MonadRef",
   "Lean.SourceInfo",
   "Lean.SourceInfo.fromRef",
   "Bind.bind",
   "Pure.pure",
   "Lean.MonadRef.getRef",
   "Lean.Syntax",
   "Monad.toBind",
   "Applicative.toPure"],
  "name": "Lean.MonadRef.mkInfoFromRefPos",
  "constType":
  "{m : Type → Type} → [inst : Monad m] → [inst : Lean.MonadRef m] → m Lean.SourceInfo",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instHAdd",
   "HAdd.hAdd",
   "CommSemiring",
   "Eq.refl",
   "Eq.symm",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq"],
  "name": "Mathlib.Tactic.Ring.add_congr",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a a' b b' c : R}, a = a' → b = b' → a' + b' = c → a + b = c",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem", "setOf", "Set", "Filter", "instMembershipSetFilter"],
  "name": "Filter.Eventually",
  "constType": "{α : Type u} → (α → Prop) → Filter α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "CommSemiring.mul_comm",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "CanonicallyOrderedCommSemiring",
   "Nat.canonicallyOrderedCommSemiring.proof_8",
   "OrderBot",
   "Nat.canonicallyOrderedCommSemiring.proof_12",
   "Preorder.toLE",
   "Semiring.toNatCast",
   "Nat.nontrivial",
   "OrderedAddCommMonoid",
   "Nat.eq_zero_of_mul_eq_zero",
   "inferInstance",
   "instLENat",
   "Semiring.npow",
   "Nat.canonicallyOrderedCommSemiring.proof_10",
   "Nat.canonicallyOrderedCommSemiring.proof_3",
   "CommSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "CanonicallyOrderedAddCommMonoid.mk",
   "Nat",
   "Nat.canonicallyOrderedCommSemiring.proof_7",
   "Nat.linearOrderedSemiring",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.add_le_add_left",
   "Nat.canonicallyOrderedCommSemiring.proof_5",
   "CanonicallyOrderedCommSemiring.mk",
   "Nat.le_add_right",
   "OrderedAddCommMonoid.mk",
   "OrderBot.bot_le",
   "Nat.canonicallyOrderedCommSemiring.proof_11",
   "Nat.canonicallyOrderedCommSemiring.proof_2",
   "NonUnitalNonAssocSemiring.toMul",
   "Nat.canonicallyOrderedCommSemiring.proof_6",
   "StrictOrderedSemiring.toSemiring",
   "Semiring.toOne",
   "Nat.commSemiring",
   "Nat.canonicallyOrderedCommSemiring.proof_9",
   "Nat.canonicallyOrderedCommSemiring.proof_1",
   "Nat.orderedSemiring",
   "OrderBot.toBot",
   "Nat.canonicallyOrderedCommSemiring.proof_4",
   "LinearOrderedSemiring",
   "Nontrivial",
   "OrderBot.mk",
   "Nat.orderBot",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "Nat.canonicallyOrderedCommSemiring",
  "constType": "CanonicallyOrderedCommSemiring ℕ",
  "constCategory": "Definition"},
 {"references": ["_obj"],
  "name":
  "EisensteinSeries.instCoeForAllUpperHalfPlaneComplexForAllSubtypeMemOpensToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexInstMembershipInstSetLikeOpensMkUpperHalfSpaceUpper_half_plane_isOpen._cstage2",
  "constType": "_obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references":
  ["Iff.intro", "Or", "Or.inl", "propext", "or_self.match_1", "Eq"],
  "name": "or_self",
  "constType": "∀ (p : Prop), (p ∨ p) = p",
  "constCategory": "Theorem"},
 {"references": ["OrderedAddCommMonoid", "PartialOrder"],
  "name": "OrderedAddCommMonoid.toPartialOrder",
  "constType":
  "{α : Type u_3} → [self : OrderedAddCommMonoid α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup.toAddCommGroup",
   "NontriviallyNormedField",
   "NormedAddCommGroup",
   "setOf",
   "Filter.EventuallyEq",
   "HasFDerivAtFilter.congr_of_eventuallyEq",
   "nhds",
   "NontriviallyNormedField.toNormedField",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "mem_of_mem_nhds",
   "Field.toSemifield",
   "AddCommGroup.toAddCommMonoid",
   "NormedSpace",
   "RingHom.id",
   "Eq",
   "NormedField.toField",
   "DivisionSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "ContinuousLinearMap",
   "HasFDerivAt",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Semifield.toDivisionSemiring",
   "NormedSpace.toModule",
   "UniformSpace.toTopologicalSpace"],
  "name": "HasFDerivAt.congr_of_eventuallyEq",
  "constType":
  "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f f₁ : E → F}\n  {f' : E →L[𝕜] F} {x : E}, HasFDerivAt f f' x → f₁ =ᶠ[nhds x] f → HasFDerivAt f₁ f' x",
  "constCategory": "Theorem"},
 {"references":
  ["continuous_id",
   "isClosed_le",
   "ClosedIicTopology",
   "continuous_const",
   "ClosedIicTopology.mk",
   "TopologicalSpace",
   "OrderClosedTopology",
   "Preorder"],
  "name": "instClosedIicTopology",
  "constType":
  "∀ {α : Type u} [inst : TopologicalSpace α] [inst_1 : Preorder α] [t : OrderClosedTopology α], ClosedIicTopology α",
  "constCategory": "Definition"},
 {"references":
  ["Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "instDecidableEqFin",
   "Subgroup",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "SlashInvariantForm",
  "constType":
  "outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) → outParam ℤ → Type",
  "constCategory": "Other"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Semiring.toMonoidWithZero",
   "Nat.cast_nonneg",
   "LE.le",
   "Preorder.toLE",
   "True",
   "Semiring.toNatCast",
   "Eq",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "eq_true",
   "Nat.cast",
   "OrderedSemiring.toSemiring",
   "Nat",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.16",
  "constType":
  "∀ {α : Type u_3} [inst : OrderedSemiring α] (n : ℕ), (0 ≤ ↑n) = True",
  "constCategory": "Theorem"},
 {"references":
  ["Nat.cast",
   "instNatCastInt",
   "propext",
   "Mathlib.Tactic.Zify.nat_cast_eq",
   "Nat",
   "Int",
   "Eq"],
  "name": "Mathlib.Tactic.Zify._auxLemma.1",
  "constType": "∀ (a b : ℕ), (a = b) = (↑a = ↑b)",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "CommSemiring.toSemiring",
   "Semiring.toMonoidWithZero",
   "True",
   "Eq",
   "instHMul",
   "pow_mul",
   "Eq.ndrec",
   "MonoidWithZero.toMonoid",
   "of_eq_true",
   "instHPow",
   "CommSemiring",
   "HMul.hMul",
   "Monoid.toNatPow",
   "Nat",
   "instMulNat",
   "Eq.symm",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.pow_nat",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {b c k : ℕ} {a d e : R}, b = c * k → a ^ c = d → d ^ k = e → a ^ b = e",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.ofReal'",
   "RatCast.mk",
   "Real",
   "Rat.cast",
   "Rat",
   "Complex",
   "Real.ratCast",
   "RatCast"],
  "name": "Complex.instRatCastComplex",
  "constType": "RatCast ℂ",
  "constCategory": "Definition"},
 {"references": ["EStateM.Result"],
  "name": "EStateM",
  "constType": "Type u → Type u → Type u → Type u",
  "constCategory": "Definition"},
 {"references":
  ["False",
   "Preorder.toLT",
   "propext",
   "LT.lt",
   "Preorder",
   "lt_self_iff_false",
   "Eq"],
  "name": "Modformsported.ForMathlib.EisensteinSeries.summable._auxLemma.12",
  "constType": "∀ {α : Type u} [inst : Preorder α] (x : α), (x < x) = False",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "PartialOrder.toPreorder",
   "Real.partialOrder",
   "Real",
   "Preorder"],
  "name": "Real.instPreorderReal",
  "constType": "Preorder ℝ",
  "constCategory": "Definition"},
 {"references": ["Prod"],
  "name": "Prod.mk",
  "constType": "{α : Type u} → {β : Type v} → α → β → α × β",
  "constCategory": "Other"},
 {"references":
  ["OrderedAddCommMonoid",
   "PartialOrder.toPreorder",
   "TopologicalSpace",
   "tsum",
   "OrderClosedTopology",
   "hasSum_le",
   "LE.le",
   "Summable.hasSum",
   "Summable",
   "Preorder.toLE",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "tsum_le_tsum",
  "constType":
  "∀ {ι : Type u_1} {α : Type u_3} [inst : OrderedAddCommMonoid α] [inst_1 : TopologicalSpace α]\n  [inst_2 : OrderClosedTopology α] {f g : ι → α},\n  (∀ (i : ι), f i ≤ g i) → Summable f → Summable g → ∑' (i : ι), f i ≤ ∑' (i : ι), g i",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Distrib.toAdd",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "sq_nonneg",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocSemiring.toMul",
   "Monoid.toMulOneClass",
   "ExistsAddOfLE",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "Preorder.toLE",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Zero.toOfNat0",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "sq",
   "MonoidWithZero.toMonoid",
   "StrictOrderedSemiring.toPartialOrder",
   "instHPow",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Eq.mp",
   "HMul.hMul",
   "Monoid.toNatPow",
   "LinearOrderedSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "instOfNatNat",
   "Nat",
   "MonoidWithZero.toZero",
   "congrArg"],
  "name": "mul_self_nonneg",
  "constType":
  "∀ {α : Type u} [inst : LinearOrderedSemiring α] [inst_1 : ExistsAddOfLE α] (a : α), 0 ≤ a * a",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "add_lt_add_iff_right",
   "OfNat.ofNat",
   "Iff.rfl",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "LT",
   "AddGroup.toSubtractionMonoid",
   "Eq.refl",
   "sub_eq_add_neg",
   "AddMonoid.toAddZeroClass",
   "AddGroup.covconv_swap",
   "Iff.mpr",
   "Eq",
   "Zero.toOfNat0",
   "SubNegMonoid.toSub",
   "Function.swap",
   "AddZeroClass.toZero",
   "zero_add",
   "Eq.mpr",
   "AddGroup",
   "Iff",
   "Eq.symm",
   "neg_add_cancel_right",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "instHSub",
   "instHAdd",
   "HSub.hSub",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "Eq.ndrec",
   "propext",
   "LT.lt",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "NegZeroClass.toZero"],
  "name": "sub_neg_of_lt",
  "constType":
  "∀ {α : Type u} [inst : AddGroup α] [inst_1 : LT α]\n  [inst_2 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x < x_1] {a b : α}, a < b → a - b < 0",
  "constCategory": "Theorem"},
 {"references": ["One", "InvOneClass"],
  "name": "InvOneClass.toOne",
  "constType": "{G : Type u_2} → [self : InvOneClass G] → One G",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Semiring",
   "AbsoluteValue",
   "Semiring.toMonoidWithZero",
   "AbsoluteValue.nonneg'",
   "FunLike.coe",
   "LE.le",
   "SubadditiveHomClass.toFunLike",
   "Preorder.toLE",
   "NonUnitalNonAssocSemiring.toDistrib",
   "AbsoluteValue.subadditiveHomClass",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name": "AbsoluteValue.nonneg",
  "constType":
  "∀ {R : Type u_1} {S : Type u_2} [inst : Semiring R] [inst_1 : OrderedSemiring S] (abv : AbsoluteValue R S) (x : R),\n  0 ≤ abv x",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "instHDiv",
   "MulOneClass.toMul",
   "div_eq_mul_inv",
   "CommMagma.toMul",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "True",
   "CommMonoid.toCommSemigroup",
   "DivInvMonoid.toInv",
   "Eq",
   "mul_comm",
   "instHMul",
   "mul_assoc",
   "of_eq_true",
   "CommSemigroup.toCommMagma",
   "DivisionCommMonoid.toDivisionMonoid",
   "DivisionCommMonoid.toCommMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "congr",
   "DivisionCommMonoid",
   "HMul.hMul",
   "HDiv.hDiv",
   "mul_inv_rev",
   "congrArg",
   "Eq.trans",
   "congrFun",
   "DivInvMonoid.toDiv",
   "Inv.inv"],
  "name": "div_div",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionCommMonoid α] (a b c : α), a / b / c = a / (b * c)",
  "constCategory": "Theorem"},
 {"references": ["Lean.TSyntax", "Lean.SyntaxNodeKinds", "Lean.Syntax"],
  "name": "Lean.TSyntax.mk",
  "constType": "{ks : Lean.SyntaxNodeKinds} → Lean.Syntax → Lean.TSyntax ks",
  "constCategory": "Other"},
 {"references": ["Abs", "Abs.mk", "Sup", "Neg.neg", "Sup.sup", "Neg"],
  "name": "Neg.toHasAbs",
  "constType": "{α : Type u_1} → [inst : Neg α] → [inst : Sup α] → Abs α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "OfNat.ofNat",
   "Semiring.toNonAssocSemiring",
   "eq_true",
   "even_two",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring",
   "instNatAtLeastTwo",
   "instOfNatNat",
   "Even",
   "Nat",
   "instOfNat",
   "True",
   "Eq",
   "Semiring.toNatCast",
   "NonUnitalNonAssocSemiring.toDistrib"],
  "name": "Mathlib.Algebra.Parity._auxLemma.18",
  "constType": "∀ {α : Type u_2} [inst : Semiring α], Even 2 = True",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "OfNat.ofNat",
   "instHDiv",
   "Real.instLinearOrderedFieldReal",
   "Real.instMonoidReal",
   "Real.instLTReal",
   "Subtype.val",
   "instHAdd",
   "Real.instMulReal",
   "Real",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Eq.refl",
   "LinearOrderedField.toDiv",
   "Complex.re",
   "EisensteinSeries.lb",
   "Eq",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Complex.im",
   "instHMul",
   "instHPow",
   "LT.lt",
   "HMul.hMul",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Complex",
   "UpperHalfPlane",
   "HDiv.hDiv",
   "Nat"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.bounds.0.EisensteinSeries.lb._eq_1",
  "constType":
  "∀ (z : UpperHalfPlane),\n  EisensteinSeries.lb z = ((↑z).im ^ 4 + ((↑z).re * (↑z).im) ^ 2) / ((↑z).re ^ 2 + (↑z).im ^ 2) ^ 2",
  "constCategory": "Theorem"},
 {"references":
  ["Union",
   "Union.mk",
   "Multiset.ndunion",
   "DecidableEq",
   "Finset",
   "Finset.val",
   "Finset.mk",
   "Finset.instUnionFinset.proof_1"],
  "name": "Finset.instUnionFinset",
  "constType": "{α : Type u_1} → [inst : DecidableEq α] → Union (Finset α)",
  "constCategory": "Definition"},
 {"references":
  ["Equiv",
   "Distrib.toAdd",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommSemiring.toSemiring",
   "AddCommSemigroup.toAddCommMagma",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Matrix.SpecialLinearGroup.coe_one",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "InvOneClass.toInv",
   "Subtype",
   "Matrix.one",
   "Int.instCommRingInt",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Matrix.instHMulMatrixMatrixMatrix",
   "HPow.hPow",
   "instHSub",
   "add_comm",
   "MulOneClass.toOne",
   "eq_of_heq",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "AddCommMagma.toAdd",
   "Matrix.SpecialLinearGroup.hasOne",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "Fin",
   "congrFun",
   "Inv.inv",
   "Group.toDivisionMonoid",
   "CommMonoidWithZero.toZero",
   "HEq",
   "instOfNatInt",
   "Subtype.val",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Int.rawCast",
   "Mathlib.Tactic.Ring.sub_congr",
   "heq_of_eq",
   "NonAssocSemiring.toMulZeroOneClass",
   "Mathlib.Tactic.Ring.sub_pf",
   "Matrix.det",
   "FunLike",
   "Monoid.toNatPow",
   "Nat.succ",
   "NonUnitalNonAssocRing.toMul",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "zpow_one",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Tactic.Ring.mul_add",
   "One.toOfNat1",
   "Neg.neg",
   "FunLike.coe",
   "Mathlib.Tactic.Ring.neg_add",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Matrix.vecEmpty",
   "CommRing.toCommSemiring",
   "ModularGroup.T",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "Mathlib.Tactic.Ring.one_mul",
   "zpow_zero",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "Matrix.mul_fin_two",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Matrix.one_fin_two",
   "zpow_sub",
   "Nat",
   "Int.induction_on",
   "zpow_add",
   "Nat.rawCast",
   "Int.instCommSemiringInt",
   "Fin.fintype",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instAddInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Matrix.SpecialLinearGroup",
   "Mathlib.Tactic.Ring.of_eq",
   "Matrix.of",
   "HEq.refl",
   "DivInvOneMonoid.toInvOneClass",
   "mul_one",
   "Matrix.vecCons",
   "congrArg",
   "Mathlib.Tactic.Ring.mul_one",
   "ModularGroup.coe_T_inv",
   "Int.ofNat",
   "Int.instAddCommSemigroupInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Int.instSubInt",
   "CommRing.toNonUnitalCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "outParam",
   "Int.instRingInt",
   "instHPow",
   "Matrix",
   "Matrix.SpecialLinearGroup.hasInv",
   "instOfNatNat",
   "Int.instNegInt",
   "CommSemiring.toCommMonoidWithZero",
   "AddCommMonoid.toAddCommSemigroup",
   "id",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "HSub.hSub",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "Equiv.instFunLikeEquiv",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Group.toDivInvMonoid"],
  "name": "ModularGroup.coe_T_zpow",
  "constType":
  "∀ (n : ℤ), ↑(ModularGroup.T ^ n) = Matrix.of ![![1, n], ![0, 1]]",
  "constCategory": "Theorem"},
 {"references": ["outParam", "SProd"],
  "name": "SProd.sprod",
  "constType":
  "{α : Type u} → {β : Type v} → {γ : outParam (Type w)} → [self : SProd α β γ] → α → β → γ",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "NonAssocSemiring.toMulZeroOneClass",
   "pow_one",
   "True",
   "Eq",
   "Nat.add",
   "Semiring.toNonAssocSemiring",
   "one_mul",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "Nat.succ",
   "Eq.trans",
   "eq_self",
   "HPow.hPow",
   "Nat.succ_mul",
   "instAddNat",
   "MulOneClass.toOne",
   "instHAdd",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "Monoid.toMulOneClass",
   "pow_add",
   "instHMul",
   "Eq.ndrec",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "HMul.hMul",
   "instMulNat",
   "Nat.mul",
   "congrArg",
   "Nat.semiring",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.pow_bit1",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a : R} {k : ℕ} {b c d : R},\n  a ^ k = b → b * b = c → c * a = d → a ^ Nat.add (Nat.mul 2 k) 1 = d",
  "constCategory": "Theorem"},
 {"references": ["Zero"],
  "name": "NeZero",
  "constType": "{R : Type u_1} → [inst : Zero R] → R → Prop",
  "constCategory": "Other"},
 {"references":
  ["_obj",
   "Lean.Name.str._override",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_8",
   "«termSL(_,_)».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.7._closed_13"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_9._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references": ["SeminormedAddGroup", "AddGroup"],
  "name": "SeminormedAddGroup.toAddGroup",
  "constType": "{E : Type u_9} → [self : SeminormedAddGroup E] → AddGroup E",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoid.toAddSemigroup",
   "AddSemigroup.toAdd",
   "AddMonoid.toZero",
   "AddMonoid.zero_add",
   "AddZeroClass.mk",
   "AddZeroClass",
   "AddMonoid.add_zero",
   "AddMonoid"],
  "name": "AddMonoid.toAddZeroClass",
  "constType": "{M : Type u} → [self : AddMonoid M] → AddZeroClass M",
  "constCategory": "Definition"},
 {"references":
  ["Zero",
   "Fin.ofNat''",
   "OfNat.ofNat",
   "NeZero",
   "Nat.linearOrderedCommMonoidWithZero",
   "Zero.mk",
   "LinearOrderedCommMonoidWithZero.toZero",
   "instOfNatNat",
   "Nat",
   "Fin"],
  "name": "Fin.instZeroFin",
  "constType": "{n : ℕ} → [inst : NeZero n] → Zero (Fin n)",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Int",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["Membership.mem",
   "SMul.comp",
   "MulOneClass.toMul",
   "SMul",
   "Submonoid.instSetLikeSubmonoid",
   "MulOneClass",
   "MonoidHomClass.toMulHomClass",
   "Submonoid",
   "MonoidHom.monoidHomClass",
   "MulHomClass.toFunLike",
   "MonoidHom",
   "FunLike.coe",
   "SetLike.instMembership",
   "Subtype",
   "Submonoid.subtype",
   "Submonoid.toMulOneClass"],
  "name": "Submonoid.smul",
  "constType":
  "{M' : Type u_5} → {α : Type u_6} → [inst : MulOneClass M'] → [inst_1 : SMul M' α] → (S : Submonoid M') → SMul (↥S) α",
  "constCategory": "Definition"},
 {"references": ["Decidable", "Not", "dite", "rfl", "ite", "Eq"],
  "name": "dite_eq_ite",
  "constType":
  "∀ {P : Prop} {α : Sort u_1} {a b : α} [inst : Decidable P], (if x : P then a else b) = if P then a else b",
  "constCategory": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "CharZero",
   "propext",
   "Nat.cast_inj",
   "Nat",
   "Eq"],
  "name": "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
  "constType":
  "∀ {R : Type u_1} [inst : AddMonoidWithOne R] [inst_1 : CharZero R] {m n : ℕ}, (↑m = ↑n) = (m = n)",
  "constCategory": "Theorem"},
 {"references":
  ["«termSL(_,_)».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.7._closed_9",
   "Lean.Name.anonymous._impl",
   "_obj",
   "Lean.Name.str._override"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_1._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["NoZeroDivisors",
   "CommMonoidWithZero.toZero",
   "CanonicallyOrderedCommSemiring.toCommSemiring",
   "CanonicallyOrderedCommSemiring.toMul",
   "CanonicallyOrderedCommSemiring.eq_zero_or_eq_zero_of_mul_eq_zero",
   "NoZeroDivisors.mk",
   "CanonicallyOrderedCommSemiring",
   "CommSemiring.toCommMonoidWithZero"],
  "name": "CanonicallyOrderedCommSemiring.toNoZeroDivisors",
  "constType":
  "∀ {α : Type u} [inst : CanonicallyOrderedCommSemiring α], NoZeroDivisors α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "fderiv",
   "NontriviallyNormedField",
   "NormedAddCommGroup",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableOn",
   "nhds",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "Set",
   "PseudoMetricSpace.toUniformSpace",
   "NormedSpace",
   "DifferentiableAt",
   "HasFDerivAt.differentiableAt",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Filter",
   "UniformSpace.toTopologicalSpace",
   "DifferentiableOn.hasFDerivAt",
   "instMembershipSetFilter"],
  "name": "DifferentiableOn.differentiableAt",
  "constType":
  "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\n  {x : E} {s : Set E}, DifferentiableOn 𝕜 f s → s ∈ nhds x → DifferentiableAt 𝕜 f x",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "NormedAlgebra.toAlgebra",
   "OfNat.ofNat",
   "Real",
   "Semiring.toMonoidWithZero",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "Matrix.GeneralLinearGroup",
   "instDecidableEqFin",
   "SlashAction",
   "Ring.toNonAssocRing",
   "SetLike.instMembership",
   "Matrix.SpecialLinearGroup.monoid",
   "Complex.Complex.addGroupWithOne",
   "Complex.instSemiringComplex",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "SeminormedCommRing.toSeminormedRing",
   "Int.castRingHom",
   "MonoidWithZero.toMonoid",
   "Matrix",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Algebra.toSMul",
   "Subtype",
   "Int.instCommRingInt",
   "Membership.mem",
   "Complex.instCommSemiringComplex",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Matrix.SpecialLinearGroup.map",
   "ModularForm.instSlashActionIntSubtypeGeneralLinearGroupFinOfNatNatInstOfNatNatRealInstDecidableEqFinFintypeToCommRingToStrictOrderedCommRingLinearOrderedCommRingMemSubgroupInstGroupUnitsMatrixToMonoidToMonoidWithZeroSemiringToSemiringToCommSemiringInstMembershipInstSetLikeSubgroupGLPosForAllUpperHalfPlaneComplexToGroupAddMonoidToAddMonoidToAddMonoidWithOneAddGroupWithOneInstSMulToSMulInstCommSemiringComplexInstSemiringComplexToAlgebraInstNormedFieldComplexToSeminormedRingToSeminormedCommRingToNormedCommRingId",
   "Pi.instSMul",
   "Matrix.semiring",
   "AddMonoidWithOne.toAddMonoid",
   "MonoidHom.comp",
   "Fin.fintype",
   "Real.instRingReal",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Pi.addMonoid",
   "NormedCommRing.toSeminormedCommRing",
   "Units.instGroupUnits",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup",
   "Subgroup.toGroup",
   "StrictOrderedCommRing.toCommRing",
   "Real.linearOrderedCommRing",
   "Matrix.SpecialLinearGroup.toGLPos",
   "monoidHomSlashAction",
   "Matrix.GLPos",
   "Complex",
   "Group.toDivInvMonoid",
   "Int",
   "Fin",
   "Subgroup.subtype",
   "NormedAlgebra.id",
   "Subgroup.instSetLikeSubgroup"],
  "name": "ModularForm.subgroupAction",
  "constType":
  "(Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) → SlashAction ℤ (↥Γ) (UpperHalfPlane → ℂ) ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "IsROrC.innerProductSpace",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "NontriviallyNormedField.toNormedField",
   "one_div",
   "DivInvMonoid.Pow",
   "And.left",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Dist.dist",
   "And.right",
   "Set.Elem",
   "NormedDivisionRing.toDivisionRing",
   "HasDistribNeg.toInvolutiveNeg",
   "Subtype",
   "Complex.instOneComplex",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Complex.instZeroComplex",
   "instHDiv",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Prod.snd",
   "Complex.instDenselyNormedFieldComplex",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "NormedCommRing.toNormedRing",
   "SubadditiveHomClass.toFunLike",
   "DivisionRing.toInv",
   "SMulZeroClass.toSMul",
   "InnerProductSpace.toNormedSpace",
   "EisensteinSeries.dd2",
   "And",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "congr",
   "Norm.norm",
   "And.intro",
   "MonoidWithZero.toZero",
   "congrFun",
   "linear_eq_zero_iff",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "HEq",
   "instOfNatInt",
   "Set",
   "dist_zero_right",
   "Eq.refl",
   "IsHolomorphicOn",
   "NonAssocSemiring.toMulZeroOneClass",
   "dite_congr",
   "NormedField.toField",
   "Complex.instSemiringComplex",
   "Monoid.toNatPow",
   "Mathlib.Logic.Basic._auxLemma.10",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.instCommSemiringComplex",
   "Real.instLTReal",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "Neg.neg",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "GroupWithZero.toMonoidWithZero",
   "Nat.commSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.one_mul",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "NormedAddCommGroup.toNormedAddGroup",
   "Semifield.toDivisionSemiring",
   "Subtype.mk",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "instHSMul",
   "HAdd.hAdd",
   "AbsoluteValue",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "dite",
   "norm_mul",
   "Mathlib.Tactic.Ring.div_pf",
   "Semiring.toNonAssocSemiring",
   "SMulWithZero.toSMulZeroClass",
   "Iff.mp",
   "MonoidWithZero.toMonoid",
   "HasDerivWithinAt",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "NormedField.toNormedSpace",
   "Ring.toIntCast",
   "Filter",
   "And.casesOn",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Nat.cast_one",
   "NormedRing.toRing",
   "_private.Modformsported.ForMathlib.EisensteinSeries.mdifferentiable.0.IsHolomorphicOn._eq_1",
   "Prod.fst",
   "Real.orderedSemiring",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Set.instMembershipSet",
   "Int.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "MulActionWithZero.toSMulWithZero",
   "norm_inv",
   "HEq.refl",
   "Int.cast",
   "DivInvOneMonoid.toInvOneClass",
   "eise",
   "Eq.mp",
   "mul_one",
   "zpow_neg",
   "sub_neg_eq_add",
   "NormedField.toNormedDivisionRing",
   "Int.ofNat",
   "NormedAddCommGroup.toAddCommGroup",
   "AddGroupWithOne.toIntCast",
   "MulZeroClass.zero_mul",
   "SeminormedRing.toPseudoMetricSpace",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NormedSpace",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NormedAddGroup.toAddGroup",
   "instDecidableNot",
   "AddMonoid.toZero",
   "zero_hol",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "nhdsWithin",
   "id",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Complex.addCommGroup",
   "AddMonoidWithOne.toAddMonoid",
   "Complex.abs_abs",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "Real.pseudoMetricSpace",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "PseudoMetricSpace.toDist",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Eq.casesOn",
   "Complex.instNormedAddCommGroupComplex",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "NormedAddCommGroup",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "mul_neg",
   "upper_half_plane_isOpen",
   "AddCommGroup.toAddCommMonoid",
   "Semifield.toCommGroupWithZero",
   "Nat.cast_zero",
   "AddGroupWithOne.toAddGroup",
   "pow_one",
   "Mathlib.Tactic.Ring.inv_mul",
   "Complex.Complex.addGroupWithOne",
   "SubNegMonoid.toSub",
   "Nat.cast",
   "Complex.instField",
   "Int.cast_neg",
   "HSMul.hSMul",
   "UpperHalfPlane.upperHalfSpace",
   "Filter.Tendsto",
   "HDiv.hDiv",
   "NormedAddCommGroup.toNorm",
   "InvOneClass.toInv",
   "EisensteinSeries.aux8",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "instHSub",
   "Complex.abs",
   "eq_of_heq",
   "SeminormedAddGroup.toPseudoMetricSpace",
   "Complex.instAddComplex",
   "Module.toMulActionWithZero",
   "Real.normedCommRing",
   "CommGroupWithZero.toCommMonoidWithZero",
   "instDecidableTrue",
   "HasDerivAt",
   "Complex.im",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Field.toDiv",
   "NormedSpace.toModule",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "Inv.inv",
   "Exists",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Exists.intro",
   "AddMonoid.toAddZeroClass",
   "Complex.instInvComplex",
   "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.6",
   "SeminormedAddGroup.toAddGroup",
   "TopologicalSpace.Opens.mk",
   "Abs.abs",
   "True",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "Complex.instIsROrCComplex",
   "InvolutiveNeg.toNeg",
   "Mathlib.Tactic.Ring.inv_single",
   "UniformSpace.toTopologicalSpace",
   "neg_mul",
   "CommGroupWithZero.toDivisionCommMonoid",
   "Neg.toHasAbs",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "extendByZero",
   "Mathlib.Data.Subtype._auxLemma.5",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "Metric.tendsto_nhdsWithin_nhds",
   "Prod",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Real.normedField",
   "Exists.casesOn",
   "SetLike.instMembership",
   "NormedField.toNorm",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "DivisionCommMonoid.toDivisionMonoid",
   "Real.instInvReal",
   "Nat",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Ne",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "Classical.propDecidable",
   "Complex.charZero",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.div_congr",
   "DivInvMonoid.toInv",
   "EisensteinSeries.ein",
   "instHMul",
   "TopologicalSpace.Opens.carrier",
   "Not",
   "congrArg",
   "add_zero",
   "SeminormedAddCommGroup.toSeminormedAddGroup",
   "zero_zpow",
   "TopologicalSpace.Opens",
   "Complex.instDecidableEqComplex",
   "Int.instSubInt",
   "DivisionRing.toRing",
   "Complex.instNegComplex",
   "NormedDivisionRing.toNorm",
   "SeminormedAddGroup.toNorm",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "instHPow",
   "Ring.toSub",
   "MulZeroClass.toZero",
   "Int.instNegInt",
   "Eq.symm",
   "DivisionRing.toDiv",
   "funext",
   "NontriviallyNormedField",
   "HasDerivAt.hasDerivWithinAt",
   "instHAdd",
   "nhds",
   "HSub.hSub",
   "hasDerivWithinAt_iff_tendsto",
   "AddGroupWithOne.toNeg",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Semiring.toOne",
   "Real.instZeroReal",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "DivisionSemiring.toSemiring",
   "SubtractionMonoid.toSubNegMonoid",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "OrderedSemiring.toSemiring",
   "SubNegMonoid.toAddMonoid",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "Complex.instMulComplex",
   "DenselyNormedField.toNontriviallyNormedField"],
  "name": "EisensteinSeries.Eise'_has_deriv_within_at",
  "constType":
  "∀ (k : ℤ) (y : ℤ × ℤ), k ≠ 0 → IsHolomorphicOn fun z => eise k z y",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "OfNat.ofNat_ne_zero",
   "AddMonoidWithOne",
   "OfNat.ofNat",
   "eq_false",
   "Nat.AtLeastTwo",
   "False",
   "AddMonoidWithOne.toNatCast",
   "CharZero",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "Nat",
   "instOfNat",
   "Eq"],
  "name": "Mathlib.Algebra.CharZero.Defs._auxLemma.7",
  "constType":
  "∀ {R : Type u_1} [inst : AddMonoidWithOne R] [inst_1 : CharZero R] (n : ℕ) [h : Nat.AtLeastTwo n],\n  (OfNat.ofNat n = 0) = False",
  "constCategory": "Theorem"},
 {"references": ["SeminormedAddGroup", "PseudoMetricSpace"],
  "name": "SeminormedAddGroup.toPseudoMetricSpace",
  "constType":
  "{E : Type u_9} → [self : SeminormedAddGroup E] → PseudoMetricSpace E",
  "constCategory": "Definition"},
 {"references":
  ["eq_true", "le_refl", "Preorder", "LE.le", "True", "Preorder.toLE", "Eq"],
  "name": "Mathlib.Order.Basic._auxLemma.1",
  "constType": "∀ {α : Type u} [inst : Preorder α] (a : α), (a ≤ a) = True",
  "constCategory": "Theorem"},
 {"references":
  ["MulOneClass.toMul",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MulZeroOneClass.toMulOneClass",
   "MonoidHomClass.toMulHomClass",
   "AbsoluteValue",
   "Real",
   "MulHom.mk",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "NonUnitalNonAssocSemiring.toMul",
   "Real.orderedSemiring",
   "Real.sqrt",
   "NonAssocSemiring.toMulZeroOneClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_add",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "AbsoluteValue.mk",
   "Real.semiring",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_nonneg'",
   "Complex.normSq",
   "OrderedSemiring.toSemiring",
   "Complex",
   "MonoidWithZeroHom",
   "Complex.abs.proof_1",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_mul"],
  "name": "Complex.abs",
  "constType": "AbsoluteValue ℂ ℝ",
  "constCategory": "Definition"},
 {"references":
  ["_obj",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_5",
   "Lean.Name.str._override",
   "«termSL(_,_)».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.7._closed_7"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_6._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references": ["InvOneClass", "Inv"],
  "name": "InvOneClass.toInv",
  "constType": "{G : Type u_2} → [self : InvOneClass G] → Inv G",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "setOf",
   "Real.instLTReal",
   "Set",
   "Real",
   "LT.lt",
   "Complex"],
  "name": "UpperHalfPlane.upperHalfSpace",
  "constType": "Set ℂ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "PUnit",
  "constType": "Sort u",
  "constCategory": "Other"},
 {"references":
  ["Submonoid",
   "Subgroup",
   "Group",
   "Group.toDivInvMonoid",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass"],
  "name": "Subgroup.toSubmonoid",
  "constType": "{G : Type u_5} → [inst : Group G] → Subgroup G → Submonoid G",
  "constCategory": "Definition"},
 {"references":
  ["NontriviallyNormedField",
   "NormedAlgebra.toNormedSpace'",
   "NonUnitalNonAssocRing.toMul",
   "NontriviallyNormedField.toNormedField",
   "NormedRing.toSeminormedRing",
   "Eq.refl",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Set.univ",
   "hasDerivWithinAt_univ",
   "HasDerivAt",
   "Ring.toNonAssocRing",
   "Eq",
   "NormedRing",
   "NormedRing.toNonUnitalNormedRing",
   "instHMul",
   "Eq.mpr",
   "HasDerivWithinAt.const_mul",
   "Eq.ndrec",
   "HasDerivWithinAt",
   "propext",
   "Eq.mp",
   "HMul.hMul",
   "NormedAlgebra",
   "Eq.symm",
   "NonUnitalNormedRing.toNormedAddCommGroup",
   "NormedRing.toRing",
   "id"],
  "name": "HasDerivAt.const_mul",
  "constType":
  "∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] {x : 𝕜} {𝔸 : Type u_2} [inst_1 : NormedRing 𝔸]\n  [inst_2 : NormedAlgebra 𝕜 𝔸] {d : 𝕜 → 𝔸} {d' : 𝔸} (c : 𝔸),\n  HasDerivAt d d' x → HasDerivAt (fun y => c * d y) (c * d') x",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Finset.sum",
   "upper_half_plane_isOpen",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "EisensteinSeries.eisenSquare",
   "Finset.range",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "UpperHalfPlane.upperHalfSpace",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Nat",
   "UniformSpace.toTopologicalSpace",
   "Int",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Subtype"],
  "name": "EisensteinSeries.eisenSquare'",
  "constType":
  "ℤ → ℕ → ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "OrderedSemiring",
   "OfNat.ofNat",
   "Nat.cast",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toSemiring",
   "Semiring.toMonoidWithZero",
   "MonoidWithZero.toZero",
   "Nat.cast_nonneg",
   "Nat",
   "LE.le",
   "OrderedSemiring.toPartialOrder",
   "Preorder.toLE",
   "Semiring.toNatCast"],
  "name": "Linarith.nat_cast_nonneg",
  "constType": "∀ (α : Type u) [inst : OrderedSemiring α] (n : ℕ), 0 ≤ ↑n",
  "constCategory": "Theorem"},
 {"references":
  ["AddGroupWithOne.toAddMonoidWithOne",
   "AddGroup",
   "AddGroupWithOne.zsmul_succ'",
   "AddGroupWithOne.toSub",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroup.mk",
   "AddGroupWithOne.toNeg",
   "AddGroupWithOne",
   "AddGroupWithOne.zsmul",
   "AddGroupWithOne.zsmul_zero'",
   "AddGroupWithOne.zsmul_neg'",
   "SubNegMonoid.mk",
   "AddGroupWithOne.add_left_neg",
   "AddGroupWithOne.sub_eq_add_neg"],
  "name": "AddGroupWithOne.toAddGroup",
  "constType": "{R : Type u} → [self : AddGroupWithOne R] → AddGroup R",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "Monoid",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "instAddNat",
   "MulOneClass.toOne",
   "instHAdd",
   "HAdd.hAdd",
   "Eq.refl",
   "One.toOfNat1",
   "pow_zero",
   "Monoid.toMulOneClass",
   "Eq",
   "instHMul",
   "Eq.mpr",
   "Eq.ndrec",
   "instHPow",
   "Monoid.toNatPow",
   "HMul.hMul",
   "mul_one",
   "pow_succ",
   "instOfNatNat",
   "Nat",
   "id"],
  "name": "pow_one",
  "constType": "∀ {M : Type u} [inst : Monoid M] (a : M), a ^ 1 = a",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "CommSemiring.mul_comm",
   "Monoid.mk",
   "NonUnitalSemiring.mul_assoc",
   "CommGroupWithZero",
   "Semifield.toCommSemiring",
   "Semiring.npow_succ",
   "AddCommMonoid.toAddMonoid",
   "Semifield.mul_inv_cancel",
   "Semiring.npow_zero",
   "Semiring.one_mul",
   "Semifield",
   "Semifield.toInv",
   "Semiring.npow",
   "NonUnitalNonAssocSemiring.zero_mul",
   "AddMonoid.toZero",
   "Semifield.toNontrivial",
   "CommMonoidWithZero.mk",
   "CommMonoid.mk",
   "Semigroup.mk",
   "CommGroupWithZero.mk",
   "Semiring.mul_one",
   "NonUnitalNonAssocSemiring.toMul",
   "Semifield.zpow",
   "Semifield.zpow_neg'",
   "Semiring.toOne",
   "Semifield.zpow_zero'",
   "Semifield.zpow_succ'",
   "Semifield.div_eq_mul_inv",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.mul_zero",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semifield.toDiv",
   "Semifield.inv_zero"],
  "name": "Semifield.toCommGroupWithZero",
  "constType": "{α : Type u_4} → [self : Semifield α] → CommGroupWithZero α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "CommSemiring.toSemiring",
   "Complex.instNormedFieldComplex",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "DivInvMonoid.Pow",
   "AbsoluteValue.mulHomClass",
   "Semifield.toCommGroupWithZero",
   "Nat.cast_zero",
   "Iff.mpr",
   "Mathlib.Meta.NormNum.isInt_add",
   "instDecidableEqNat",
   "Real.orderedRing",
   "Semiring.toNatCast",
   "Complex.abs_ofReal",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Complex.Complex.addGroupWithOne",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "le_of_not_gt",
   "Complex.instField",
   "AbsoluteValue.zeroHomClass",
   "NormedDivisionRing.toDivisionRing",
   "map_mul",
   "LinearOrderedField.toLinearOrderedSemifield",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "Complex.instZeroComplex",
   "Complex.instNontrivialComplex",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Nat.pos_of_ne_zero",
   "Prod.snd",
   "UpperHalfPlane.coe",
   "Complex.instAddComplex",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "SubadditiveHomClass.toFunLike",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "MonoidWithZero.toMulZeroOneClass",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "Int",
   "Inv.inv",
   "congrFun",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Real",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Int.rawCast",
   "Mathlib.Data.Prod.Basic._auxLemma.1",
   "Eq.refl",
   "CharP.cast_eq_zero",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "AddMonoid.toAddZeroClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Abs.abs",
   "Mathlib.Tactic.Ring.sub_pf",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "Int.add_one_le_iff",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "Finset",
   "Monoid.toNatPow",
   "map_zero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "zero_lt_one",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "CommGroupWithZero.toDivisionCommMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.cast_pos",
   "Field.toSemifield",
   "One.toOfNat1",
   "Neg.neg",
   "Complex.instRingComplex",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "DivInvMonoid.toMonoid",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "Monoid.toMulOneClass",
   "Eq.ndrec",
   "instNatCastInt",
   "Prod.mk",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "Prod",
   "Semifield.toDivisionSemiring",
   "Mathlib.Tactic.Ring.atom_pf",
   "NegZeroClass.toNeg",
   "Int.instAddMonoidInt",
   "AbsoluteValue.monoidWithZeroHomClass",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "EisensteinSeries.Eise_on_zero_square",
   "HAdd.hAdd",
   "Real.instLEReal",
   "AbsoluteValue",
   "AddGroup.toSubtractionMonoid",
   "dite",
   "Real.instSupReal",
   "instLTNat",
   "implies_congr",
   "Preorder.toLE",
   "Eq",
   "Nat.linearOrder",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "EisensteinSeries.Eise_on_square_is_bounded",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "DivisionCommMonoid.toDivisionMonoid",
   "Ring.toIntCast",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "mul_inv_rev",
   "EisensteinSeries.square",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "neg_neg_of_pos",
   "DivisionSemiring.toGroupWithZero",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Complex.charZero",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Prod.fst",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Real.orderedSemiring",
   "GroupWithZero.toDivInvMonoid",
   "Mathlib.Tactic.Zify._auxLemma.3",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instLTInt",
   "Int.instAddInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DivInvMonoid.toInv",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "Int.instAddGroupInt",
   "AddCancelMonoid.toIsCancelAdd",
   "Int.cast",
   "Real.instIsDomainRealSemiring",
   "Eq.mp",
   "Not",
   "congrArg",
   "map_zpow₀",
   "NormedField.toNormedDivisionRing",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "LinearOrderedRing.toStrictOrderedRing",
   "Linarith.lt_irrefl",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Int.linearOrderedCommRing",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "instLENat",
   "Preorder.toLT",
   "instHPow",
   "forall_congr",
   "ZeroHomClass.toFunLike",
   "AddMonoid.toZero",
   "instOfNatNat",
   "NeZero.charZero_one",
   "add_lt_of_neg_of_le",
   "CommSemiring.toCommMonoidWithZero",
   "id",
   "Membership.mem",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HSub.hSub",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "CharP.ofCharZero",
   "StrictOrderedSemiring.to_charZero",
   "OrderedCommSemiring.toOrderedSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Int.instSemiringInt",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "Complex.instMulComplex",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.Eise_on_square_is_bounded''",
  "constType":
  "∀ (k : ℤ),\n  0 ≤ k →\n    ∀ (z : UpperHalfPlane) (n : ℕ),\n      1 ≤ k →\n        ∀ x ∈ EisensteinSeries.square ↑n,\n          (Complex.abs ((↑x.1 * ↑z + ↑x.2) ^ k))⁻¹ ≤ (Complex.abs (↑(EisensteinSeries.rfunct z) ^ k * ↑n ^ k))⁻¹",
  "constCategory": "Theorem"},
 {"references": ["Membership.mem", "Exists", "Set", "Set.instMembershipSet"],
  "name": "Set.Nonempty",
  "constType": "{α : Type u_1} → Set α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_one",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "NormedLatticeAddCommGroup.orderClosedTopology",
   "one_div",
   "DivInvMonoid.Pow",
   "instUniformAddGroupRealToUniformSpacePseudoMetricSpaceInstAddGroupReal",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Real.instOneReal",
   "IsROrC.charZero_isROrC",
   "Iff",
   "NormedDivisionRing.toDivisionRing",
   "Real.instPowReal",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "instOfNat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Summable",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Complex.instOneComplex",
   "GroupWithZero.toInv",
   "separated_t3",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Complex.instNontrivialComplex",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Prod.snd",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "PseudoMetricSpace.toUniformSpace",
   "map_inv₀",
   "SubadditiveHomClass.toFunLike",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instNatAtLeastTwo",
   "congr",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "congrFun",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "Mathlib.Data.Int.Cast.Lemmas._auxLemma.8",
   "HEq",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "EisensteinSeries.AbsEise_bounded_on_square",
   "Mathlib.Meta.NormNum.isInt_mul",
   "GE.ge",
   "Int.rawCast",
   "Eq.refl",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "Int.add_one_le_iff",
   "AddGroup.toAddCancelMonoid",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "zero_lt_one",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Real.instLTReal",
   "MonoidHomClass.toMulHomClass",
   "PolishSpace.t2Space",
   "Field.toSemifield",
   "Neg.neg",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "Real.instDivisionRingReal",
   "div_ne_zero",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "instNatCastInt",
   "instTopologicalRingRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceToNonUnitalNonAssocRingToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "letFun",
   "Semifield.toDivisionSemiring",
   "NegZeroClass.toNeg",
   "Int.instAddMonoidInt",
   "MulOneClass.toMul",
   "HAdd.hAdd",
   "AbsoluteValue",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Inv",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Ring.toIntCast",
   "EisensteinSeries.squares_cover_all",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "instSecondCountableTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpace",
   "not_false_eq_true",
   "T3Space.toT0Space",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Prod.fst",
   "Real.orderedSemiring",
   "lt_of_not_ge",
   "GroupWithZero.toDivInvMonoid",
   "Int.instLTInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "HEq.refl",
   "of_eq_true",
   "Int.cast",
   "Real.metricSpace",
   "Eq.mp",
   "Real.normedLatticeAddCommGroup",
   "NormedField.toNormedDivisionRing",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "summable_mul_left_iff",
   "AddMonoid.toZero",
   "TopologicalRing.toTopologicalSemiring",
   "instOfNatNat",
   "Mathlib.Algebra.Order.Field.Basic._auxLemma.5",
   "Int.instLinearOrderInt",
   "CommSemiring.toCommMonoidWithZero",
   "NeZero.charZero_one",
   "_private.Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty.0.AbsEisenstein_tsum._eq_1",
   "id",
   "Membership.mem",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "AddMonoidWithOne.toAddMonoid",
   "Real.pseudoMetricSpace",
   "Real.rpow_int_cast",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.to_charZero",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedCommSemiring.toOrderedSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Eq.casesOn",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "AddCommGroup.toAddCommMonoid",
   "Semifield.toCommGroupWithZero",
   "Nat.cast_zero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Real.orderedRing",
   "Iff.mpr",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "Complex.instField",
   "AbsEise",
   "HDiv.hDiv",
   "HPow.hPow",
   "instHSub",
   "Complex.abs",
   "tsum_lemma",
   "tsum_mul_left",
   "eq_of_heq",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.7",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Real.normedCommRing",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Real.summable_nat_rpow_inv",
   "Complex.im",
   "Mathlib.Tactic.Ring.neg_zero",
   "MonoidWithZero.toMulZeroOneClass",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "polishSpace_of_complete_second_countable",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Int",
   "Inv.inv",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "AddMonoid.toAddZeroClass",
   "True",
   "Real.instAddCommGroupReal",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "EisensteinSeries.real_eise_is_summable",
   "DivInvMonoid.toDiv",
   "zpow_ne_zero",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Finset.sum",
   "Real.nontrivial",
   "Mathlib.Tactic.Ring.cast_pos",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "DivInvMonoid.toMonoid",
   "AbsoluteValue.nonneg",
   "tsum_le_tsum",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.8",
   "Prod",
   "EisensteinSeries.riemannZeta_abs_int",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Mathlib.Tactic.Ring.atom_pf",
   "Real.instAddCommMonoidReal",
   "AbsoluteValue.monoidWithZeroHomClass",
   "EisensteinSeries.rfunct_ne_zero",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Real.instLEReal",
   "Real.instSubReal",
   "Preorder.toLE",
   "Eq",
   "AbsEisenstein_tsum",
   "Eq.mpr",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "Finset.sum_congr",
   "EisensteinSeries.square",
   "OrderedAddCommMonoid.toPartialOrder",
   "AddCommMonoid",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "OrderedSemiring.zeroLEOneClass",
   "Real.intCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "Int.instAddInt",
   "Iff.symm",
   "instHMul",
   "Int.instAddGroupInt",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.instIsDomainRealSemiring",
   "Not",
   "ExistsUnique",
   "map_zpow₀",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Int.instSubInt",
   "instCompleteSpaceRealToUniformSpacePseudoMetricSpace",
   "Mathlib.Meta.NormNum.isNat_add",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "zpow_nonneg",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "forall_congr",
   "Preorder.toLT",
   "instHPow",
   "TopologicalSpace",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "funext",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HSub.hSub",
   "tsum",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "Semiring.toOne",
   "Real.instZeroReal",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "DivisionSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Int.instSemiringInt",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "riemannZeta",
   "Complex",
   "sum_lemma",
   "NegZeroClass.toZero",
   "Complex.instMulComplex",
   "MetricSpace.to_separated"],
  "name": "EisensteinSeries.AbsEisenstein_bound",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane),\n  3 ≤ k → AbsEisenstein_tsum k z ≤ 8 / EisensteinSeries.rfunct z ^ k * Complex.abs (riemannZeta ↑(k - 1))",
  "constCategory": "Theorem"},
 {"references": ["Filter", "Filter.Eventually", "Eq"],
  "name": "Filter.EventuallyEq",
  "constType":
  "{α : Type u} → {β : Type v} → Filter α → (α → β) → (α → β) → Prop",
  "constCategory": "Definition"},
 {"references":
  ["NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "AddCommMonoid.add_comm",
   "NonAssocSemiring.natCast_zero",
   "NonAssocSemiring.toOne",
   "NonAssocSemiring.toNatCast",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "AddMonoidWithOne.mk",
   "AddCommMonoidWithOne",
   "NonAssocSemiring.natCast_succ",
   "AddCommMonoidWithOne.mk",
   "NonAssocSemiring"],
  "name": "NonAssocSemiring.toAddCommMonoidWithOne",
  "constType":
  "{α : Type u} → [self : NonAssocSemiring α] → AddCommMonoidWithOne α",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalNonAssocRing.toHasDistribNeg.proof_2",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalNonAssocRing",
   "SubNegMonoid.toNeg",
   "HasDistribNeg.mk",
   "HasDistribNeg",
   "AddCommGroup.toAddGroup",
   "Neg.neg",
   "NonUnitalNonAssocRing.toHasDistribNeg.proof_1",
   "AddGroup.toSubNegMonoid",
   "InvolutiveNeg.mk",
   "NonUnitalNonAssocRing.toHasDistribNeg.proof_3",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "Neg.mk"],
  "name": "NonUnitalNonAssocRing.toHasDistribNeg",
  "constType":
  "{α : Type u} → [inst : NonUnitalNonAssocRing α] → HasDistribNeg α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "NoZeroDivisors",
   "instHMul",
   "mul_eq_zero",
   "Or",
   "OfNat.ofNat",
   "propext",
   "HMul.hMul",
   "MulZeroClass.toZero",
   "MulZeroClass",
   "MulZeroClass.toMul",
   "Eq"],
  "name": "Mathlib.Algebra.GroupWithZero.Defs._auxLemma.1",
  "constType":
  "∀ {M₀ : Type u_1} [inst : MulZeroClass M₀] [inst_1 : NoZeroDivisors M₀] {a b : M₀}, (a * b = 0) = (a = 0 ∨ b = 0)",
  "constCategory": "Theorem"},
 {"references":
  ["Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder.proof_2",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "StarOrderedRing",
   "Real.partialOrder",
   "CommRing.toNonUnitalCommRing",
   "Real",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder.proof_1",
   "Real.commRing",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Real.instStarRingRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "StarOrderedRing.ofNonnegIff'",
   "NonUnitalCommRing.toNonUnitalRing"],
  "name":
  "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
  "constType": "StarOrderedRing ℝ",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "Int.instSubInt",
   "instOfNatInt",
   "Subtype.val",
   "CommRing.toNonUnitalCommRing",
   "Eq.refl",
   "instDecidableEqFin",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Eq",
   "Matrix.det",
   "Eq.mpr",
   "Matrix",
   "Ring.toSub",
   "instOfNatNat",
   "Nat",
   "Eq.symm",
   "Int.instCommRingInt",
   "id",
   "instHSub",
   "NeZero.succ",
   "Matrix.SpecialLinearGroup.det_coe",
   "NonUnitalNonAssocRing.toMul",
   "Int.instMulInt",
   "HSub.hSub",
   "One.toOfNat1",
   "Fin.fintype",
   "Matrix.det_fin_two",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "instHMul",
   "Eq.ndrec",
   "Matrix.SpecialLinearGroup",
   "Eq.mp",
   "letFun",
   "CommRing.toRing",
   "HMul.hMul",
   "Fin.instOfNatFin",
   "congrArg",
   "Int",
   "Fin",
   "congrFun"],
  "name": "EisensteinSeries.det_SL_eq_one",
  "constType":
  "∀ (M : Matrix.SpecialLinearGroup (Fin 2) ℤ), ↑M 0 0 * ↑M 1 1 - ↑M 0 1 * ↑M 1 0 = 1",
  "constCategory": "Theorem"},
 {"references":
  ["Finset.card",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "OfNat.ofNat",
   "Int.instSubInt",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "instOfNatInt",
   "HAdd.hAdd",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing.proof_2",
   "Finset.Icc",
   "Int.linearOrderedCommRing",
   "Finset.card_map",
   "Eq",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing.proof_1",
   "Int.instRingInt",
   "Int.toNat",
   "Finset.range",
   "Nat",
   "Eq.trans",
   "instHSub",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "instHAdd",
   "HSub.hSub",
   "addLeftEmbedding",
   "Finset.card_range",
   "Nat.castEmbedding",
   "Function.Embedding.trans",
   "Int.instAddInt",
   "Finset.map",
   "Int"],
  "name": "Int.card_Icc",
  "constType":
  "∀ (a b : ℤ), Finset.card (Finset.Icc a b) = Int.toNat (b + 1 - a)",
  "constCategory": "Theorem"},
 {"references":
  ["IsDomain.toIsCancelMulZero",
   "DivisionSemiring.toSemiring",
   "DivisionRing.toDivisionSemiring",
   "IsDomain.mk",
   "IsDomain",
   "Field",
   "Field.toSemifield",
   "IsDomain.toNontrivial",
   "Semifield.toDivisionSemiring",
   "Field.toDivisionRing",
   "DivisionRing.isDomain"],
  "name": "Field.isDomain",
  "constType": "∀ {K : Type u_3} [inst : Field K], IsDomain K",
  "constCategory": "Definition"},
 {"references": ["String", "Lean.Name", "Lean.Name.anonymous", "Lean.Name.str"],
  "name": "Lean.Name.mkStr2",
  "constType": "String → String → Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "instOfNatInt",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "Nat.cast_zero",
   "Eq",
   "Zero.toOfNat0",
   "Complex.Complex.addGroupWithOne",
   "Complex.instSemiringComplex",
   "Eq.mpr",
   "IsDomain.to_noZeroDivisors",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "linear_ne_zero'",
   "Complex.instField",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Ring.toIntCast",
   "AddMonoid.toZero",
   "Monoid.toNatPow",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Eq.symm",
   "Eq.trans",
   "id",
   "HPow.hPow",
   "Ne",
   "Complex.instZeroComplex",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "UpperHalfPlane.coe",
   "Complex.instRingComplex",
   "Complex.instAddComplex",
   "pow_ne_zero",
   "Field.isDomain",
   "instHMul",
   "Int.cast",
   "HMul.hMul",
   "Complex",
   "Not",
   "congrArg",
   "Int",
   "Complex.instMulComplex"],
  "name": "pow_linear_ne_zero'",
  "constType":
  "∀ (c d : ℤ) (z : UpperHalfPlane), c ≠ 0 → ∀ (k : ℕ), (↑c * ↑z + ↑d) ^ k ≠ 0",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem", "Set.Elem", "Subtype.val", "Set", "Set.instMembershipSet"],
  "name": "Set.restrict",
  "constType":
  "{α : Type u_1} → {π : α → Type u_5} → (s : Set α) → ((a : α) → π a) → (a : ↑s) → π ↑a",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toRing",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "LinearOrderedRing.toStrictOrderedRing",
   "Semiring.toMonoidWithZero",
   "Abs.abs",
   "Eq",
   "Eq.mpr",
   "LinearOrderedRing.toLinearOrder",
   "Ring.toNeg",
   "SemilatticeSup.toSup",
   "MonoidWithZero.toMonoid",
   "LinearOrderedRing",
   "sq",
   "instHPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "Lattice.toSemilatticeSup",
   "id",
   "Neg.toHasAbs",
   "HPow.hPow",
   "instDistribLattice",
   "StrictOrderedSemiring.toSemiring",
   "Monoid.toMulOneClass",
   "DistribLattice.toLattice",
   "instHMul",
   "abs_mul_abs_self",
   "HMul.hMul",
   "congr",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "congrArg"],
  "name": "sq_abs",
  "constType":
  "∀ {R : Type u_2} [inst : LinearOrderedRing R] (x : R), |x| ^ 2 = x ^ 2",
  "constCategory": "Theorem"},
 {"references":
  ["Monad",
   "EStateM",
   "Function.comp",
   "Unit",
   "Function.const",
   "Functor.mk",
   "Monad.mk",
   "Applicative.mk",
   "EStateM.seqRight",
   "EStateM.bind",
   "EStateM.pure",
   "Pure.mk",
   "Unit.unit",
   "Seq.mk",
   "SeqRight.mk",
   "EStateM.map",
   "Bind.mk",
   "SeqLeft.mk"],
  "name": "EStateM.instMonadEStateM",
  "constType": "{ε σ : Type u} → Monad (EStateM ε σ)",
  "constCategory": "Definition"},
 {"references": ["Real", "Complex"],
  "name": "Complex.re",
  "constType": "ℂ → ℝ",
  "constCategory": "Definition"},
 {"references": ["Union"],
  "name": "Union.union",
  "constType": "{α : Type u} → [self : Union α] → α → α → α",
  "constCategory": "Definition"},
 {"references": ["IsCancelAdd", "Add", "IsLeftCancelAdd"],
  "name": "IsCancelAdd.toIsLeftCancelAdd",
  "constType":
  "∀ {G : Type u} [inst : Add G] [self : IsCancelAdd G], IsLeftCancelAdd G",
  "constCategory": "Definition"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "AddCommMonoid.toAddMonoid",
   "CommMonoid.mul_comm",
   "CommMonoidWithZero",
   "CommSemiring.toCommMonoidWithZero.proof_1",
   "CommSemiring.toCommMonoidWithZero.proof_2",
   "CommMonoid",
   "CommSemiring",
   "AddMonoid.toZero",
   "inferInstanceAs",
   "CommSemiring.toCommMonoid",
   "CommMonoidWithZero.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "CommMonoid.toMonoid",
   "CommMonoid.mk",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring"],
  "name": "CommSemiring.toCommMonoidWithZero",
  "constType": "{α : Type u} → [inst : CommSemiring α] → CommMonoidWithZero α",
  "constCategory": "Definition"},
 {"references": ["OfNat", "OfNat.mk", "Nat"],
  "name": "instOfNatNat",
  "constType": "(n : ℕ) → OfNat ℕ n",
  "constCategory": "Definition"},
 {"references":
  ["Equiv",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Subtype.val",
   "Eq.refl",
   "instDecidableEqFin",
   "Matrix.SpecialLinearGroup.ext",
   "CommRing",
   "Eq",
   "Matrix.det",
   "Eq.mpr",
   "Ring.toNeg",
   "Matrix.SpecialLinearGroup.coe_inv",
   "Matrix",
   "Matrix.SpecialLinearGroup.hasInv",
   "Matrix.SpecialLinearGroup.SL2_inv_expl_det",
   "instOfNatNat",
   "Nat",
   "id",
   "NeZero.succ",
   "Matrix.adjugate_fin_two",
   "One.toOfNat1",
   "Fin.fintype",
   "Neg.neg",
   "FunLike.coe",
   "Matrix.vecEmpty",
   "Matrix.adjugate",
   "Equiv.instFunLikeEquiv",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "Eq.ndrec",
   "Matrix.SpecialLinearGroup",
   "Matrix.of",
   "letFun",
   "Fin.instOfNatFin",
   "CommRing.toRing",
   "Matrix.vecCons",
   "Subtype.mk",
   "Fin",
   "Inv.inv"],
  "name": "Matrix.SpecialLinearGroup.SL2_inv_expl",
  "constType":
  "∀ {R : Type v} [inst : CommRing R] (A : Matrix.SpecialLinearGroup (Fin 2) R),\n  A⁻¹ =\n    { val := ![![↑A 1 1, -↑A 0 1], ![-↑A 1 0, ↑A 0 0]],\n      property := (_ : Matrix.det ![![↑A 1 1, -↑A 0 1], ![-↑A 1 0, ↑A 0 0]] = 1) }",
  "constCategory": "Theorem"},
 {"references": ["eq_false", "False", "Eq"],
  "name": "eq_false'",
  "constType": "∀ {p : Prop}, (p → False) → p = False",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "AddCommSemigroup.toAddCommMagma",
   "Complex.instNormedFieldComplex",
   "Real.instFloorRingRealInstLinearOrderedRingReal",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "upper_half_plane_isOpen",
   "Real.instAddMonoidReal",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Iff.mpr",
   "Real.orderedRing",
   "AddGroupWithOne.toAddGroup",
   "Nat.cast_zero",
   "UpperHalfPlane.re",
   "Complex.abs_ofReal",
   "Real.linearOrder",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "SemilatticeSup.toSup",
   "Nat.cast",
   "Int.normedCommRing",
   "Mathlib.Tactic.Ring.neg_congr",
   "Mathlib.Data.Int.Basic._auxLemma.1",
   "Int.cast_neg",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "HSMul.hSMul",
   "HasDistribNeg.toInvolutiveNeg",
   "LinearOrderedField.toLinearOrderedSemifield",
   "UpperHalfPlane.upperHalfSpace",
   "Std.Classes.Order._auxLemma.3",
   "HDiv.hDiv",
   "InvOneClass.toInv",
   "Int.instCommRingInt",
   "Subtype",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "add_comm",
   "instHDiv",
   "instDistribLattice",
   "PseudoMetricSpace.toUniformSpace",
   "UpperHalfPlane.coe",
   "Real.instRingReal",
   "UpperHalfPlane.modular_T_zpow_smul",
   "Real.instAddCommSemigroupReal",
   "Real.normedCommRing",
   "CommGroupWithZero.toCommMonoidWithZero",
   "AddCommMagma.toAdd",
   "instHVAdd",
   "SubadditiveHomClass.toFunLike",
   "le_abs_self",
   "Complex.im",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "And",
   "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "congr",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "And.intro",
   "Field.toDivisionRing",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "Fin",
   "Inv.inv",
   "congrFun",
   "Group.toDivisionMonoid",
   "Exists",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "Mathlib.Data.Int.Cast.Lemmas._auxLemma.8",
   "instOfNatInt",
   "Subtype.val",
   "Real",
   "Set",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "LinearOrderedField.toLinearOrderedCommRing",
   "GE.ge",
   "Int.rawCast",
   "Eq.refl",
   "Mathlib.Tactic.Ring.sub_congr",
   "Exists.intro",
   "algebraInt",
   "TopologicalSpace.Opens.mk",
   "Abs.abs",
   "Mathlib.Tactic.Ring.sub_pf",
   "UpperHalfPlane.im",
   "Field.toCommRing",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "InvolutiveNeg.toNeg",
   "Eq.rec",
   "Monoid.toNatPow",
   "HVAdd.hVAdd",
   "Lattice.toSemilatticeSup",
   "UniformSpace.toTopologicalSpace",
   "neg_mul",
   "DivisionMonoid.toInvolutiveInv",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "UpperHalfPlane.vadd_im",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Neg.toHasAbs",
   "Complex.ofReal'",
   "Int.instMulInt",
   "NonUnitalNonAssocRing.toMul",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Ring.toAddGroupWithOne",
   "Real.instLinearOrderedRingReal",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Int.sub_floor_div_mul_nonneg",
   "Real.instLTReal",
   "Real.nontrivial",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.4",
   "Neg.neg",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "Real.instLinearOrderedAddCommGroupReal",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "ModularGroup.T",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "instNatCastInt",
   "Real.instPreorderReal",
   "Mathlib.Tactic.Ring.one_mul",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "Mathlib.Tactic.Ring.add_mul",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.mul_congr",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "OrderedAddCommGroup.toPartialOrder",
   "instHSMul",
   "Real.instSubReal",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.instMulReal",
   "Real.instLEReal",
   "AbsoluteValue",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "UpperHalfPlane.SLAction",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Real.instCommSemiringReal",
   "Ring.toIntCast",
   "Int.cast_mul",
   "UpperHalfPlane",
   "Nat",
   "Int.sub_floor_div_mul_lt",
   "Eq.trans",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.5",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Algebra.Group.Basic._auxLemma.13",
   "Nat.rawCast",
   "Fin.fintype",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.intCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Real.orderedSemiring",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instLTInt",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DistribLattice.toLattice",
   "Mathlib.Tactic.Ring.neg_mul",
   "Int.cast_zero",
   "instHMul",
   "Mathlib.Tactic.Ring.mul_zero",
   "NonAssocRing.toIntCast",
   "Mathlib.Tactic.Ring.of_eq",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "zpow_mul",
   "Int.cast",
   "DivInvOneMonoid.toInvOneClass",
   "Eq.mp",
   "zpow_neg",
   "AddAction.toVAdd",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.4",
   "congrArg",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "TopologicalSpace.Opens",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "LinearOrderedRing.toStrictOrderedRing",
   "DivisionRing.toRing",
   "CommRing.toNonUnitalCommRing",
   "AddGroupWithOne.toIntCast",
   "SeminormedRing.toPseudoMetricSpace",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "abs_eq_self",
   "Int.floor",
   "Ring.toNonAssocRing",
   "LinearOrderedField.toDiv",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "Preorder.toLT",
   "instHPow",
   "AddMonoid.toZero",
   "Ring.toSub",
   "Int.instNegInt",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "Membership.mem",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "LT.lt.le",
   "instHAdd",
   "HSub.hSub",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toNeg",
   "NonUnitalNonAssocSemiring.toMul",
   "Complex.re",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "LinearOrderedField.toField",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Group.toDivInvMonoid",
   "NegZeroClass.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.upp_half_translation_N",
  "constType":
  "∀ (z : UpperHalfPlane) (N : ℤ),\n  0 < N → ∃ n, (ModularGroup.T ^ N) ^ n • z ∈ EisensteinSeries.upperHalfSpaceSlice (↑N) (↑z).im",
  "constCategory": "Theorem"},
 {"references":
  ["StrictOrderedRing.toRing",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "OfNat.ofNat",
   "Int.floor_le",
   "LinearOrderedRing.toStrictOrderedRing",
   "PartialOrder.toPreorder",
   "Semiring.toMonoidWithZero",
   "AddGroup.toSubtractionMonoid",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.floor",
   "AddGroupWithOne.toAddGroup",
   "Preorder.toLE",
   "Iff.mpr",
   "Zero.toOfNat0",
   "Int.fract",
   "SubNegMonoid.toSub",
   "LinearOrderedRing",
   "Ring.toIntCast",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "StrictOrderedRing.toPartialOrder",
   "instHSub",
   "FloorRing",
   "Ring.toAddGroupWithOne",
   "HSub.hSub",
   "SubNegZeroMonoid.toNegZeroClass",
   "sub_nonneg",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "Int.cast",
   "StrictOrderedSemiring.toOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "MonoidWithZero.toZero",
   "NegZeroClass.toZero"],
  "name": "Int.fract_nonneg",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedRing α] [inst_1 : FloorRing α] (a : α), 0 ≤ Int.fract a",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "eq_true",
   "Subgroup.mem_top",
   "Top.top",
   "Subgroup.instTopSubgroup",
   "Subgroup",
   "Group",
   "True",
   "SetLike.instMembership",
   "Eq",
   "Subgroup.instSetLikeSubgroup"],
  "name": "Modformsported.ForMathlib.EisensteinSeries.ModularForm._auxLemma.1",
  "constType": "∀ {G : Type u_1} [inst : Group G] (x : G), (x ∈ ⊤) = True",
  "constCategory": "Theorem"},
 {"references":
  ["Nat.cast",
   "instLENat",
   "instNatCastInt",
   "propext",
   "Mathlib.Tactic.Zify.nat_cast_le",
   "Nat",
   "Int",
   "LE.le",
   "Int.instLEInt",
   "Eq"],
  "name": "Mathlib.Tactic.Zify._auxLemma.2",
  "constType": "∀ (a b : ℕ), (a ≤ b) = (↑a ≤ ↑b)",
  "constCategory": "Theorem"},
 {"references":
  ["Equiv",
   "T2Space",
   "TopologicalSpace",
   "tsum",
   "FunLike.coe",
   "tsum_eq_tsum_of_hasSum_iff_hasSum",
   "Equiv.hasSum_iff",
   "Eq",
   "Equiv.instFunLikeEquiv",
   "AddCommMonoid"],
  "name": "Equiv.tsum_eq",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} {γ : Type u_3} [inst : AddCommMonoid α] [inst_1 : TopologicalSpace α]\n  [inst_2 : T2Space α] (j : γ ≃ β) (f : β → α), ∑' (c : γ), f (j c) = ∑' (b : β), f b",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "Real.instMulReal",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "instHPow",
   "Real.instPowReal",
   "Real.rpow_def_of_pos",
   "Real.exp_add",
   "Eq.trans",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "eq_self",
   "HPow.hPow",
   "mul_add",
   "Real.instLTReal",
   "instHAdd",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.normedCommRing",
   "Real.exp",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Real.instZeroReal",
   "Distrib.leftDistribClass",
   "instHMul",
   "NormedCommRing.toSeminormedCommRing",
   "Real.log",
   "of_eq_true",
   "LT.lt",
   "HMul.hMul",
   "congr",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "congrArg"],
  "name": "Real.rpow_add",
  "constType": "∀ {x : ℝ}, 0 < x → ∀ (y z : ℝ), x ^ (y + z) = x ^ y * x ^ z",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0", "Zero", "OfNat.ofNat", "LT.lt", "LT", "GT.gt"],
  "name": "lt_zero_of_zero_gt",
  "constType":
  "∀ {α : Type u_1} [inst : Zero α] [inst_1 : LT α] {a : α}, 0 > a → a < 0",
  "constCategory": "Theorem"},
 {"references":
  ["NormedLatticeAddCommGroup.mk",
   "instHasSolidNormRealNormedAddCommGroupLattice",
   "Real.normedLatticeAddCommGroup.proof_1",
   "Real.lattice",
   "Real",
   "NormedLatticeAddCommGroup",
   "Real.normedAddCommGroup"],
  "name": "Real.normedLatticeAddCommGroup",
  "constType": "NormedLatticeAddCommGroup ℝ",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "Ring.toAddGroupWithOne",
   "AddGroup",
   "Real",
   "Real.instRingReal",
   "AddGroupWithOne.toAddGroup"],
  "name": "Real.instAddGroupReal",
  "constType": "AddGroup ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.instLTReal",
   "UpperHalfPlane.mk",
   "Real",
   "LT.lt",
   "UpperHalfPlane.coe",
   "Complex",
   "rfl",
   "Eq"],
  "name": "UpperHalfPlane.coe_mk",
  "constType": "∀ (z : ℂ) (h : 0 < z.im), ↑(UpperHalfPlane.mk z h) = z",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "PartialEquiv.source",
   "PartialHomeomorph.toPartialEquiv",
   "Set",
   "PartialHomeomorph",
   "TopologicalSpace",
   "PartialHomeomorph.symm",
   "PartialHomeomorph.toFun'",
   "PartialEquiv.left_inv'",
   "Eq",
   "Set.instMembershipSet"],
  "name": "PartialHomeomorph.left_inv",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] (e : PartialHomeomorph α β)\n  {x : α}, x ∈ e.source → ↑(PartialHomeomorph.symm e) (↑e x) = x",
  "constCategory": "Theorem"},
 {"references": ["trivial", "Eq.rec", "Eq.symm", "True", "Eq"],
  "name": "of_eq_true",
  "constType": "∀ {p : Prop}, p = True → p",
  "constCategory": "Theorem"},
 {"references":
  ["Array", "Lean.SyntaxNodeKinds", "Lean.TSyntaxArray", "Lean.Syntax"],
  "name": "Lean.TSyntaxArray.mk",
  "constType":
  "{ks : Lean.SyntaxNodeKinds} → Array Lean.Syntax → Lean.TSyntaxArray ks",
  "constCategory": "Other"},
 {"references": ["Zero", "MulZeroOneClass"],
  "name": "MulZeroOneClass.toZero",
  "constType": "{M₀ : Type u} → [self : MulZeroOneClass M₀] → Zero M₀",
  "constCategory": "Definition"},
 {"references": ["HasSubset"],
  "name": "HasSubset.Subset",
  "constType": "{α : Type u} → [self : HasSubset α] → α → α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "instHSub",
   "AddZeroClass.toAdd",
   "Ring.toAddGroupWithOne",
   "instHAdd",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "HSub.hSub",
   "Neg.neg",
   "sub_eq_add_neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddMonoid.toAddZeroClass",
   "AddGroup.toSubNegMonoid",
   "Ring.toNonAssocRing",
   "AddGroupWithOne.toAddGroup",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq",
   "SubNegMonoid.toSub",
   "Ring.toNeg",
   "Ring.toSub",
   "Ring",
   "SubNegMonoid.toAddMonoid",
   "Eq.symm"],
  "name": "Mathlib.Tactic.RingNF.add_neg",
  "constType": "∀ {R : Type u_1} [inst : Ring R] (a b : R), a + -b = a - b",
  "constCategory": "Theorem"},
 {"references":
  ["Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "SlashInvariantForm",
   "instDecidableEqFin",
   "Subgroup",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "ModularForm",
   "Int.instCommRingInt",
   "Fin"],
  "name": "ModularForm.toSlashInvariantForm",
  "constType":
  "{Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)} → {k : ℤ} → ModularForm Γ k → SlashInvariantForm Γ k",
  "constCategory": "Definition"},
 {"references":
  ["Eq.ndrec",
   "propext",
   "Continuous",
   "Set",
   "Eq.mp",
   "Eq.refl",
   "TopologicalSpace",
   "continuous_iff_continuousOn_univ",
   "ContinuousOn.mono",
   "ContinuousOn",
   "Set.univ",
   "Set.subset_univ",
   "Eq"],
  "name": "Continuous.continuousOn",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} [inst : TopologicalSpace α] [inst_1 : TopologicalSpace β] {f : α → β} {s : Set α},\n  Continuous f → ContinuousOn f s",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "OfNat.ofNat",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Eq.refl",
   "One.toOfNat1",
   "AddMonoid.toAddZeroClass",
   "Nat.cast_zero",
   "Eq",
   "Zero.toOfNat0",
   "zero_add",
   "AddZeroClass.toZero",
   "AddMonoidWithOne",
   "Eq.mpr",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Eq.ndrec",
   "AddMonoidWithOne.toOne",
   "AddMonoid.toAddSemigroup",
   "AddMonoid.toZero",
   "Nat.cast_succ",
   "instOfNatNat",
   "Nat",
   "Nat.succ",
   "id"],
  "name": "Nat.cast_one",
  "constType": "∀ {R : Type u_1} [inst : AddMonoidWithOne R], ↑1 = 1",
  "constCategory": "Theorem"},
 {"references": ["NormedRing", "Ring"],
  "name": "NormedRing.toRing",
  "constType": "{α : Type u_5} → [self : NormedRing α] → Ring α",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "Eq"],
  "name": "Eq.trans",
  "constType": "∀ {α : Sort u} {a b c : α}, a = b → b = c → a = c",
  "constCategory": "Theorem"},
 {"references":
  ["DivisionMonoid",
   "instHMul",
   "MulOneClass.toMul",
   "DivisionMonoid.mul_inv_rev",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toInv",
   "Inv.inv",
   "Eq"],
  "name": "mul_inv_rev",
  "constType":
  "∀ {G : Type u_1} [inst : DivisionMonoid G] (a b : G), (a * b)⁻¹ = b⁻¹ * a⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["Semigroup.toMul",
   "Monoid.toSemigroup",
   "instHDiv",
   "MulOneClass.toMul",
   "div_eq_mul_inv",
   "DivInvMonoid",
   "Eq.refl",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Eq",
   "DivInvMonoid.toInv",
   "instHMul",
   "mul_assoc",
   "Eq.mpr",
   "Eq.ndrec",
   "HMul.hMul",
   "HDiv.hDiv",
   "DivInvMonoid.toDiv",
   "Inv.inv",
   "id"],
  "name": "mul_div_assoc",
  "constType":
  "∀ {G : Type u_3} [inst : DivInvMonoid G] (a b c : G), a * b / c = a * (b / c)",
  "constCategory": "Theorem"},
 {"references":
  ["Iff.intro", "Or", "Or.inl", "False", "propext", "or_false.match_1", "Eq"],
  "name": "or_false",
  "constType": "∀ (p : Prop), (p ∨ False) = p",
  "constCategory": "Theorem"},
 {"references": ["PartialHomeomorph", "ChartedSpace", "TopologicalSpace"],
  "name": "ChartedSpace.chartAt",
  "constType":
  "{H : Type u_5} →\n  [inst : TopologicalSpace H] →\n    {M : Type u_6} → [inst_1 : TopologicalSpace M] → [self : ChartedSpace H M] → M → PartialHomeomorph M H",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Metric.closedBall",
   "upper_half_plane_isOpen",
   "Real.instLEReal",
   "Exists.casesOn",
   "implies_congr",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Eq",
   "Dist.dist",
   "Mathlib.Data.Subtype._auxLemma.1",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "Set.Elem",
   "Finset.range",
   "EisensteinSeries.eisenSquare'",
   "EisensteinSeries.Eisen_partial_tends_to_uniformly",
   "Filter",
   "UpperHalfPlane.upperHalfSpace",
   "Std.Classes.Order._auxLemma.3",
   "Nat",
   "Finset.sum_congr",
   "EisensteinSeries.eisenParSumSlice",
   "And.casesOn",
   "Eq.trans",
   "SemilatticeSup.toPartialOrder",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Subtype",
   "Nat.strictOrderedSemiring",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "HasSubset.Subset",
   "Finset.instMembershipFinset",
   "Nat.instLatticeNat",
   "Filter.Eventually",
   "Mathlib.Order.Filter.AtTopBot._auxLemma.4",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.6",
   "Set.instMembershipSet",
   "And",
   "forall_prop_domain_congr",
   "eq_true",
   "Std.Classes.Order._auxLemma.4",
   "of_eq_true",
   "Mathlib.Topology.Sets.Opens._auxLemma.1",
   "LT.lt",
   "Eq.mp",
   "instInhabitedNat",
   "congr",
   "Filter.atTop",
   "congrArg",
   "Int",
   "Int.instLEInt",
   "EisensteinSeries.eisenSquareSlice",
   "congrFun",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.21",
   "Exists",
   "TopologicalSpace.Opens",
   "instOfNatInt",
   "Subtype.val",
   "Set",
   "Real",
   "GE.ge",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "TendstoUniformlyOn",
   "Exists.intro",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "TopologicalSpace.Opens.mk",
   "True",
   "Zero.toOfNat0",
   "Subtype.pseudoMetricSpace",
   "TendstoUniformly",
   "EisensteinSeries.closedBall_in_slice",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.10",
   "Eisenstein_tsum",
   "forall_congr",
   "Eq.substr",
   "EisensteinSeries.eisenSquare",
   "Finset",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.22",
   "Lattice.toSemilatticeSup",
   "UniformSpace.toTopologicalSpace",
   "instNonempty",
   "id",
   "Membership.mem",
   "funext",
   "LT.lt.le",
   "Real.instLTReal",
   "Finset.sum",
   "TendstoUniformly.tendstoUniformlyOn",
   "NormedField.toNormedCommRing",
   "LE.le",
   "GT.gt",
   "Real.instZeroReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "Set.instHasSubsetSet",
   "PseudoMetricSpace.toDist",
   "StrictOrderedSemiring.toPartialOrder",
   "dist_self",
   "EisensteinSeries.eisensteinSeriesRestrict",
   "Real.instPreorderReal",
   "letFun",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Subtype.mk"],
  "name": "EisensteinSeries.Eisen_partial_tends_to_uniformly_on_ball",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (z : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }),\n      ∃ A B ε,\n        0 < ε ∧\n          Metric.closedBall z ε ⊆ EisensteinSeries.upperHalfSpaceSlice A B ∧\n            0 < B ∧\n              ε < B ∧\n                TendstoUniformlyOn (EisensteinSeries.eisenSquare' k) (Eisenstein_tsum k) Filter.atTop\n                  (Metric.closedBall z ε)",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "instDecidableEqFin",
   "Prod",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "EisensteinSeries.MoebiusPerm",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "EisensteinSeries.MoebiusEquiv._elambda_2._cstage1",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ → ℤ × ℤ → ℤ × ℤ",
  "constCategory": "Definition"},
 {"references":
  ["CommRing.toCommSemiring",
   "inferInstance",
   "Real",
   "CommSemiring",
   "Real.commRing"],
  "name": "Real.instCommSemiringReal",
  "constType": "CommSemiring ℝ",
  "constCategory": "Definition"},
 {"references": ["DecidableEq", "Int.decEq", "Int"],
  "name": "Int.instDecidableEqInt",
  "constType": "DecidableEq ℤ",
  "constCategory": "Definition"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "AddCommGroup.toDivisionAddCommMonoid",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "OrderedAddCommGroup.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "PartialOrder.toPreorder",
   "Finset.instSProd",
   "Int.linearOrderedAddCommGroup",
   "Finset.Icc",
   "Int.instMaxInt",
   "Int.linearOrderedCommRing",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "True",
   "Preorder.toLE",
   "Abs.abs",
   "iff_self",
   "Mathlib.Order.MinMax._auxLemma.4",
   "Iff",
   "SemilatticeSup.toSup",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "SProd.sprod",
   "Finset",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "Lattice.toSemilatticeSup",
   "Eq.trans",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "StrictOrderedRing.toPartialOrder",
   "Membership.mem",
   "Neg.toHasAbs",
   "Prod.snd",
   "Lattice.toSemilatticeInf",
   "instDistribLattice",
   "SemilatticeInf.toPartialOrder",
   "Neg.neg",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "DistribLattice.toLattice",
   "And",
   "Mathlib.Order.LocallyFinite._auxLemma.1",
   "of_eq_true",
   "Max.max",
   "LinearOrder.toMax",
   "congr",
   "Prod",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.1",
   "Mathlib.Data.Finset.Prod._auxLemma.1",
   "congrArg",
   "NegZeroClass.toNeg",
   "Int",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name": "EisensteinSeries.mem_square_aux",
  "constType":
  "∀ {m : ℤ} {i : ℤ × ℤ}, i ∈ Finset.Icc (-m) m ×ˢ Finset.Icc (-m) m ↔ max |i.1| |i.2| ≤ m",
  "constCategory": "Theorem"},
 {"references":
  ["Finset.mem_singleton",
   "Membership.mem",
   "propext",
   "Finset",
   "Singleton.singleton",
   "Finset.instMembershipFinset",
   "Eq",
   "Finset.instSingletonFinset"],
  "name": "Modformsported.ForMathlib.EisensteinSeries.summable._auxLemma.6",
  "constType": "∀ {α : Type u_1} {a b : α}, (b ∈ {a}) = (b = a)",
  "constCategory": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "OfNat.ofNat",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "AddMonoidWithOne.toOne",
   "instAddNat",
   "AddMonoid.toAddSemigroup",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HAdd.hAdd",
   "Nat.cast_succ",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "instOfNatNat",
   "Nat",
   "Eq"],
  "name": "Nat.cast_add_one",
  "constType":
  "∀ {R : Type u_1} [inst : AddMonoidWithOne R] (n : ℕ), ↑(n + 1) = ↑n + 1",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "OfNat.ofNat",
   "Real.isROrC.proof_5",
   "instCompleteSpaceRealToUniformSpacePseudoMetricSpace",
   "Real.normedField",
   "Real",
   "Real.instAddMonoidReal",
   "AddCommMonoid.toAddMonoid",
   "DenselyNormedField.toNormedField",
   "IsROrC",
   "AddMonoid.toAddZeroClass",
   "Real.decidableEq",
   "Field.toCommRing",
   "NormedField.toField",
   "Zero.toOfNat0",
   "Real.isROrC.proof_3",
   "Real.isROrC.proof_1",
   "Real.isROrC.proof_9",
   "Real.isROrC.proof_7",
   "Real.isROrC.proof_12",
   "Real.isROrC.proof_10",
   "Real.isROrC.proof_11",
   "Real.isROrC.proof_2",
   "AddMonoidHom.id",
   "Real.denselyNormedField",
   "instZeroAddMonoidHom",
   "Real.isROrC.proof_6",
   "Real.partialOrder",
   "Ring.toSemiring",
   "Real.instStarRingRealToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "Real.isROrC.proof_4",
   "Real.instZeroReal",
   "Real.isROrC.proof_13",
   "CommRing.toRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "IsROrC.mk",
   "Real.isROrC.proof_8",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "AddMonoidHom",
   "NormedAlgebra.id"],
  "name": "Real.isROrC",
  "constType": "IsROrC ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "OfNat.ofNat",
   "Neg.neg",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg",
   "NegZeroClass",
   "NegZeroClass.neg_zero",
   "Eq"],
  "name": "neg_zero",
  "constType": "∀ {G : Type u_1} [inst : NegZeroClass G], -0 = 0",
  "constCategory": "Theorem"},
 {"references": ["_obj"],
  "name": "EisensteinSeries.sliceCoe._rarg._cstage2",
  "constType": "_obj → _obj",
  "constCategory": "Definition"},
 {"references": ["HSMul", "HSMul.mk", "SMul", "SMul.smul"],
  "name": "instHSMul",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → [inst : SMul α β] → HSMul α β β",
  "constCategory": "Definition"},
 {"references":
  ["Min.min",
   "DistribLattice.toLattice",
   "And",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "Preorder.toLT",
   "propext",
   "instDistribLattice",
   "LT.lt",
   "LinearOrder.toMin",
   "SemilatticeInf.toPartialOrder",
   "lt_min_iff",
   "Eq"],
  "name": "Modformsported.ForMathlib.EisensteinSeries.bounds._auxLemma.1",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b c : α}, (a < min b c) = (a < b ∧ a < c)",
  "constCategory": "Theorem"},
 {"references": ["Subtype"],
  "name": "Subtype.mk",
  "constType": "{α : Sort u} → {p : α → Prop} → (val : α) → p val → Subtype p",
  "constCategory": "Other"},
 {"references": ["NegZeroClass", "Neg"],
  "name": "NegZeroClass.toNeg",
  "constType": "{G : Type u_2} → [self : NegZeroClass G] → Neg G",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "Semifield.zpow_zero'",
   "DivisionSemiring",
   "Semifield.toNontrivial",
   "Semifield.toCommSemiring",
   "DivisionSemiring.mk",
   "Semifield.zpow_succ'",
   "Semifield.div_eq_mul_inv",
   "Semifield.mul_inv_cancel",
   "Semifield.zpow_neg'",
   "Semifield.zpow",
   "Semifield.toDiv",
   "Semifield.toInv",
   "Semifield",
   "Semifield.inv_zero"],
  "name": "Semifield.toDivisionSemiring",
  "constType": "{α : Type u_4} → [self : Semifield α] → DivisionSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["instDecidableFalse",
   "False",
   "instDecidableNot",
   "Bool.true",
   "of_decide_eq_true",
   "Eq.refl",
   "Not",
   "Bool",
   "instDecidableIff",
   "instDecidableTrue",
   "instDecidableEqProp",
   "True",
   "Eq"],
  "name": "not_true_eq_false",
  "constType": "(¬True) = False",
  "constCategory": "Theorem"},
 {"references": ["DivisionMonoid", "DivInvMonoid"],
  "name": "DivisionMonoid.toDivInvMonoid",
  "constType": "{G : Type u} → [self : DivisionMonoid G] → DivInvMonoid G",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "OfNat.ofNat",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "MulZeroClass.zero_mul",
   "NonUnitalNonAssocSemiring.toMul",
   "MulZeroClass.toMul",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "HMul.hMul",
   "MulZeroClass.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.zero_mul",
  "constType": "∀ {R : Type u_1} [inst : CommSemiring R] (b : R), 0 * b = 0",
  "constCategory": "Theorem"},
 {"references":
  ["Int.cast_one",
   "Mathlib.Meta.NormNum.IsRat.casesOn",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Int.cast_add",
   "Invertible",
   "MulZeroClass.toMul",
   "Iff.mpr",
   "Eq",
   "Semiring.toNatCast",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "Nat",
   "mul_inv_rev",
   "Eq.trans",
   "GroupWithZero.toInv",
   "Ne",
   "Invertible.invOf",
   "DivisionRing",
   "DivisionSemiring.toGroupWithZero",
   "Nat.cast_ne_zero",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "MulZeroOneClass.toMulZeroClass",
   "DivisionRing.toInv",
   "Int.cast_ofNat",
   "DivInvMonoid.toInv",
   "MonoidWithZero.toMulZeroOneClass",
   "instHMul",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "Int.cast",
   "congr",
   "congrArg",
   "Int",
   "congrFun",
   "Inv.inv",
   "Int.ofNat",
   "DivisionRing.toDivisionSemiring",
   "instOfNatInt",
   "DivisionRing.toRing",
   "AddGroupWithOne.toIntCast",
   "GroupWithZero.toDivisionMonoid",
   "True",
   "Ring.toNonAssocRing",
   "invertibleOfNonzero",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Nat.cast_succ",
   "AddMonoid.toZero",
   "Nat.succ_ne_zero",
   "instOfNatNat",
   "InvolutiveInv.toInv",
   "Eq.symm",
   "DivisionMonoid.toInvolutiveInv",
   "Nat.succ",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "instHAdd",
   "AddSemigroup.toAdd",
   "Mathlib.Meta.NormNum.IsRat",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "inv_inv",
   "Mathlib.Meta.NormNum.IsRat.mk",
   "Ring.toSemiring",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "Monoid.toMulOneClass",
   "invOf_eq_inv",
   "Semiring.toOne",
   "Eq.ndrec",
   "CharZero",
   "instNatCastInt",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul"],
  "name": "Mathlib.Meta.NormNum.isRat_inv_pos",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionRing α] [inst_1 : CharZero α] {a : α} {n d : ℕ},\n  Mathlib.Meta.NormNum.IsRat a (Int.ofNat (Nat.succ n)) d → Mathlib.Meta.NormNum.IsRat a⁻¹ (Int.ofNat d) (Nat.succ n)",
  "constCategory": "Theorem"},
 {"references":
  ["StrictOrderedRing.toRing",
   "Int.ofNat",
   "OfNat.ofNat",
   "Nat.abs_cast",
   "LinearOrderedRing.toStrictOrderedRing",
   "AddGroupWithOne.toIntCast",
   "HAdd.hAdd",
   "Eq.refl",
   "Int.natAbs_negSucc",
   "Int.linearOrderedCommRing",
   "True",
   "Abs.abs",
   "Semiring.toNatCast",
   "Eq",
   "Eq.mpr",
   "LinearOrderedRing.toLinearOrder",
   "Nat.cast",
   "SemilatticeSup.toSup",
   "Ring.toNeg",
   "AddMonoidWithOne.toNatCast",
   "LinearOrderedRing",
   "AddMonoid.toAddSemigroup",
   "Nat.cast_succ",
   "Ring.toIntCast",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "Lattice.toSemilatticeSup",
   "Nat",
   "Eq.symm",
   "Nat.succ",
   "Eq.trans",
   "id",
   "eq_self",
   "Neg.toHasAbs",
   "Int.casesOn",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "AddSemigroup.toAdd",
   "instHAdd",
   "instDistribLattice",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "Int.abs_eq_natAbs",
   "StrictOrderedSemiring.toSemiring",
   "Int.cast_ofNat",
   "DistribLattice.toLattice",
   "Eq.ndrec",
   "AddMonoidWithOne.toOne",
   "instNatCastInt",
   "of_eq_true",
   "Int.negSucc",
   "Int.cast",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "congrArg",
   "Int",
   "Int.natAbs"],
  "name": "Int.cast_natAbs",
  "constType":
  "∀ {α : Type u_3} [inst : LinearOrderedRing α] (n : ℤ), ↑(Int.natAbs n) = ↑|n|",
  "constCategory": "Theorem"},
 {"references":
  ["UpperHalfPlane.IsBoundedAtImInfty",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "NormedAlgebra.toAlgebra",
   "Subgroup.instTopSubgroup",
   "instDecidableEqFin",
   "SetLike.instMembership",
   "Eq",
   "Complex.Complex.addGroupWithOne",
   "trivial",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "SlashInvariantForm",
   "SlashInvariantForm.slash_action_eq'",
   "Subgroup",
   "UpperHalfPlane",
   "Nat",
   "Algebra.toSMul",
   "Int.instCommRingInt",
   "Subtype",
   "Pi.instSMul",
   "eq_of_heq",
   "Classical.propDecidable",
   "SlashInvariantForm.toFun",
   "Fin.fintype",
   "Pi.addMonoid",
   "ModularForm.subgroupAction",
   "Matrix.SpecialLinearGroup",
   "Subgroup.toGroup",
   "HEq.refl",
   "Int",
   "Int.instLEInt",
   "Fin",
   "NormedAlgebra.id",
   "EisensteinSeries.Eisenstein_is_bounded'",
   "Complex.instNormComplex",
   "HEq",
   "instOfNatInt",
   "SlashAction.map",
   "SlashInvariantFormClass.toFunLike",
   "Eq.refl",
   "EisensteinSeries.Eisenstein_SIF",
   "Complex.instSemiringComplex",
   "Norm",
   "outParam",
   "SlashInvariantFormClass.slashInvariantForm",
   "Decidable",
   "instOfNatNat",
   "Eq.symm",
   "id",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Complex.instCommSemiringComplex",
   "Top.top",
   "AddMonoidWithOne.toAddMonoid",
   "ModularForm.SLAction",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "LE.le",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "letFun",
   "Complex",
   "Eq.casesOn",
   "Subtype.mk",
   "Subgroup.instSetLikeSubgroup"],
  "name": "EisensteinSeries.Eisenstein_series_is_bounded",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (A : Matrix.SpecialLinearGroup (Fin 2) ℤ),\n      UpperHalfPlane.IsBoundedAtImInfty (SlashAction.map ℂ k A ⇑(EisensteinSeries.Eisenstein_SIF ⊤ k))",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "OfNat.ofNat",
   "Trans.trans",
   "instHAdd",
   "HAdd.hAdd",
   "add_lt_add_left",
   "Preorder",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "instTransEq_1",
   "Preorder.toLT",
   "LT.lt",
   "CovariantClass",
   "instTransLtToLTLeToLE",
   "add_zero",
   "AddZeroClass"],
  "name": "add_lt_of_le_of_neg",
  "constType":
  "∀ {α : Type u_1} [inst : AddZeroClass α] [inst_1 : Preorder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x < x_1] {a b c : α}, b ≤ c → a < 0 → b + a < c",
  "constCategory": "Theorem"},
 {"references":
  ["Field.zpow_succ'",
   "Field.zpow_zero'",
   "CommSemiring.mk",
   "Field.toSemifield.proof_1",
   "Field.toNontrivial",
   "Field.toInv",
   "Field.zpow",
   "Field.zpow_neg'",
   "Ring.toSemiring",
   "Semifield",
   "Field.toCommRing",
   "Field.mul_inv_cancel",
   "Field",
   "CommRing.toRing",
   "Field.inv_zero",
   "Semifield.mk",
   "Field.toDiv",
   "Field.div_eq_mul_inv"],
  "name": "Field.toSemifield",
  "constType": "{K : Type u_3} → [inst : Field K] → Semifield K",
  "constCategory": "Definition"},
 {"references":
  ["instHSub",
   "OrderedSub",
   "instHAdd",
   "propext",
   "HAdd.hAdd",
   "HSub.hSub",
   "tsub_le_iff_right",
   "LE",
   "Sub",
   "Add",
   "LE.le",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.9",
  "constType":
  "∀ {α : Type u_1} [inst : LE α] [inst_1 : Add α] [inst_2 : Sub α] [inst_3 : OrderedSub α] {a b c : α},\n  (a - b ≤ c) = (a ≤ c + b)",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Semigroup.toMul",
   "CommSemiring.toSemiring",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "CommSemiring.toNonUnitalCommSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "Eq",
   "SemigroupWithZero.toSemigroup",
   "instHMul",
   "mul_assoc",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Eq.ndrec",
   "MonoidWithZero.toMonoid",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instHPow",
   "CommSemiring",
   "NonUnitalSemiring.toSemigroupWithZero",
   "HMul.hMul",
   "Monoid.toNatPow",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Nat",
   "id"],
  "name": "Mathlib.Tactic.Ring.mul_pf_left",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a₃ b c : R} (a₁ : R) (a₂ : ℕ), a₃ * b = c → a₁ ^ a₂ * a₃ * b = a₁ ^ a₂ * c",
  "constCategory": "Theorem"},
 {"references":
  ["Filter.sets",
   "Membership.mem",
   "Set",
   "Filter",
   "Membership.mk",
   "Membership",
   "Set.instMembershipSet"],
  "name": "instMembershipSetFilter",
  "constType": "{α : Type u_1} → Membership (Set α) (Filter α)",
  "constCategory": "Definition"},
 {"references":
  ["Min.min",
   "OfNat.ofNat",
   "Modformsported.ForMathlib.EisensteinSeries.bounds._auxLemma.1",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Real",
   "Eq.refl",
   "EisensteinSeries.rfunct",
   "Nat.cast_zero",
   "Modformsported.ForMathlib.EisensteinSeries.bounds._auxLemma.2",
   "Eq",
   "Subtype.property",
   "Zero.toOfNat0",
   "Real.linearOrder",
   "Eq.mpr",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "instHPow",
   "Preorder.toLT",
   "AddMonoid.toZero",
   "upper_half_im_pow_pos",
   "LinearOrder.toMin",
   "Monoid.toNatPow",
   "UpperHalfPlane",
   "instOfNatNat",
   "Nat",
   "Eq.symm",
   "Eq.trans",
   "id",
   "_private.Modformsported.ForMathlib.EisensteinSeries.bounds.0.EisensteinSeries.rfunct._eq_1",
   "HPow.hPow",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Real.instLinearOrderedRingReal",
   "Real.instMonoidReal",
   "Lattice.toSemilatticeInf",
   "Real.instLTReal",
   "instDistribLattice",
   "AddMonoidWithOne.toAddMonoid",
   "SemilatticeInf.toPartialOrder",
   "Real.instRingReal",
   "Real.sqrt",
   "EisensteinSeries.lb",
   "DistribLattice.toLattice",
   "Complex.im",
   "Real.instZeroReal",
   "And",
   "Eq.ndrec",
   "LT.lt",
   "Eq.mp",
   "letFun",
   "EisensteinSeries.lb_pos",
   "congr",
   "Complex",
   "And.intro",
   "LinearOrderedRing.toMin",
   "congrArg",
   "congrFun"],
  "name": "EisensteinSeries.rfunct_pos",
  "constType": "∀ (z : UpperHalfPlane), 0 < EisensteinSeries.rfunct z",
  "constCategory": "Theorem"},
 {"references": ["Trans", "Trans.trans"],
  "name": "Trans.simple",
  "constType":
  "{α : Sort u_1} → {r : α → α → Sort u_2} → {a b c : α} → [inst : Trans r r r] → r a b → r b c → r a c",
  "constCategory": "Definition"},
 {"references": ["outParam", "HVAdd"],
  "name": "HVAdd.hVAdd",
  "constType":
  "{α : Type u} → {β : Type v} → {γ : outParam (Type w)} → [self : HVAdd α β γ] → α → β → γ",
  "constCategory": "Definition"},
 {"references":
  ["OrderedSemiring",
   "OrderedRing.toPartialOrder",
   "OrderedRing.toRing",
   "OrderedRing.toOrderedSemiring.proof_1",
   "Semiring",
   "OrderedRing",
   "OrderedRing.add_le_add_left",
   "OrderedSemiring.mk",
   "OrderedRing.toOrderedSemiring.proof_2",
   "Ring.toSemiring",
   "OrderedRing.zero_le_one"],
  "name": "OrderedRing.toOrderedSemiring",
  "constType": "{α : Type u} → [inst : OrderedRing α] → OrderedSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "ZeroLEOneClass",
   "OfNat.ofNat",
   "NeZero",
   "LE.le.lt_of_ne",
   "PartialOrder.toPreorder",
   "One",
   "Preorder.toLT",
   "LT.lt",
   "NeZero.ne'",
   "zero_le_one",
   "One.toOfNat1",
   "Preorder.toLE",
   "PartialOrder"],
  "name": "zero_lt_one",
  "constType":
  "∀ {α : Type u_1} [inst : Zero α] [inst_1 : One α] [inst_2 : PartialOrder α] [inst_3 : ZeroLEOneClass α]\n  [inst_4 : NeZero 1], 0 < 1",
  "constCategory": "Theorem"},
 {"references": ["Monoid", "Pow.mk", "Nat", "Pow", "Monoid.npow"],
  "name": "Monoid.toNatPow",
  "constType": "{M : Type u_2} → [inst : Monoid M] → Pow M ℕ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "instDecidableEqFin",
   "Prod",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "EisensteinSeries.MoebiusEquiv._elambda_2",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ → ℤ × ℤ → ℤ × ℤ",
  "constCategory": "Axiom"},
 {"references":
  ["CommSemiring.toSemiring",
   "inferInstance",
   "Complex.instCommSemiringComplex",
   "Semiring",
   "Complex"],
  "name": "Complex.instSemiringComplex",
  "constType": "Semiring ℂ",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toRing",
   "instHSub",
   "FloorRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedRing",
   "Int.cast",
   "Ring.toIntCast",
   "Ring.toSub",
   "HSub.hSub",
   "Int.floor"],
  "name": "Int.fract",
  "constType":
  "{α : Type u_2} → [inst : LinearOrderedRing α] → [inst : FloorRing α] → α → α",
  "constCategory": "Definition"},
 {"references":
  ["RingHomClass.toMonoidHomClass",
   "NonUnitalRingHomClass.mk",
   "MulZeroOneClass.toMulOneClass",
   "MonoidHomClass.toMulHomClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "RingHomClass",
   "RingHomClass.map_add",
   "NonAssocSemiring.toMulZeroOneClass",
   "RingHomClass.map_zero",
   "NonAssocSemiring",
   "NonUnitalRingHomClass"],
  "name": "RingHomClass.toNonUnitalRingHomClass",
  "constType":
  "{F : Type u_1} →\n  {α : Type u_2} →\n    {β : Type u_3} →\n      {x : NonAssocSemiring α} → {x_1 : NonAssocSemiring β} → [inst : RingHomClass F α β] → NonUnitalRingHomClass F α β",
  "constCategory": "Definition"},
 {"references": ["IsRightCancelAdd", "IsCancelAdd", "Add"],
  "name": "IsCancelAdd.toIsRightCancelAdd",
  "constType":
  "∀ {G : Type u} [inst : Add G] [self : IsCancelAdd G], IsRightCancelAdd G",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "MulOneClass.toMul",
   "Real.instMulReal",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "MulZeroClass.toMul",
   "Eq",
   "Eq.mpr",
   "Nat.cast",
   "DivisionCommMonoid.toDivisionMonoid",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Real.instInvReal",
   "Nat",
   "InvOneClass.toInv",
   "mul_inv_rev",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Nat.cast_one",
   "GroupWithZero.toInv",
   "instHSub",
   "HPow.hPow",
   "Ne",
   "DivisionSemiring.toGroupWithZero",
   "GroupWithZero.toDivInvMonoid",
   "MulZeroOneClass.toMulZeroClass",
   "DivInvMonoid.toInv",
   "MonoidWithZero.toMulZeroOneClass",
   "instHMul",
   "AddMonoidWithOne.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "Eq.mp",
   "congr",
   "mul_zpow",
   "zpow_neg",
   "DivisionMonoid.toDivInvOneMonoid",
   "congrArg",
   "Int",
   "Inv.inv",
   "congrFun",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "instOfNatInt",
   "Real",
   "Eq.refl",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "AddMonoidWithOne.toNatCast",
   "instHPow",
   "instOfNatNat",
   "Int.instNegInt",
   "InvolutiveInv.toInv",
   "DivisionMonoid.toInvolutiveInv",
   "Eq.symm",
   "CommGroupWithZero.toDivisionCommMonoid",
   "id",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "zpow_one",
   "HSub.hSub",
   "One.toOfNat1",
   "Neg.neg",
   "inv_inv",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "Monoid.toMulOneClass",
   "Real.instDivisionRingReal",
   "Real.instZeroReal",
   "Eq.ndrec",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "Semifield.toDivisionSemiring",
   "zpow_sub_one₀"],
  "name": "natpowsinv",
  "constType": "∀ (x : ℝ) (n : ℤ), x ≠ 0 → (x ^ (n - 1))⁻¹ = (x ^ n)⁻¹ * x",
  "constCategory": "Theorem"},
 {"references": ["LE", "LE.le"],
  "name": "GE.ge",
  "constType": "{α : Type u} → [inst : LE α] → α → α → Prop",
  "constCategory": "Definition"},
 {"references": ["Add", "AddZeroClass"],
  "name": "AddZeroClass.toAdd",
  "constType": "{M : Type u} → [self : AddZeroClass M] → Add M",
  "constCategory": "Definition"},
 {"references":
  ["Neg.toHasAbs",
   "instHSub",
   "congr_arg",
   "LinearOrder",
   "Trans.trans",
   "SubNegMonoid.toNeg",
   "instDistribLattice",
   "HSub.hSub",
   "AddGroup.toSubtractionMonoid",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "Abs.abs",
   "Eq",
   "DistribLattice.toLattice",
   "SubNegMonoid.toSub",
   "AddGroup",
   "SemilatticeSup.toSup",
   "SubtractionMonoid.toSubNegMonoid",
   "abs_neg",
   "instTransEq",
   "Lattice.toSemilatticeSup",
   "Eq.symm",
   "NegZeroClass.toNeg",
   "neg_sub",
   "SubtractionMonoid.toSubNegZeroMonoid"],
  "name": "abs_sub_comm",
  "constType":
  "∀ {α : Type u_1} [inst : AddGroup α] [inst_1 : LinearOrder α] (a b : α), |a - b| = |b - a|",
  "constCategory": "Theorem"},
 {"references":
  ["Nat.noConfusionType", "Eq.ndrec", "Eq.refl", "Nat", "Nat.casesOn", "Eq"],
  "name": "Nat.noConfusion",
  "constType":
  "{P : Sort u} → {v1 v2 : ℕ} → v1 = v2 → Nat.noConfusionType P v1 v2",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "CommMonoidWithZero.toZero",
   "LinearOrderedSemifield.toSemifield",
   "OfNat.ofNat",
   "LinearOrderedSemifield",
   "PartialOrder.toPreorder",
   "DivisionSemiring.toGroupWithZero",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "GroupWithZero.toDivInvMonoid",
   "CommGroupWithZero.toCommMonoidWithZero",
   "LE.le",
   "True",
   "zpow_nonneg",
   "Preorder.toLE",
   "Eq",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Zero.toOfNat0",
   "eq_true",
   "StrictOrderedSemiring.toPartialOrder",
   "instHPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Semifield.toDivisionSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Int"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.20",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a : α}, 0 ≤ a → ∀ (n : ℤ), (0 ≤ a ^ n) = True",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "And",
   "propext",
   "Finset.Icc",
   "Finset",
   "Finset.instMembershipFinset",
   "LocallyFiniteOrder",
   "Preorder",
   "Finset.mem_Icc",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Mathlib.Order.LocallyFinite._auxLemma.1",
  "constType":
  "∀ {α : Type u_1} [inst : Preorder α] [inst_1 : LocallyFiniteOrder α] {a b x : α}, (x ∈ Finset.Icc a b) = (a ≤ x ∧ x ≤ b)",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "of_eq_true",
   "forall_congr",
   "Eq.substr",
   "Eq.rec",
   "Eq.refl",
   "Eq.symm",
   "congrArg",
   "Eq.trans",
   "True",
   "Eq"],
  "name": "forall_prop_domain_congr",
  "constType":
  "∀ {p₁ p₂ : Prop} {q₁ : p₁ → Prop} {q₂ : p₂ → Prop} (h₁ : p₁ = p₂),\n  (∀ (a : p₂), q₁ (_ : p₁) = q₂ a) → (∀ (a : p₁), q₁ a) = ∀ (a : p₂), q₂ a",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "NoZeroDivisors",
   "instHMul",
   "Or",
   "OfNat.ofNat",
   "propext",
   "zero_eq_mul",
   "HMul.hMul",
   "MulZeroClass.toZero",
   "MulZeroClass",
   "MulZeroClass.toMul",
   "Eq"],
  "name": "Mathlib.Algebra.GroupWithZero.Defs._auxLemma.2",
  "constType":
  "∀ {M₀ : Type u_1} [inst : MulZeroClass M₀] [inst_1 : NoZeroDivisors M₀] {a b : M₀}, (0 = a * b) = (a = 0 ∨ b = 0)",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "GroupWithZero.toDivisionMonoid",
   "MonoidWithZeroHomClass",
   "Eq.refl",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "dite",
   "MulZeroClass.toMul",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "OneHomClass.toFunLike",
   "inv_mul_cancel",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "MonoidHomClass.toOneHomClass",
   "map_mul",
   "map_zero",
   "Eq.symm",
   "Eq.trans",
   "id",
   "GroupWithZero.toInv",
   "eq_self",
   "MulOneClass.toOne",
   "MonoidHomClass.toMulHomClass",
   "map_one",
   "Classical.propDecidable",
   "One.toOfNat1",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "MulZeroOneClass.toZero",
   "DivInvMonoid.toMonoid",
   "MulZeroOneClass.toMulZeroClass",
   "Monoid.toMulOneClass",
   "GroupWithZero.toMonoidWithZero",
   "GroupWithZero.inv_zero",
   "instHMul",
   "MonoidWithZero.toMulZeroOneClass",
   "Eq.ndrec",
   "eq_inv_of_mul_eq_one_left",
   "of_eq_true",
   "DivisionMonoid.toDivInvMonoid",
   "GroupWithZero",
   "congr",
   "HMul.hMul",
   "Not",
   "MonoidWithZero.toZero",
   "congrArg",
   "Inv.inv",
   "MonoidWithZeroHomClass.toZeroHomClass"],
  "name": "map_inv₀",
  "constType":
  "∀ {G₀ : Type u_3} {G₀' : Type u_5} {F : Type u_6} [inst : GroupWithZero G₀] [inst_1 : GroupWithZero G₀']\n  [inst_2 : MonoidWithZeroHomClass F G₀ G₀'] (f : F) (a : G₀), f a⁻¹ = (f a)⁻¹",
  "constCategory": "Theorem"},
 {"references": ["NormedRing", "NormedCommRing"],
  "name": "NormedCommRing.toNormedRing",
  "constType": "{α : Type u_5} → [self : NormedCommRing α] → NormedRing α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Subtype.val",
   "Real",
   "LT.lt",
   "Complex",
   "UpperHalfPlane"],
  "name": "UpperHalfPlane.coe",
  "constType": "UpperHalfPlane → ℂ",
  "constCategory": "Definition"},
 {"references": ["Prod"],
  "name": "Prod.snd",
  "constType": "{α : Type u} → {β : Type v} → α × β → β",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "mul_neg",
   "instDecidableEqFin",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Mathlib.Meta.NormNum.isInt_add",
   "pow_one",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Int.normedCommRing",
   "Mathlib.Tactic.Ring.neg_congr",
   "HasDistribNeg.toInvolutiveNeg",
   "EisensteinSeries.MoebiusPerm",
   "Int.instCommRingInt",
   "HPow.hPow",
   "instHSub",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Prod.snd",
   "MulOneClass.toOne",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instTransEq",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "congr",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Int",
   "Fin",
   "congrFun",
   "Inv.inv",
   "CommMonoidWithZero.toZero",
   "instOfNatInt",
   "Subtype.val",
   "Matrix.empty_val'",
   "Semiring.toMonoidWithZero",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "Mathlib.Tactic.Ring.sub_congr",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Mathlib.Tactic.Ring.sub_pf",
   "Matrix.det",
   "InvolutiveNeg.toNeg",
   "Monoid.toNatPow",
   "Trans.simple",
   "Nat.succ",
   "Int.instMulInt",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Mathlib.Tactic.Ring.mul_add",
   "One.toOfNat1",
   "Neg.neg",
   "Mathlib.Tactic.Ring.neg_add",
   "Matrix.vecEmpty",
   "CommRing.toCommSemiring",
   "Nat.commSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Prod.mk",
   "Matrix.cons_val'",
   "Mathlib.Tactic.Ring.one_mul",
   "letFun",
   "Prod",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Int.instAddMonoidInt",
   "Subtype.mk",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "Mathlib.Tactic.RingNF.int_rawCast_neg",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "Mathlib.Tactic.RingNF.add_assoc_rev",
   "Eq",
   "Mathlib.Tactic.RingNF.mul_assoc_rev",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Ring.toNeg",
   "MonoidWithZero.toMonoid",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Nat",
   "Eq.trans",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Mathlib.Tactic.RingNF.add_neg",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "EisensteinSeries.MoebiusPerm.proof_1",
   "Nat.rawCast",
   "Mathlib.Tactic.RingNF.mul_neg",
   "Int.instCommSemiringInt",
   "Fin.fintype",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.instAddInt",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "Matrix.SpecialLinearGroup",
   "Fin.instOfNatFin",
   "CommRing.toRing",
   "mul_one",
   "Matrix.vecCons",
   "congrArg",
   "add_zero",
   "Mathlib.Tactic.Ring.mul_one",
   "Int.ofNat",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "one_mul",
   "instHPow",
   "Matrix.SpecialLinearGroup.SL2_inv_expl",
   "Matrix.SpecialLinearGroup.hasInv",
   "Matrix",
   "Matrix.SpecialLinearGroup.SL2_inv_expl_det",
   "Ring.toSub",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Fin.instCommRing",
   "id",
   "NeZero.succ",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "funext",
   "instHAdd",
   "HSub.hSub",
   "NonUnitalNonAssocSemiring.toMul",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Matrix.cons_val_fin_one",
   "EisensteinSeries.det_SL_eq_one",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Int.instSemiringInt",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing"],
  "name": "EisensteinSeries.MoebiusPerm_left_inv",
  "constType":
  "∀ (A : Matrix.SpecialLinearGroup (Fin 2) ℤ) (z : ℤ × ℤ),\n  EisensteinSeries.MoebiusPerm A⁻¹ (EisensteinSeries.MoebiusPerm A z) = z",
  "constCategory": "Theorem"},
 {"references":
  ["NormedRing.toNonUnitalNormedRing",
   "NonUnitalNormedRing.toNonUnitalSeminormedRing",
   "NormedRing",
   "inferInstance",
   "NormedRing.toSeminormedRing",
   "NormedField",
   "NormedAlgebra",
   "NormedSpace",
   "NormedAlgebra.toNormedSpace",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup"],
  "name": "NormedAlgebra.toNormedSpace'",
  "constType":
  "{𝕜 : Type u_5} →\n  [inst : NormedField 𝕜] → {𝕜' : Type u_7} → [inst_1 : NormedRing 𝕜'] → [inst_2 : NormedAlgebra 𝕜 𝕜'] → NormedSpace 𝕜 𝕜'",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "OfNat.ofNat",
   "Complex.instZeroComplex",
   "Semiring.toNonAssocSemiring",
   "Real.nontrivial",
   "Real.semiring",
   "Real",
   "One.toOfNat1",
   "Complex",
   "pullback_nonzero",
   "Nontrivial",
   "NonAssocSemiring.toMulZeroOneClass",
   "rfl",
   "Complex.instOneComplex",
   "Complex.re"],
  "name": "Complex.instNontrivialComplex",
  "constType": "Nontrivial ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Mathlib.Meta.NormNum.IsNat.to_raw_eq.match_1",
   "AddMonoidWithOne",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Mathlib.Meta.NormNum.IsNat",
   "Nat.rawCast",
   "Nat",
   "Eq"],
  "name": "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
  "constType":
  "∀ {α : Type u_1} {a : α} {n : ℕ} [inst : AddMonoidWithOne α], Mathlib.Meta.NormNum.IsNat a n → a = Nat.rawCast n",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "StrictOrderedSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Nat",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.strictOrderedSemiring",
  "constType": "StrictOrderedSemiring ℕ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedSemiring.mk",
   "LinearOrderedCommSemiring.min_def",
   "LinearOrderedCommSemiring.le_total",
   "LinearOrderedCommSemiring.toMax",
   "LinearOrderedCommSemiring.toMin",
   "LinearOrderedSemiring",
   "LinearOrderedCommSemiring.compare_eq_compareOfLessAndEq",
   "LinearOrderedCommSemiring.max_def",
   "LinearOrderedCommSemiring.decidableLT",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toOrd",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedCommSemiring.decidableEq",
   "LinearOrderedCommSemiring.decidableLE",
   "LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toLinearOrderedSemiring",
  "constType":
  "{α : Type u_2} → [self : LinearOrderedCommSemiring α] → LinearOrderedSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "MulOneClass.toMul",
   "Real.sqrt_nonneg",
   "MulZeroOneClass.toMulOneClass",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MonoidHomClass.toMulHomClass",
   "Real.instLEReal",
   "Real",
   "MulHomClass.toFunLike",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "FunLike.coe",
   "Real.sqrt",
   "NonAssocSemiring.toMulZeroOneClass",
   "LE.le",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Real.semiring",
   "Complex.normSq",
   "Complex",
   "MonoidWithZeroHom"],
  "name": "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_nonneg'",
  "constType": "∀ (z : ℂ), 0 ≤ Real.sqrt (Complex.normSq z)",
  "constCategory": "Theorem"},
 {"references": ["DivisionRing", "NormedDivisionRing"],
  "name": "NormedDivisionRing.toDivisionRing",
  "constType":
  "{α : Type u_5} → [self : NormedDivisionRing α] → DivisionRing α",
  "constCategory": "Definition"},
 {"references":
  ["Matrix.adjugate._at.EisensteinSeries.MoebiusEquiv._spec_1",
   "_obj",
   "EisensteinSeries.MoebiusEquiv._elambda_2",
   "Equiv.mk",
   "_neutral",
   "EisensteinSeries.MoebiusEquiv._elambda_1"],
  "name": "EisensteinSeries.MoebiusEquiv._cstage2",
  "constType": "_obj → _obj",
  "constCategory": "Definition"},
 {"references":
  ["OrderedSemiring",
   "MulHom.toFun",
   "ZeroHomClass.mk",
   "Semiring.toNonAssocSemiring",
   "ZeroHomClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring",
   "AbsoluteValue",
   "FunLike.mk",
   "OrderedSemiring.toSemiring",
   "Semiring.toMonoidWithZero",
   "AbsoluteValue.zeroHomClass.proof_2",
   "NonUnitalNonAssocSemiring.toMul",
   "MonoidWithZero.toZero",
   "AbsoluteValue.zeroHomClass.proof_1",
   "AbsoluteValue.toMulHom"],
  "name": "AbsoluteValue.zeroHomClass",
  "constType":
  "{R : Type u_1} →\n  {S : Type u_2} → [inst : Semiring R] → [inst_1 : OrderedSemiring S] → ZeroHomClass (AbsoluteValue R S) R S",
  "constCategory": "Definition"},
 {"references":
  ["IsROrC.toNormedAlgebra",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "NormedAlgebra.toAlgebra",
   "Real",
   "Real.normedField",
   "DenselyNormedField.toNormedField",
   "RingHom.charZero_iff",
   "IsROrC",
   "RingHom.injective",
   "NormedField.toField",
   "inferInstance",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "Iff.mp",
   "Real.instCommSemiringReal",
   "Real.strictOrderedSemiring",
   "NormedRing.toRing",
   "AddGroupWithOne.toAddMonoidWithOne",
   "IsROrC.toDenselyNormedField",
   "Ring.toAddGroupWithOne",
   "algebraMap",
   "NormedCommRing.toNormedRing",
   "Field.toSemifield",
   "NormedField.toNormedCommRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Real.instDivisionRingReal",
   "DivisionSemiring.toSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "StrictOrderedSemiring.to_charZero",
   "CharZero",
   "Field.toEuclideanDomain",
   "Semifield.toDivisionSemiring",
   "EuclideanDomain.toNontrivial"],
  "name": "IsROrC.charZero_isROrC",
  "constType": "∀ {K : Type u_1} [inst : IsROrC K], CharZero K",
  "constCategory": "Definition"},
 {"references": ["NonUnitalNonAssocRing", "NonUnitalNonAssocCommRing"],
  "name": "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
  "constType":
  "{α : Type u} → [self : NonUnitalNonAssocCommRing α] → NonUnitalNonAssocRing α",
  "constCategory": "Definition"},
 {"references": ["DivInvMonoid", "Pow.mk", "Pow", "Int", "DivInvMonoid.zpow"],
  "name": "DivInvMonoid.Pow",
  "constType": "{M : Type u_2} → [inst : DivInvMonoid M] → Pow M ℤ",
  "constCategory": "Definition"},
 {"references": ["IsMinFilter", "Filter.principal", "Set", "Preorder"],
  "name": "IsMinOn",
  "constType":
  "{α : Type u} → {β : Type v} → [inst : Preorder β] → (α → β) → Set α → α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Semigroup.toMul",
   "MulOneClass.toMul",
   "Trans.trans",
   "div_eq_mul_inv",
   "GroupWithZero.toDivisionMonoid",
   "MulZeroClass.toMul",
   "True",
   "Eq",
   "mul_assoc",
   "MonoidWithZero.toSemigroupWithZero",
   "HDiv.hDiv",
   "InvolutiveInv.toInv",
   "mul_inv_rev",
   "DivisionMonoid.toInvolutiveInv",
   "Eq.trans",
   "DivInvMonoid.toDiv",
   "GroupWithZero.toInv",
   "eq_self",
   "instHDiv",
   "inv_inv",
   "GroupWithZero.toDivInvMonoid",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "MulZeroOneClass.toMulZeroClass",
   "Monoid.toMulOneClass",
   "GroupWithZero.toDiv",
   "DivInvMonoid.toInv",
   "SemigroupWithZero.toSemigroup",
   "MonoidWithZero.toMulZeroOneClass",
   "instHMul",
   "inv_mul_mul_self",
   "of_eq_true",
   "GroupWithZero",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "instTransEq",
   "congr",
   "congrArg",
   "congrFun",
   "Inv.inv"],
  "name": "div_self_mul_self'",
  "constType":
  "∀ {G₀ : Type u_3} [inst : GroupWithZero G₀] (a : G₀), a / (a * a) = a⁻¹",
  "constCategory": "Theorem"},
 {"references": ["Filter.univ_mem'", "setOf", "Filter", "Filter.Eventually"],
  "name": "Filter.eventually_of_forall",
  "constType":
  "∀ {α : Type u} {p : α → Prop} {f : Filter α}, (∀ (x : α), p x) → ∀ᶠ (x : α) in f, p x",
  "constCategory": "Theorem"},
 {"references": ["Mul", "Semigroup"],
  "name": "Semigroup.toMul",
  "constType": "{G : Type u} → [self : Semigroup G] → Mul G",
  "constCategory": "Definition"},
 {"references": ["Int.mul", "_obj", "Prod.mk", "_neutral", "Int.add"],
  "name": "EisensteinSeries.MoebiusPerm._cstage2",
  "constType": "_obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references": ["Min", "LinearOrderedRing"],
  "name": "LinearOrderedRing.toMin",
  "constType": "{α : Type u} → [self : LinearOrderedRing α] → Min α",
  "constCategory": "Definition"},
 {"references":
  ["Equiv",
   "OfNat.ofNat",
   "CompleteSemilatticeInf.toPartialOrder",
   "Real.instLEReal",
   "unionEquiv.proof_3",
   "unionEquiv.proof_2",
   "implies_congr",
   "Eq",
   "BooleanAlgebra.toBiheytingAlgebra",
   "And.right",
   "Eq.mpr",
   "Iff",
   "Set.iUnion",
   "Set.Elem",
   "Finset.toSet",
   "Nat",
   "Subtype",
   "Summable",
   "AddCommMonoid",
   "Mathlib.Data.Finset.Basic._auxLemma.60",
   "Ne",
   "CompletelyDistribLattice.toCompleteLattice",
   "CompleteLattice.instOmegaCompletePartialOrder",
   "eq_of_heq",
   "Function.comp",
   "PseudoMetricSpace.toUniformSpace",
   "Finset.instMembershipFinset",
   "unionEquiv.proof_1",
   "BiheytingAlgebra.toHeytingAlgebra",
   "Set.instMembershipSet",
   "CompleteAtomicBooleanAlgebra.toCompletelyDistribLattice",
   "Iff.intro",
   "And",
   "HEq.refl",
   "propext",
   "Finset.tsum_subtype",
   "disjoint_aux",
   "Not",
   "And.intro",
   "ExistsUnique",
   "Set.mem_iUnion_of_mem",
   "Int",
   "HEq",
   "Iff.rfl",
   "Subtype.val",
   "Real",
   "Set",
   "OmegaCompletePartialOrder.toPartialOrder",
   "Eq.refl",
   "summable_disjoint_union_of_nonneg",
   "Zero.toOfNat0",
   "Subtype.property",
   "forall_congr",
   "Finset",
   "TopologicalSpace",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "Equiv.summable_iff",
   "id",
   "Membership.mem",
   "funext",
   "Finset.sum",
   "Disjoint",
   "Real.pseudoMetricSpace",
   "Finset.partialOrder",
   "tsum",
   "Set.Set.completeAtomicBooleanAlgebra",
   "FunLike.coe",
   "LE.le",
   "HeytingAlgebra.toOrderBot",
   "Equiv.instFunLikeEquiv",
   "Real.instZeroReal",
   "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
   "unionEquiv",
   "Set.instBooleanAlgebraSet",
   "Eq.ndrec",
   "Finset.summable",
   "letFun",
   "Equiv.mk",
   "Prod",
   "_private.Modformsported.ForMathlib.TsumLemmas.0.unionEquiv._eq_1",
   "Eq.casesOn",
   "CompleteLattice.toCompleteSemilatticeInf",
   "Real.instAddCommMonoidReal",
   "Subtype.mk"],
  "name": "sum_lemma",
  "constType":
  "∀ (f : ℤ × ℤ → ℝ),\n  (∀ (y : ℤ × ℤ), 0 ≤ f y) →\n    ∀ (ι : ℕ → Finset (ℤ × ℤ)),\n      (∀ (y : ℤ × ℤ), ∃! i, y ∈ ι i) → (Summable f ↔ Summable fun n => Finset.sum (ι n) fun x => f x)",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "DecidablePred",
   "And",
   "Iff",
   "Finset",
   "Finset.filter",
   "Finset.val",
   "Multiset.mem_filter",
   "Finset.instMembershipFinset"],
  "name": "Finset.mem_filter",
  "constType":
  "∀ {α : Type u_1} {p : α → Prop} [inst : DecidablePred p] {s : Finset α} {a : α}, a ∈ Finset.filter p s ↔ a ∈ s ∧ p a",
  "constCategory": "Theorem"},
 {"references": ["SubNegMonoid", "SubtractionMonoid"],
  "name": "SubtractionMonoid.toSubNegMonoid",
  "constType": "{G : Type u} → [self : SubtractionMonoid G] → SubNegMonoid G",
  "constCategory": "Definition"},
 {"references":
  ["Real.orderedAddCommGroup",
   "Real.instFloorRingRealInstLinearOrderedRingReal",
   "OfNat.ofNat",
   "Real.instSubReal",
   "Real",
   "Eq.refl",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "Int.fract_nonneg",
   "Int.floor",
   "abs_of_nonneg",
   "Abs.abs",
   "Real.instNegReal",
   "Real.instOneReal",
   "Eq",
   "Int.fract",
   "Real.linearOrder",
   "Eq.mpr",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "instHSub",
   "Neg.toHasAbs",
   "Real.instLinearOrderedRingReal",
   "Real.instLTReal",
   "instDistribLattice",
   "HSub.hSub",
   "One.toOfNat1",
   "Real.intCast",
   "SubNegZeroMonoid.toNegZeroClass",
   "DistribLattice.toLattice",
   "Eq.ndrec",
   "Int.cast",
   "LT.lt",
   "Real.instAddGroupReal",
   "Int.fract_lt_one",
   "NegZeroClass.toNeg"],
  "name": "EisensteinSeries.abs_floor_sub",
  "constType": "∀ (r : ℝ), |r - ↑⌊r⌋| < 1",
  "constCategory": "Theorem"},
 {"references":
  ["Equiv",
   "EmbeddingLike.toFunLike",
   "FunLike",
   "EquivLike.toEmbeddingLike",
   "Equiv.instEquivLikeEquiv"],
  "name": "Equiv.instFunLikeEquiv",
  "constType": "{α : Sort u} → {β : Sort v} → FunLike (α ≃ β) α fun x => β",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "StrictOrderedRing.toPartialOrder",
   "Exists",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "instAddNat",
   "instHAdd",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Even",
   "Exists.intro",
   "Exists.casesOn",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "pow_bit0_nonneg",
   "Zero.toOfNat0",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "LinearOrderedRing",
   "instHPow",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Nat",
   "MonoidWithZero.toZero",
   "congrArg",
   "id"],
  "name": "Even.pow_nonneg",
  "constType":
  "∀ {R : Type u_4} [inst : LinearOrderedRing R] {n : ℕ}, Even n → ∀ (a : R), 0 ≤ a ^ n",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "AddMonoid.toAddZeroClass",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "Nat",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "HPow.hPow",
   "eq_self",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocSemiring.toDistrib",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "congrArg",
   "add_zero",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.single_pow",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a : R} {b : ℕ} {c : R}, a ^ b = c → (a + 0) ^ b = c + 0",
  "constCategory": "Theorem"},
 {"references":
  ["TendstoUniformly",
   "UniformSpace",
   "Set",
   "TendstoUniformlyOn.mono",
   "TendstoUniformlyOn",
   "Filter",
   "tendstoUniformlyOn_univ",
   "Set.univ",
   "Set.subset_univ",
   "Iff.mpr"],
  "name": "TendstoUniformly.tendstoUniformlyOn",
  "constType":
  "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι},\n  TendstoUniformly F f p → TendstoUniformlyOn F f p s",
  "constCategory": "Theorem"},
 {"references": ["AddGroupWithOne", "Neg"],
  "name": "AddGroupWithOne.toNeg",
  "constType": "{R : Type u} → [self : AddGroupWithOne R] → Neg R",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "Set",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "DifferentiableWithinAt.congr",
   "NormedSpace",
   "Eq",
   "Set.instMembershipSet"],
  "name": "DifferentiableOn.congr",
  "constType":
  "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f f₁ : E → F}\n  {s : Set E}, DifferentiableOn 𝕜 f s → (∀ x ∈ s, f₁ x = f x) → DifferentiableOn 𝕜 f₁ s",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Exists",
   "Set",
   "HasSubset.Subset",
   "Exists.intro",
   "Filter.Eventually",
   "Exists.casesOn",
   "Filter.Eventually.mono",
   "TendstoLocallyUniformlyOn",
   "Set.instMembershipSet",
   "And",
   "Set.instHasSubsetSet",
   "UniformSpace",
   "uniformity",
   "Prod.mk",
   "nhdsWithin_mono",
   "TopologicalSpace",
   "Filter",
   "Prod",
   "And.intro",
   "nhdsWithin",
   "And.casesOn",
   "id",
   "instMembershipSetFilter"],
  "name": "TendstoLocallyUniformlyOn.mono",
  "constType":
  "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s s' : Set α}\n  {p : Filter ι} [inst_1 : TopologicalSpace α],\n  TendstoLocallyUniformlyOn F f p s → s' ⊆ s → TendstoLocallyUniformlyOn F f p s'",
  "constCategory": "Theorem"},
 {"references":
  ["RingHom.instRingHomClass",
   "Int.cast_one",
   "CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "OfNat.ofNat",
   "mul_neg",
   "Mathlib.Algebra.GroupWithZero.Units.Lemmas._auxLemma.1",
   "Fin.instOneFin",
   "instDecidableEqFin",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Nat.cast_zero",
   "MulZeroClass.toMul",
   "AddGroupWithOne.toAddGroup",
   "Complex.Complex.addGroupWithOne",
   "Complex.instField",
   "Int.castRingHom",
   "UpperHalfPlane.mk",
   "Int.cast_neg",
   "HSMul.hSMul",
   "HasDistribNeg.toInvolutiveNeg",
   "HDiv.hDiv",
   "NonAssocRing.toNonAssocSemiring",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Int.instCommRingInt",
   "Matrix.one",
   "instHDiv",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "MulOneClass.toOne",
   "Matrix.semiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "Complex.instAddComplex",
   "Real.instRingReal",
   "Matrix.SpecialLinearGroup.hasOne",
   "Complex.im",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "MonoidWithZero.toMulZeroOneClass",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "LT.lt",
   "congr",
   "Field.toDiv",
   "MonoidWithZero.toZero",
   "Int",
   "UpperHalfPlane.instFactEvenNatInstAddNatCardFinOfNatInstOfNatNatFintype",
   "Fin",
   "congrFun",
   "Matrix.one_apply_eq",
   "Fin.instZeroFin",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "instOfNatInt",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "NeZero.one",
   "AddMonoid.toAddZeroClass",
   "algebraInt",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "RingHomClass.toNonUnitalRingHomClass",
   "Subtype.property",
   "Matrix.det",
   "zero_add",
   "Complex.instSemiringComplex",
   "InvolutiveNeg.toNeg",
   "Mathlib.Meta.NormNum.isInt_eq_false",
   "neg_mul",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.ofReal'",
   "NonUnitalNonAssocRing.toMul",
   "Int.negOfNat",
   "Real.instLTReal",
   "algebraMap",
   "Mathlib.Algebra.NeZero._auxLemma.3",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "Neg.neg",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "GroupWithZero.toMonoidWithZero",
   "Fin.nontrivial",
   "GroupWithZero.toDiv",
   "Matrix.SpecialLinearGroup.coeToGL",
   "CommRing.toCommSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Bool.false",
   "Mathlib.Algebra.NeZero._auxLemma.4",
   "Semifield.toDivisionSemiring",
   "MulOneClass.toMul",
   "instHSMul",
   "MulZeroOneClass.toMulOneClass",
   "neg_zero",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "NonUnitalRingHomClass.toMulHomClass",
   "UpperHalfPlane.SLAction",
   "UpperHalfPlane.specialLinearGroup_apply",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Ring.toNeg",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "Nat",
   "not_false_eq_true",
   "Matrix.one_apply_ne",
   "Eq.trans",
   "Nat.cast_one",
   "DivisionSemiring.toGroupWithZero",
   "Complex.charZero",
   "Fin.fintype",
   "MulZeroOneClass.toMulZeroClass",
   "EisensteinSeries.coeGLl",
   "Int.cast_zero",
   "instHMul",
   "NonAssocRing.toIntCast",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "of_eq_true",
   "Int.cast",
   "UpperHalfPlane.coe_mk",
   "Mathlib.Meta.NormNum.isInt_neg",
   "Fin.instOfNatFin",
   "CommRing.toRing",
   "mul_one",
   "Not",
   "add_zero",
   "congrArg",
   "Int.ofNat",
   "RingHom",
   "AddGroupWithOne.toIntCast",
   "MulZeroClass.zero_mul",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Ring.toNonAssocRing",
   "UpperHalfPlane.ext_iff",
   "Zero.toOfNat0",
   "one_mul",
   "Matrix",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "Fin.instCommRing",
   "id",
   "eq_self",
   "NeZero.succ",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Matrix.SpecialLinearGroup.instNegSpecialLinearGroup",
   "eq_intCast",
   "AddGroupWithOne.toNeg",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Units.val",
   "Real.semiring",
   "Int.instAddCommGroupInt",
   "Int.instSemiringInt",
   "HMul.hMul",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Bool",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.neg_moeb_eq_id",
  "constType": "∀ (z : UpperHalfPlane), -1 • z = z",
  "constCategory": "Theorem"},
 {"references":
  ["instHMul",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "MulOneClass",
   "MulOneClass.toOne",
   "HMul.hMul",
   "MulOneClass.one_mul",
   "One.toOfNat1",
   "Eq"],
  "name": "one_mul",
  "constType": "∀ {M : Type u} [inst : MulOneClass M] (a : M), 1 * a = a",
  "constCategory": "Theorem"},
 {"references":
  ["abs_nonneg",
   "Neg.toHasAbs",
   "LinearOrder",
   "PartialOrder.toPreorder",
   "Lattice.toSemilatticeInf",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HAdd.hAdd",
   "instDistribLattice",
   "AddGroup.toSubtractionMonoid",
   "SemilatticeInf.toPartialOrder",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "LE.le",
   "Abs.abs",
   "Preorder.toLE",
   "abs_of_nonneg",
   "Eq",
   "DistribLattice.toLattice",
   "SemilatticeSup.toSup",
   "AddGroup",
   "AddMonoid.toAddSemigroup",
   "CovariantClass",
   "SubNegMonoid.toAddMonoid",
   "Lattice.toSemilatticeSup",
   "NegZeroClass.toNeg",
   "SubtractionMonoid.toSubNegZeroMonoid"],
  "name": "abs_abs",
  "constType":
  "∀ {α : Type u_1} [inst : AddGroup α] [inst_1 : LinearOrder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] (a : α), |(|a|)| = |a|",
  "constCategory": "Theorem"},
 {"references": ["Or", "Or.inl", "Or.inr"],
  "name": "Or.rec",
  "constType":
  "∀ {a b : Prop} {motive : a ∨ b → Prop},\n  (∀ (h : a), motive (_ : a ∨ b)) → (∀ (h : b), motive (_ : a ∨ b)) → ∀ (t : a ∨ b), motive t",
  "constCategory": "Other"},
 {"references":
  ["OfNat.ofNat",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "Trans.trans",
   "instOfNatInt",
   "DivInvMonoid.zpow_succ'",
   "HAdd.hAdd",
   "DivInvMonoid.Pow",
   "Eq",
   "PProd",
   "Nat.cast",
   "instHPow",
   "PUnit",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "Eq.symm",
   "Eq.trans",
   "Nat.succ",
   "HPow.hPow",
   "Nat.below",
   "Nat.brecOn",
   "congr_arg",
   "instAddNat",
   "instHAdd",
   "Unit",
   "DivInvMonoid",
   "One.toOfNat1",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "pow_zero",
   "zpow_ofNat.match_1",
   "instHMul",
   "Nat.rec",
   "PProd.fst",
   "instNatCastInt",
   "zpow_zero",
   "instTransEq",
   "HMul.hMul",
   "pow_succ",
   "Int"],
  "name": "zpow_ofNat",
  "constType":
  "∀ {G : Type u_1} [inst : DivInvMonoid G] (a : G) (n : ℕ), a ^ ↑n = a ^ n",
  "constCategory": "Theorem"},
 {"references":
  ["StrictOrderedRing.toPartialOrder",
   "StrictOrderedRing.toRing",
   "StrictOrderedSemiring",
   "StrictOrderedSemiring.mk",
   "Semiring",
   "StrictOrderedRing",
   "StrictOrderedRing.add_le_add_left",
   "StrictOrderedRing.toStrictOrderedSemiring.proof_2",
   "StrictOrderedRing.toNontrivial",
   "Ring.toSemiring",
   "StrictOrderedRing.toStrictOrderedSemiring.proof_3",
   "StrictOrderedRing.zero_le_one",
   "StrictOrderedRing.toStrictOrderedSemiring.proof_1"],
  "name": "StrictOrderedRing.toStrictOrderedSemiring",
  "constType":
  "{α : Type u} → [inst : StrictOrderedRing α] → StrictOrderedSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Real.definition._@.Mathlib.Data.Real.Basic._hyg.3933",
   "Real",
   "Subtype",
   "Eq"],
  "name": "Real.wrapped._@.Mathlib.Data.Real.Basic._hyg.3933",
  "constType": "Subtype (Eq Real.definition✝)",
  "constCategory": "Other"},
 {"references": ["NonAssocSemiring"],
  "name": "RingHom",
  "constType":
  "(α : Type u_5) → (β : Type u_6) → [inst : NonAssocSemiring α] → [inst : NonAssocSemiring β] → Type (max u_5 u_6)",
  "constCategory": "Other"},
 {"references": ["LinearOrderedSemiring", "Max"],
  "name": "LinearOrderedSemiring.toMax",
  "constType": "{α : Type u} → [self : LinearOrderedSemiring α] → Max α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "instHMul",
   "OfNat.ofNat",
   "PosMulMono",
   "Subtype.val",
   "HMul.hMul",
   "Preorder",
   "Mul",
   "LE.le",
   "Subtype.mk",
   "Subtype",
   "Preorder.toLE",
   "CovariantClass.elim"],
  "name": "mul_le_mul_of_nonneg_left",
  "constType":
  "∀ {α : Type u_1} {a b c : α} [inst : Mul α] [inst_1 : Zero α] [inst_2 : Preorder α] [inst_3 : PosMulMono α],\n  b ≤ c → 0 ≤ a → a * b ≤ a * c",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toOne",
   "Matrix.det",
   "CommRing.toCommSemiring",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Fintype",
   "DecidableEq",
   "Matrix",
   "One.toOfNat1",
   "Subtype",
   "CommRing",
   "Eq"],
  "name": "Matrix.SpecialLinearGroup",
  "constType":
  "(n : Type u) → [inst : DecidableEq n] → [inst : Fintype n] → (R : Type v) → [inst : CommRing R] → Type (max 0 u v)",
  "constCategory": "Definition"},
 {"references": ["Iff.intro", "Iff.mp", "Iff", "Iff.mpr"],
  "name": "Iff.symm",
  "constType": "∀ {a b : Prop}, (a ↔ b) → (b ↔ a)",
  "constCategory": "Theorem"},
 {"references":
  ["Nat.cast",
   "instNatCastInt",
   "propext",
   "LT.lt",
   "Mathlib.Tactic.Zify.nat_cast_lt",
   "Nat",
   "Int",
   "instLTNat",
   "Int.instLTInt",
   "Eq"],
  "name": "Mathlib.Tactic.Zify._auxLemma.3",
  "constType": "∀ (a b : ℕ), (a < b) = (↑a < ↑b)",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "AddCommSemigroup.toAddCommMagma",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "OrderedAddCommGroup.toPartialOrder",
   "PartialOrder.toPreorder",
   "Trans.trans",
   "HAdd.hAdd",
   "Eq.refl",
   "sub_add_sub_cancel",
   "AddMonoid.toAddZeroClass",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Abs.abs",
   "Preorder.toLE",
   "LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid",
   "Eq",
   "SubNegMonoid.toSub",
   "Eq.mpr",
   "SemilatticeSup.toSup",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "AddCommGroup.toAddGroup",
   "Lattice.toSemilatticeSup",
   "AddCommMonoid.toAddCommSemigroup",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid",
   "Neg.toHasAbs",
   "LinearOrderedAddCommGroup",
   "instHSub",
   "instHAdd",
   "instDistribLattice",
   "HSub.hSub",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddCommMagma.toAdd",
   "abs_add",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "DistribLattice.toLattice",
   "Eq.ndrec",
   "SubNegMonoid.toAddMonoid",
   "instTransEq",
   "NegZeroClass.toNeg",
   "LinearOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "OrderedAddCommGroup.toAddCommGroup",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "abs_sub_le",
  "constType":
  "∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α] (a b c : α), |a - c| ≤ |a - b| + |b - c|",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "LinearOrderedAddCommMonoid.toLinearOrder",
   "AddCommSemigroup.toAddCommMagma",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "PartialOrder.toPreorder",
   "Trans.trans",
   "not_lt",
   "Distrib.rightDistribClass",
   "HAdd.hAdd",
   "MulZeroClass.mul_zero",
   "Exists.casesOn",
   "ExistsAddOfLE",
   "Preorder.toLE",
   "Eq",
   "AddZeroClass.toZero",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Iff.mp",
   "sq",
   "MonoidWithZero.toMonoid",
   "LinearOrderedSemiring.toLinearOrderedAddCommMonoid",
   "Nat",
   "Eq.trans",
   "HPow.hPow",
   "add_comm",
   "Or",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Or.casesOn",
   "AddCommMagma.toAdd",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "ExistsAddOfLE.exists_add_of_le",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instTransEq_1",
   "instHMul",
   "of_eq_true",
   "AddCancelMonoid.toIsCancelAdd",
   "StrictOrderedSemiring.toOrderedSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "instTransEq",
   "LinearOrderedSemiring",
   "LinearOrder.toPartialOrder",
   "Not",
   "MonoidWithZero.toZero",
   "congrArg",
   "congrFun",
   "AddZeroClass.toAdd",
   "Exists",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "Semiring.toMonoidWithZero",
   "MulZeroClass.zero_mul",
   "Eq.refl",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "add_neg_of_nonpos_of_neg",
   "AddMonoid.toAddZeroClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "True",
   "add_mul",
   "le_total",
   "add_left_injective",
   "pow_nonneg",
   "Zero.toOfNat0",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid",
   "instHPow",
   "Preorder.toLT",
   "MulZeroClass.toZero",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "AddCancelCommMonoid.toAddCancelMonoid",
   "instOfNatNat",
   "Eq.symm",
   "AddCommMonoid.toAddCommSemigroup",
   "id",
   "eq_self",
   "mul_add",
   "IsCancelAdd.toIsLeftCancelAdd",
   "instHAdd",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "Monoid.toMulOneClass",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "Distrib.leftDistribClass",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Eq.not_gt",
   "NonUnitalNonAssocSemiring.toAddCommMonoid"],
  "name": "sq_nonneg",
  "constType":
  "∀ {α : Type u} [inst : LinearOrderedSemiring α] [inst_1 : ExistsAddOfLE α] (a : α), 0 ≤ a ^ 2",
  "constCategory": "Theorem"},
 {"references": ["Not", "Eq"],
  "name": "Ne",
  "constType": "{α : Sort u} → α → α → Prop",
  "constCategory": "Definition"},
 {"references": [],
  "name": "AddCommMonoid",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references": ["TopologicalSpace.IsOpen", "Set", "TopologicalSpace"],
  "name": "IsOpen",
  "constType": "{α : Type u} → [inst : TopologicalSpace α] → Set α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "OfNat.ofNat",
   "instHAdd",
   "Finset.sum",
   "HAdd.hAdd",
   "AddCommMonoid.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "Eq",
   "Zero.toOfNat0",
   "Finset.fold_singleton",
   "AddMonoid.toAddSemigroup",
   "AddMonoid.toZero",
   "Finset",
   "Singleton.singleton",
   "AddCommMagma.to_isCommutative",
   "AddSemigroup.to_isAssociative",
   "add_zero",
   "AddCommMonoid.toAddCommSemigroup",
   "Eq.trans",
   "AddCommMonoid",
   "Finset.instSingletonFinset"],
  "name": "Finset.sum_singleton",
  "constType":
  "∀ {β : Type u} {α : Type v} [inst : AddCommMonoid β] (f : α → β) (a : α), (Finset.sum {a} fun x => f x) = f a",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Nat.cast_zero",
   "Eq",
   "Zero.toOfNat0",
   "Subtype.property",
   "Eq.mpr",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Preorder.toLT",
   "Real.strictOrderedSemiring",
   "AddMonoid.toZero",
   "Monoid.toNatPow",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Eq.symm",
   "Eq.trans",
   "id",
   "HPow.hPow",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Real.instMonoidReal",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "AddMonoidWithOne.toAddMonoid",
   "pow_pos",
   "Real.instRingReal",
   "StrictOrderedSemiring.toSemiring",
   "Complex.im",
   "Real.instZeroReal",
   "StrictOrderedSemiring.toPartialOrder",
   "LT.lt",
   "letFun",
   "Complex",
   "MonoidWithZero.toZero",
   "congrArg",
   "congrFun"],
  "name": "upper_half_im_pow_pos",
  "constType": "∀ (z : UpperHalfPlane) (n : ℕ), 0 < (↑z).im ^ n",
  "constCategory": "Theorem"},
 {"references": ["propext", "Subtype.forall", "Subtype.mk", "Subtype", "Eq"],
  "name": "Mathlib.Data.Subtype._auxLemma.1",
  "constType":
  "∀ {α : Sort u_1} {p : α → Prop} {q : { a // p a } → Prop},\n  (∀ (x : { a // p a }), q x) = ∀ (a : α) (b : p a), q { val := a, property := b }",
  "constCategory": "Theorem"},
 {"references": ["Norm", "NormedField"],
  "name": "NormedField.toNorm",
  "constType": "{α : Type u_5} → [self : NormedField α] → Norm α",
  "constCategory": "Definition"},
 {"references":
  ["Iff.symm",
   "Iff",
   "FunLike",
   "FunLike.coe_fn_eq",
   "Iff.trans",
   "FunLike.coe",
   "Function.funext_iff",
   "Eq"],
  "name": "FunLike.ext_iff",
  "constType":
  "∀ {F : Sort u_1} {α : Sort u_2} {β : α → Sort u_3} [i : FunLike F α β] {f g : F}, f = g ↔ ∀ (x : α), f x = g x",
  "constCategory": "Theorem"},
 {"references": ["Eq.rec", "rfl", "Eq"],
  "name": "implies_congr",
  "constType":
  "∀ {p₁ p₂ : Sort u} {q₁ q₂ : Sort v}, p₁ = p₂ → q₁ = q₂ → (p₁ → q₁) = (p₂ → q₂)",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Nat.rawCast",
   "Semiring.toMonoidWithZero",
   "One.toOfNat1",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "pow_one",
   "True",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "congrArg",
   "Eq.trans",
   "Nat.cast_one",
   "congrFun",
   "Nat.semiring"],
  "name": "Mathlib.Tactic.Ring.pow_one_cast",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (a : R), a ^ Nat.rawCast 1 = a",
  "constCategory": "Theorem"},
 {"references":
  ["Submonoid.mk",
   "Subgroup.mk",
   "Top",
   "Submonoid.instTopSubmonoid",
   "Submonoid.toSubsemigroup",
   "Top.top",
   "Submonoid",
   "Subgroup",
   "Subgroup.instTopSubgroup.proof_1",
   "Group",
   "Group.toDivInvMonoid",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Top.mk",
   "Subgroup.instTopSubgroup.proof_2"],
  "name": "Subgroup.instTopSubgroup",
  "constType": "{G : Type u_1} → [inst : Group G] → Top (Subgroup G)",
  "constCategory": "Definition"},
 {"references":
  ["Real.commRing.proof_25",
   "Semiring.mk",
   "OfNat.ofNat",
   "Real.instMulReal",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.instSubReal",
   "nsmulRec",
   "npowRec",
   "CommRing.mk",
   "Real.instOneReal",
   "Real.commRing.proof_24",
   "zsmulRec",
   "Real.commRing.proof_3",
   "Real.commRing.proof_1",
   "AddCommMonoid.mk",
   "Nat.cast",
   "Real.commRing.proof_20",
   "Rat.instNegRat",
   "Sub.sub",
   "Real.commRing.proof_10",
   "Nat",
   "Real.commRing.proof_11",
   "Add.mk",
   "Real.commRing.proof_6",
   "Rat.instLinearOrderedRingRat",
   "Real.ofCauchy",
   "Real.commRing.proof_4",
   "AddMonoid.mk",
   "instHMul",
   "IntCast.mk",
   "Real.commRing.proof_21",
   "IsAbsoluteValue.abs_isAbsoluteValue",
   "Int.cast",
   "Zero.mk",
   "Real.commRing.proof_13",
   "CauSeq.Completion.Cauchy",
   "Ring.mk",
   "Real.commRing.proof_8",
   "Int",
   "Rat.instLinearOrderedFieldRat",
   "Neg.mk",
   "Mul.mk",
   "CauSeq.Completion.instIntCastCauchy",
   "Real.commRing.proof_15",
   "Real.commRing.proof_5",
   "DivisionRing.toRing",
   "Real",
   "CauSeq.Completion.instNatCastCauchy",
   "Real.commRing.proof_23",
   "NonUnitalNonAssocSemiring.mk",
   "NatCast.mk",
   "CommRing",
   "Abs.abs",
   "Real.commRing.proof_17",
   "Rat.instSupRat",
   "Real.instNegReal",
   "Sub.mk",
   "Zero.toOfNat0",
   "Real.commRing.proof_9",
   "Real.commRing.proof_18",
   "Real.commRing.proof_7",
   "Real.commRing.proof_22",
   "Real.commRing.proof_12",
   "Real.commRing.proof_14",
   "Real.commRing.proof_2",
   "Real.commRing.proof_16",
   "Real.commRing.proof_19",
   "Neg.toHasAbs",
   "AddSemigroup.mk",
   "instHAdd",
   "One.mk",
   "Rat",
   "One.toOfNat1",
   "Neg.neg",
   "Real.instZeroReal",
   "Rat.divisionRing",
   "NonUnitalSemiring.mk",
   "HMul.hMul"],
  "name": "Real.commRing",
  "constType": "CommRing ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Field.zpow_succ'",
   "Real.field",
   "NormedAddCommGroup",
   "Field.zpow_zero'",
   "Real.instLinearOrderedRingReal",
   "NormedField",
   "Real",
   "Field.mk",
   "Field.toNontrivial",
   "Field.toInv",
   "Field.zpow",
   "Field.zpow_neg'",
   "Field.toRatCast",
   "NormedAddCommGroup.toMetricSpace",
   "Field.toCommRing",
   "Field.qsmul_eq_mul'",
   "Field.mul_inv_cancel",
   "abs_mul",
   "Field",
   "NormedField.mk",
   "Field.inv_zero",
   "NormedAddCommGroup.dist_eq",
   "NormedAddCommGroup.toNorm",
   "Field.toDiv",
   "Field.qsmul",
   "Field.ratCast_mk",
   "Real.normedAddCommGroup",
   "Field.div_eq_mul_inv"],
  "name": "Real.normedField",
  "constType": "NormedField ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Neg.toHasAbs",
   "IsAbsoluteValue.abs_isAbsoluteValue",
   "DivisionRing.toRing",
   "Rat.divisionRing",
   "CauSeq.Completion.instNegCauchy",
   "Real",
   "Rat.instNegRat",
   "Rat",
   "CauSeq.Completion.Cauchy",
   "Neg.neg",
   "Real.definition.match_1._@.Mathlib.Data.Real.Basic._hyg.1004",
   "Rat.instLinearOrderedRingRat",
   "Real.ofCauchy",
   "Rat.instLinearOrderedFieldRat",
   "Abs.abs",
   "Rat.instSupRat"],
  "name": "Real.definition._@.Mathlib.Data.Real.Basic._hyg.1004",
  "constType": "ℝ → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["EStateM",
   "Lean.Macro.Context",
   "ReaderT",
   "Lean.Macro.State",
   "Lean.Macro.Exception"],
  "name": "Lean.MacroM",
  "constType": "Type → Type",
  "constCategory": "Definition"},
 {"references":
  ["Lean.ParserDescr.node",
   "_obj",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_10",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_12"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_13._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["Real.instZeroReal",
   "NeZero",
   "AddGroupWithOne.toAddMonoidWithOne",
   "OfNat.ofNat",
   "NeZero.mk",
   "StrictOrderedSemiring.to_charZero",
   "Ring.toAddGroupWithOne",
   "Real.strictOrderedSemiring",
   "Real",
   "one_ne_zero",
   "One.toOfNat1",
   "Real.instRingReal",
   "NeZero.charZero_one",
   "Real.instOneReal"],
  "name": "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
  "constType": "NeZero 1",
  "constCategory": "Definition"},
 {"references":
  ["Real.orderedAddCommGroup",
   "AddZeroClass.toAdd",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "Exists",
   "Set.instIsTransSetSubsetInstHasSubsetSet",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Metric.closedBall",
   "HAdd.hAdd",
   "Real",
   "Set",
   "Real.instAddReal",
   "Real.instAddMonoidReal",
   "Exists.intro",
   "AddMonoid.toAddZeroClass",
   "Real.instOneReal",
   "Real.linearOrder",
   "Bornology.IsBounded.subset_closedBall",
   "Real.strictOrderedSemiring",
   "AddGroup.toAddCancelMonoid",
   "Metric.ball",
   "NeZero.charZero_one",
   "Metric.isBounded_iff_subset_closedBall.match_1",
   "LinearOrderedRing.toMax",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "PseudoMetricSpace",
   "Bornology.IsBounded",
   "AddGroupWithOne.toAddMonoidWithOne",
   "IsCancelAdd.toIsLeftCancelAdd",
   "Ring.toAddGroupWithOne",
   "Real.instLinearOrderedRingReal",
   "Real.partialOrder",
   "Real.instLTReal",
   "lt_add_one",
   "instHAdd",
   "HasSubset.Subset.trans",
   "OrderedSemiring.zeroLEOneClass",
   "HasSubset.Subset",
   "One.toOfNat1",
   "Real.instRingReal",
   "Real.orderedSemiring",
   "PseudoMetricSpace.toBornology",
   "LE.le.trans_lt",
   "And",
   "Set.instHasSubsetSet",
   "StrictOrderedSemiring.to_charZero",
   "le_max_left",
   "AddCancelMonoid.toIsCancelAdd",
   "LT.lt",
   "Max.max",
   "LinearOrder.toMax",
   "Real.instAddGroupReal",
   "LinearOrder.toPartialOrder",
   "And.intro",
   "Metric.closedBall_subset_ball",
   "le_max_right"],
  "name": "Bornology.IsBounded.subset_ball_lt",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α},\n  Bornology.IsBounded s → ∀ (a : ℝ) (c : α), ∃ r, a < r ∧ s ⊆ Metric.ball c r",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Prod",
  "constType": "Type u → Type v → Type (max u v)",
  "constCategory": "Other"},
 {"references": ["Bool"],
  "name": "Bool.false",
  "constType": "Bool",
  "constCategory": "Other"},
 {"references":
  ["Membership.mem",
   "And",
   "Exists",
   "Filter.EventuallyEq",
   "propext",
   "Filter.eventuallyEq_iff_exists_mem",
   "Set",
   "Set.EqOn",
   "Filter",
   "Eq",
   "instMembershipSetFilter"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.4",
  "constType":
  "∀ {α : Type u} {β : Type v} {l : Filter α} {f g : α → β}, (f =ᶠ[l] g) = ∃ s ∈ l, Set.EqOn f g s",
  "constCategory": "Theorem"},
 {"references":
  ["Int.ofNat",
   "instHMul",
   "Int.negOfNat",
   "HMul.hMul",
   "instMulNat",
   "Nat",
   "Nat.succ",
   "Int",
   "Int.add.match_1"],
  "name": "Int.mul",
  "constType": "ℤ → ℤ → ℤ",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "Matrix.SpecialLinearGroup.coeToGL.proof_2",
   "OfNat.ofNat",
   "Subtype.val",
   "Matrix.semiring",
   "Semiring.toMonoidWithZero",
   "Matrix.GeneralLinearGroup",
   "One.toOfNat1",
   "Matrix.SpecialLinearGroup.coeToGL.proof_1",
   "CommRing",
   "Eq",
   "Matrix.det",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "Fintype",
   "Matrix.SpecialLinearGroup",
   "DecidableEq",
   "MonoidWithZero.toMonoid",
   "Matrix.SpecialLinearGroup.hasInv",
   "Matrix",
   "Units.mk",
   "Inv.inv"],
  "name": "Matrix.SpecialLinearGroup.coeToGL",
  "constType":
  "{n : Type u} →\n  [inst : DecidableEq n] →\n    [inst_1 : Fintype n] → {R : Type v} → [inst_2 : CommRing R] → Matrix.SpecialLinearGroup n R → GL n R",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Mathlib.Meta.NormNum.IsNat",
   "Mathlib.Meta.NormNum.isNat_eq_true.match_1",
   "Nat",
   "rfl",
   "Eq"],
  "name": "Mathlib.Meta.NormNum.isNat_eq_true",
  "constType":
  "∀ {α : Type u_1} [inst : AddMonoidWithOne α] {a b : α} {c : ℕ},\n  Mathlib.Meta.NormNum.IsNat a c → Mathlib.Meta.NormNum.IsNat b c → a = b",
  "constCategory": "Theorem"},
 {"references": ["Lean.Macro.Exception"],
  "name": "Lean.Macro.Exception.unsupportedSyntax",
  "constType": "Lean.Macro.Exception",
  "constCategory": "Other"},
 {"references":
  ["Nat.AtLeastTwo",
   "OfNat.ofNat",
   "instAddNat",
   "instHAdd",
   "HAdd.hAdd",
   "instNatAtLeastTwo",
   "instOfNatNat",
   "Nat"],
  "name": "EisensteinSeries.AbsEisenBound.proof_1",
  "constType": "Nat.AtLeastTwo (6 + 2)",
  "constCategory": "Theorem"},
 {"references":
  ["Bot.bot",
   "PartialOrder.toPreorder",
   "OrderBot.toBot",
   "OrderBot",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder"],
  "name": "Disjoint",
  "constType":
  "{α : Type u_1} → [inst : PartialOrder α] → [inst : OrderBot α] → α → α → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Complex.instNormedFieldComplex",
   "Complex.instZeroComplex",
   "Subtype.val",
   "Set",
   "extendByZero",
   "PseudoMetricSpace.toUniformSpace",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "OpenSubs",
   "NormedField.toNormedCommRing",
   "ext_by_zero_eq'",
   "Set.instMembershipSet",
   "Eq",
   "Subtype.property",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.ndrec",
   "TopologicalSpace.Opens.carrier",
   "Set.Elem",
   "letFun",
   "Complex",
   "UniformSpace.toTopologicalSpace",
   "Subtype.mk",
   "id"],
  "name": "ext_by_zero_apply",
  "constType":
  "∀ (D : OpenSubs) (f : ↑D.carrier → ℂ) (y : ↑D.carrier), extendByZero f ↑y = f y",
  "constCategory": "Theorem"},
 {"references":
  ["_obj",
   "Lean.Name.str._override",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_2",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_1"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_3._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "instOfNatInt",
   "Int.negSucc",
   "Unit",
   "Int.negOfNat.match_1",
   "Nat",
   "Int"],
  "name": "Int.negOfNat",
  "constType": "ℕ → ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Complex.mk",
   "Real",
   "Complex"],
  "name": "Complex.ofReal'",
  "constType": "ℝ → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "one_div",
   "DivInvMonoid.Pow",
   "Semiring.toNatCast",
   "Set.Elem",
   "NormedDivisionRing.toDivisionRing",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "instOfNat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Complex.instOneComplex",
   "Subtype",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "GroupWithZero.toInv",
   "instHDiv",
   "Complex.instNontrivialComplex",
   "Prod.snd",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "PseudoMetricSpace.toUniformSpace",
   "UpperHalfPlane.coe",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "map_inv₀",
   "SubadditiveHomClass.toFunLike",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instNatAtLeastTwo",
   "congr",
   "LinearOrder.toPartialOrder",
   "Int.subNatNat",
   "congrFun",
   "AddZeroClass.toAdd",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.5",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Set",
   "EisensteinSeries.AbsEise_bounded_on_square",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "Complex.instSemiringComplex",
   "Int.add_one_le_iff",
   "AddGroup.toAddCancelMonoid",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "zero_lt_one",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Real.instLTReal",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "Neg.neg",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "letFun",
   "Semifield.toDivisionSemiring",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "HAdd.hAdd",
   "AbsoluteValue",
   "AddGroup.toSubtractionMonoid",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Ring.toIntCast",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "le_trans",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "GroupWithZero.toDivInvMonoid",
   "Real.orderedSemiring",
   "Int.instLTInt",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "Int.cast",
   "eise",
   "Eq.mp",
   "NormedField.toNormedDivisionRing",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "SeminormedRing.toPseudoMetricSpace",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "EisensteinSeries.rfunctbound'",
   "EisensteinSeries.eisenSquare",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "Int.instLinearOrderInt",
   "CommSemiring.toCommMonoidWithZero",
   "NeZero.charZero_one",
   "id",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.to_charZero",
   "EisensteinSeries.lbpoint",
   "OrderedCommSemiring.toOrderedSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Bool",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "upper_half_plane_isOpen",
   "Iff.mpr",
   "Real.orderedRing",
   "Mathlib.Meta.NormNum.isInt_add",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Complex.instField",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "AbsEise",
   "UpperHalfPlane.upperHalfSpace",
   "HDiv.hDiv",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "Complex.instAddComplex",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Complex.im",
   "MonoidWithZero.toMulZeroOneClass",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Int",
   "Inv.inv",
   "EisensteinSeries.eisenSquareSlice",
   "Exists",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Complex.instInvComplex",
   "AddMonoid.toAddZeroClass",
   "TopologicalSpace.Opens.mk",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "DivInvMonoid.toDiv",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Finset.sum",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "Mathlib.Tactic.Ring.neg_add",
   "Bool.false",
   "Real.instPreorderReal",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Prod",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Mathlib.Tactic.Ring.add_mul",
   "Real.instAddCommMonoidReal",
   "Mathlib.Tactic.Ring.atom_pf",
   "AbsoluteValue.monoidWithZeroHomClass",
   "EisensteinSeries.complex_abs_sum_le",
   "Monoid.toOne",
   "AddGroupWithOne.toSub",
   "MulZeroOneClass.toMulOneClass",
   "Real.instLEReal",
   "Real.instMulReal",
   "Exists.casesOn",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Real.instInvReal",
   "Nat",
   "Finset.sum_congr",
   "EisensteinSeries.square",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "OrderedSemiring.zeroLEOneClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "Int.instAddInt",
   "instHMul",
   "Int.instAddGroupInt",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.instIsDomainRealSemiring",
   "congrArg",
   "map_zpow₀",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "TopologicalSpace.Opens",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "CanLift.prf",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Ring.toNonAssocRing",
   "zpow_ofNat",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "instHPow",
   "Preorder.toLT",
   "Linarith.mul_neg",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "Real.instMonoidReal",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.eisenslice_bounded",
  "constType":
  "∀ (k : ℤ) (n : ℕ),\n  3 ≤ k →\n    ∀ (A B : ℝ),\n      0 ≤ A →\n        ∀ (hb : 0 < B) (z : ↑(EisensteinSeries.upperHalfSpaceSlice A B)),\n          Complex.abs (EisensteinSeries.eisenSquareSlice k A B n z) ≤\n            8 / EisensteinSeries.rfunct (EisensteinSeries.lbpoint A B hb) ^ k * (↑n ^ (k - 1))⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["funext", "congr_arg", "TopologicalSpace", "tsum", "Eq", "AddCommMonoid"],
  "name": "tsum_congr",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} [inst : AddCommMonoid α] [inst_1 : TopologicalSpace α] {f g : β → α},\n  (∀ (b : β), f b = g b) → ∑' (b : β), f b = ∑' (b : β), g b",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MonoidHomClass.toMulHomClass",
   "Real",
   "Semiring.toMonoidWithZero",
   "MulHomClass.toFunLike",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "FunLike.coe",
   "Complex.normSq_eq_zero",
   "Complex.normSq_nonneg",
   "Real.sqrt",
   "NonAssocSemiring.toMulZeroOneClass",
   "Eq",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Iff",
   "Real.semiring",
   "Complex.normSq",
   "Complex",
   "Iff.trans",
   "MonoidWithZero.toZero",
   "MonoidWithZeroHom",
   "Real.sqrt_eq_zero"],
  "name": "Complex.abs.proof_1",
  "constType": "∀ (x : ℂ), Real.sqrt (Complex.normSq x) = 0 ↔ x = 0",
  "constCategory": "Theorem"},
 {"references":
  ["Bornology.IsBounded",
   "Set",
   "PseudoMetricSpace.toUniformSpace",
   "TotallyBounded.isBounded",
   "UniformSpace.toTopologicalSpace",
   "PseudoMetricSpace.toBornology",
   "IsCompact",
   "PseudoMetricSpace",
   "IsCompact.totallyBounded"],
  "name": "IsCompact.isBounded",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α}, IsCompact s → Bornology.IsBounded s",
  "constCategory": "Theorem"},
 {"references":
  ["Group.toDivisionMonoid",
   "OfNat.ofNat",
   "EisensteinSeries.MoebiusPerm_left_inv",
   "Eq.refl",
   "instDecidableEqFin",
   "Fin.fintype",
   "inv_inv",
   "Eq",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Eq.ndrec",
   "Matrix.SpecialLinearGroup",
   "Matrix.SpecialLinearGroup.hasInv",
   "letFun",
   "Eq.mp",
   "instOfNatNat",
   "Prod",
   "InvolutiveInv.toInv",
   "Nat",
   "DivisionMonoid.toInvolutiveInv",
   "EisensteinSeries.MoebiusPerm",
   "Int",
   "Fin",
   "Int.instCommRingInt",
   "Inv.inv"],
  "name": "EisensteinSeries.MoebiusPerm_right_inv",
  "constType":
  "∀ (A : Matrix.SpecialLinearGroup (Fin 2) ℤ) (z : ℤ × ℤ),\n  EisensteinSeries.MoebiusPerm A (EisensteinSeries.MoebiusPerm A⁻¹ z) = z",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "lcProof",
  "constType": "∀ {α : Prop}, α",
  "constCategory": "Axiom"},
 {"references":
  ["Semigroup.toMul",
   "RingHom.instRingHomClass",
   "Real.orderedAddCommGroup",
   "Distrib.toAdd",
   "add_le_add_iff_left",
   "CommSemiring.toSemiring",
   "AddCommSemigroup.toAddCommMagma",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "MulZeroOneClass.toMulOneClass",
   "mul_self_le_mul_self_iff",
   "Real.instLEReal",
   "HAdd.hAdd",
   "Real.instMulReal",
   "Real.instAddReal",
   "Real.instAddMonoidReal",
   "NonUnitalRingHomClass.toMulHomClass",
   "Complex.instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "Iff.mpr",
   "Preorder.toLE",
   "Eq",
   "Semiring.toNatCast",
   "zero_lt_two'",
   "Real.linearOrder",
   "mul_assoc",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "add_nonneg",
   "Real.instCommSemiringReal",
   "Real.strictOrderedSemiring",
   "Complex.normSq",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_nonneg'",
   "add_mul_self_eq",
   "map_mul",
   "Real.sqrt_mul",
   "MonoidWithZeroHom",
   "Nat",
   "Real.instLinearOrderedSemiringReal",
   "instOfNat",
   "Complex.normSq_conj",
   "Real.partialOrder",
   "OrderedSemiring.zeroLEOneClass",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "Real.instAddCommSemigroupReal",
   "Complex.normSq_nonneg",
   "Real.orderedSemiring",
   "Real.sqrt",
   "AddCommMagma.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt",
   "OrderedCancelAddCommMonoid.toContravariantClassLeft",
   "AddCancelMonoid.toIsCancelAdd",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.mul_self_abs",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "mul_le_mul_left",
   "Real.instAddGroupReal",
   "instNatAtLeastTwo",
   "OrderedSemiring.toPosMulMono",
   "AddZeroClass.toAdd",
   "RingHom",
   "Real.natCast",
   "Real",
   "Real.orderedCancelAddCommMonoid",
   "Eq.refl",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "RingHomClass.toNonUnitalRingHomClass",
   "Complex.instSemiringComplex",
   "starRingEnd",
   "AddMonoidWithOne.toNatCast",
   "Real.instSemigroupReal",
   "add_right_comm",
   "AddMonoid.toZero",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "PosMulStrictMono.toPosMulReflectLE",
   "instOfNatNat",
   "NeZero.charZero_one",
   "Eq.symm",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "id",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Complex.instCommSemiringComplex",
   "Ring.toAddGroupWithOne",
   "IsCancelAdd.toIsLeftCancelAdd",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "instHAdd",
   "MonoidHomClass.toMulHomClass",
   "AddMonoidWithOne.toAddMonoid",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "NonUnitalNonAssocSemiring.toMul",
   "LE.le",
   "StrictOrderedSemiring.toSemiring",
   "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.re_le_abs",
   "Complex.re",
   "StrictOrderedSemiring.to_charZero",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "Complex.normSq_add",
   "Real.semiring",
   "Real.instPreorderReal",
   "HMul.hMul",
   "Complex",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "Complex.instMulComplex"],
  "name": "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_add",
  "constType":
  "∀ (z w : ℂ), Real.sqrt (Complex.normSq (z + w)) ≤ Real.sqrt (Complex.normSq z) + Real.sqrt (Complex.normSq w)",
  "constCategory": "Theorem"},
 {"references":
  ["MetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "TopologicalSpace",
   "MetricSpace.toPseudoMetricSpace",
   "TopologicalSpace.MetrizableSpace",
   "Exists.intro",
   "TopologicalSpace.MetrizableSpace.mk",
   "UniformSpace.toTopologicalSpace",
   "rfl",
   "Eq"],
  "name": "MetricSpace.toMetrizableSpace",
  "constType":
  "∀ {X : Type u_5} [m : MetricSpace X], TopologicalSpace.MetrizableSpace X",
  "constCategory": "Definition"},
 {"references": ["CoeOut", "semiOutParam"],
  "name": "CoeOut.mk",
  "constType":
  "{α : Sort u} → {β : semiOutParam (Sort v)} → (α → β) → CoeOut α β",
  "constCategory": "Other"},
 {"references":
  ["LinearOrderedAddCommGroup",
   "Neg.toHasAbs",
   "AddCommGroup.toDivisionAddCommMonoid",
   "OfNat.ofNat",
   "OrderedAddCommGroup.toPartialOrder",
   "PartialOrder.toPreorder",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "instDistribLattice",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "abs_eq_self",
   "LE.le",
   "Preorder.toLE",
   "Abs.abs",
   "Eq",
   "Zero.toOfNat0",
   "DistribLattice.toLattice",
   "SemilatticeSup.toSup",
   "propext",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "Lattice.toSemilatticeSup",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name": "Mathlib.Algebra.Order.Group.Abs._auxLemma.9",
  "constType":
  "∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α] {a : α}, (|a| = a) = (0 ≤ a)",
  "constCategory": "Theorem"},
 {"references": ["Exists"],
  "name": "Exists.intro",
  "constType": "∀ {α : Sort u} {p : α → Prop} (w : α), p w → Exists p",
  "constCategory": "Other"},
 {"references":
  ["instHSub",
   "Eq.ndrec",
   "Ring.toSub",
   "HSub.hSub",
   "Ring",
   "Eq.refl",
   "Eq.symm",
   "Eq"],
  "name": "Mathlib.Tactic.Ring.sub_congr",
  "constType":
  "∀ {R : Type u_1} [inst : Ring R] {a a' b b' c : R}, a = a' → b = b' → a' - b' = c → a - b = c",
  "constCategory": "Theorem"},
 {"references": ["LinearOrderedSemifield", "Inv"],
  "name": "LinearOrderedSemifield.toInv",
  "constType": "{α : Type u_2} → [self : LinearOrderedSemifield α] → Inv α",
  "constCategory": "Definition"},
 {"references": ["And", "propext", "true_and_iff", "True", "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.21",
  "constType": "∀ (p : Prop), (True ∧ p) = p",
  "constCategory": "Theorem"},
 {"references": ["EStateM.Result"],
  "name": "EStateM.Result.ok",
  "constType": "{ε σ α : Type u} → α → σ → EStateM.Result ε σ α",
  "constCategory": "Other"},
 {"references":
  ["SemilatticeSup",
   "Exists",
   "PartialOrder.toPreorder",
   "propext",
   "GE.ge",
   "Filter.eventually_atTop",
   "Filter.Eventually",
   "Filter.atTop",
   "Preorder.toLE",
   "SemilatticeSup.toPartialOrder",
   "Nonempty",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.23",
  "constType":
  "∀ {α : Type u_3} [inst : SemilatticeSup α] [inst_1 : Nonempty α] {p : α → Prop},\n  (∀ᶠ (x : α) in Filter.atTop, p x) = ∃ a, ∀ b ≥ a, p b",
  "constCategory": "Theorem"},
 {"references":
  ["MulOneClass.toMul",
   "DivisionRing",
   "NonUnitalNonAssocRing.toMul",
   "instHDiv",
   "DivisionRing.toRing",
   "div_eq_mul_inv",
   "Mathlib.Meta.NormNum.IsRat",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Ring.toNonAssocRing",
   "DivisionRing.toInv",
   "Eq",
   "DivInvMonoid.toInv",
   "instHMul",
   "Eq.mpr",
   "HMul.hMul",
   "HDiv.hDiv",
   "Nat",
   "congrArg",
   "DivisionRing.toDivInvMonoid",
   "Int",
   "Mathlib.Meta.NormNum.isRat_div.match_1",
   "DivisionRing.toDiv",
   "DivInvMonoid.toDiv",
   "congrFun",
   "id",
   "Inv.inv"],
  "name": "Mathlib.Meta.NormNum.isRat_div",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionRing α] {a b : α} {cn : ℤ} {cd : ℕ},\n  Mathlib.Meta.NormNum.IsRat (a * b⁻¹) cn cd → Mathlib.Meta.NormNum.IsRat (a / b) cn cd",
  "constCategory": "Theorem"},
 {"references": ["IsSymm", "IsSymm.symm"],
  "name": "symm",
  "constType":
  "∀ {α : Type u} {r : α → α → Prop} [inst : IsSymm α r] {a b : α}, r a b → r b a",
  "constCategory": "Theorem"},
 {"references":
  ["instHSub",
   "Complex.im",
   "Complex.instSubComplex",
   "Real.instSubReal",
   "Real",
   "HSub.hSub",
   "Complex",
   "rfl",
   "Eq"],
  "name": "Complex.sub_im",
  "constType": "∀ (z w : ℂ), (z - w).im = z.im - w.im",
  "constCategory": "Theorem"},
 {"references":
  ["ModularForm.instZero",
   "OfNat.ofNat",
   "instOfNatInt",
   "Top.top",
   "Subgroup.instTopSubgroup",
   "instDecidableEqFin",
   "Fin.fintype",
   "LE.le",
   "ModularForm",
   "Eq",
   "Zero.toOfNat0",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Matrix.SpecialLinearGroup",
   "Int.instSemiringInt",
   "Subgroup",
   "EisensteinSeries.ModularForms_Top_Odd_Wt_eq_zero",
   "instOfNatNat",
   "Odd",
   "EisensteinSeries.EisensteinSeriesModularForm",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Int.instLEInt",
   "Fin"],
  "name": "EisensteinSeries.eiseinsteinSeries_Odd_wt_eq_zero",
  "constType":
  "∀ (k : ℤ) (hk : 3 ≤ k), Odd k → EisensteinSeries.EisensteinSeriesModularForm k hk = 0",
  "constCategory": "Theorem"},
 {"references":
  ["instHSMul",
   "AddSemigroup.mk",
   "AddSemigroup.toAdd",
   "Pi.addMonoid.proof_1",
   "AddMonoid.toAddZeroClass",
   "Pi.addMonoid.proof_5",
   "AddSemigroup",
   "Pi.addSemigroup",
   "AddMonoid",
   "AddMonoid.mk",
   "AddMonoid.toNatSMul",
   "AddZeroClass.toZero",
   "Pi.addMonoid.proof_2",
   "AddMonoid.toAddSemigroup",
   "Pi.addMonoid.proof_4",
   "HSMul.hSMul",
   "Pi.addMonoid.proof_3",
   "Nat",
   "Pi.addZeroClass",
   "AddZeroClass"],
  "name": "Pi.addMonoid",
  "constType":
  "{I : Type u} → {f : I → Type v} → [inst : (i : I) → AddMonoid (f i)] → AddMonoid ((i : I) → f i)",
  "constCategory": "Definition"},
 {"references":
  ["NNReal.toReal",
   "RelIso.instRelHomClassRelIso",
   "NNReal.sqrt",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Real",
   "Real.toNNReal",
   "instNNRealStrictOrderedSemiring",
   "RelIso",
   "FunLike.coe",
   "LE.le",
   "NNReal",
   "Preorder.toLE",
   "RelHomClass.toFunLike"],
  "name": "Real.sqrt",
  "constType": "ℝ → ℝ",
  "constCategory": "Definition"},
 {"references": ["CommGroupWithZero", "CommMonoidWithZero"],
  "name": "CommGroupWithZero.toCommMonoidWithZero",
  "constType":
  "{G₀ : Type u_4} → [self : CommGroupWithZero G₀] → CommMonoidWithZero G₀",
  "constCategory": "Definition"},
 {"references":
  ["Module.zero_smul",
   "DistribMulAction.toMulAction",
   "Module.toMulActionWithZero.proof_2",
   "Module.toDistribMulAction",
   "Semiring",
   "MulActionWithZero.mk",
   "Semiring.toMonoidWithZero",
   "MulActionWithZero",
   "AddCommMonoid.toAddMonoid",
   "Module.toMulActionWithZero.proof_3",
   "inferInstance",
   "MulAction.toSMul",
   "MonoidWithZero.toMonoid",
   "MulAction.mk",
   "AddMonoid.toZero",
   "Module",
   "MulAction",
   "Module.toMulActionWithZero.proof_1",
   "AddCommMonoid"],
  "name": "Module.toMulActionWithZero",
  "constType":
  "{R : Type u_2} →\n  {M : Type u_5} → [inst : Semiring R] → [inst_1 : AddCommMonoid M] → [inst_2 : Module R M] → MulActionWithZero R M",
  "constCategory": "Definition"},
 {"references":
  ["NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Mathlib.Meta.NormNum.IsNat.to_eq",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Nat.cast_nonneg",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "rfl",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Eq.ndrec",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Mathlib.Meta.NormNum.IsNat",
   "OrderedSemiring.toSemiring",
   "Nat",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPartialOrder",
   "id"],
  "name": "Mathlib.Meta.Positivity.nonneg_of_isNat",
  "constType":
  "∀ {A : Type u_1} {e : A} {n : ℕ} [inst : OrderedSemiring A], Mathlib.Meta.NormNum.IsNat e n → 0 ≤ e",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.im",
   "instHAdd",
   "Complex.mk",
   "Real.instAddReal",
   "Real",
   "HAdd.hAdd",
   "Complex",
   "Add",
   "Complex.re",
   "Add.mk"],
  "name": "Complex.instAddComplex",
  "constType": "Add ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Finset.disjUnion",
   "Membership.mem",
   "Mathlib.Data.Finset.Basic._auxLemma.80",
   "Or",
   "Union.union",
   "Disjoint",
   "Finset.partialOrder",
   "Finset.instMembershipFinset",
   "True",
   "Eq",
   "iff_self",
   "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
   "Iff",
   "DecidableEq",
   "of_eq_true",
   "Finset.ext",
   "Finset",
   "congr",
   "Mathlib.Data.Finset.Basic._auxLemma.62",
   "congrArg",
   "Eq.trans",
   "Finset.instUnionFinset"],
  "name": "Finset.disjUnion_eq_union",
  "constType":
  "∀ {α : Type u_1} [inst : DecidableEq α] (s t : Finset α) (h : Disjoint s t), Finset.disjUnion s t h = s ∪ t",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "AddZeroClass.toAdd",
   "AddZeroClass.toZero",
   "OfNat.ofNat",
   "Preorder.toLT",
   "instHAdd",
   "LT.lt",
   "HAdd.hAdd",
   "CovariantClass",
   "Preorder",
   "add_lt_of_lt_of_neg",
   "AddZeroClass"],
  "name": "Left.add_neg",
  "constType":
  "∀ {α : Type u_1} [inst : AddZeroClass α] [inst_1 : Preorder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x < x_1] {a b : α}, a < 0 → b < 0 → a + b < 0",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "instHAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Semiring.toMonoidWithZero",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "eq_true",
   "Semiring.toNonAssocSemiring",
   "of_eq_true",
   "Preorder.toLT",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "OrderedSemiring.toSemiring",
   "MonoidWithZero.toZero",
   "add_zero",
   "congrArg",
   "Eq.trans",
   "OrderedSemiring.toPartialOrder",
   "congrFun"],
  "name": "Linarith.lt_of_lt_of_eq",
  "constType":
  "∀ {α : Type u_1} [inst : OrderedSemiring α] {a b : α}, a < 0 → b = 0 → a + b < 0",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "CommSemiring.toSemiring",
   "MulOneClass.toMul",
   "instAddNat",
   "instHAdd",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocSemiring.toMul",
   "Monoid.toMulOneClass",
   "True",
   "pow_add",
   "Eq",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "of_eq_true",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "Monoid.toNatPow",
   "HMul.hMul",
   "Nat",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.pow_add",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a : R} {b₁ : ℕ} {c₁ : R} {b₂ : ℕ} {c₂ d : R},\n  a ^ b₁ = c₁ → a ^ b₂ = c₂ → c₁ * c₂ = d → a ^ (b₁ + b₂) = d",
  "constCategory": "Theorem"},
 {"references": ["outParam", "HDiv"],
  "name": "HDiv.hDiv",
  "constType":
  "{α : Type u} → {β : Type v} → {γ : outParam (Type w)} → [self : HDiv α β γ] → α → β → γ",
  "constCategory": "Definition"},
 {"references":
  ["instHMul",
   "NonUnitalNonAssocRing.toMul",
   "Int.instMulInt",
   "NonAssocRing.toIntCast",
   "NonAssocRing",
   "Int.cast",
   "HMul.hMul",
   "Int.cast_mul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Eq.symm",
   "Int",
   "Eq"],
  "name": "Mathlib.Data.Int.Basic._auxLemma.1",
  "constType":
  "∀ {α : Type u_1} [inst : NonAssocRing α] (m n : ℤ), ↑m * ↑n = ↑(m * n)",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "mul_lt_mul_of_neg_right",
   "OfNat.ofNat",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "PartialOrder.toPreorder",
   "Semiring.toMonoidWithZero",
   "MulZeroClass.zero_mul",
   "NonUnitalNonAssocSemiring.toMul",
   "ExistsAddOfLE",
   "StrictOrderedSemiring.toSemiring",
   "MulZeroClass.toMul",
   "Preorder.toLE",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Zero.toOfNat0",
   "instHMul",
   "StrictOrderedSemiring",
   "Semiring.toNonAssocSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Preorder.toLT",
   "LT.lt",
   "Eq.mp",
   "MulZeroClass.toZero",
   "HMul.hMul",
   "MonoidWithZero.toZero",
   "congrArg",
   "congrFun"],
  "name": "mul_pos_of_neg_of_neg",
  "constType":
  "∀ {α : Type u} [inst : StrictOrderedSemiring α] [inst_1 : ExistsAddOfLE α] {a b : α}, a < 0 → b < 0 → 0 < a * b",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Set",
   "PartialEquiv.refl",
   "Inter.inter",
   "Set.univ",
   "PartialEquiv.ext",
   "rfl",
   "Set.inter_univ",
   "True",
   "PartialEquiv",
   "Eq",
   "PartialEquiv.source",
   "of_eq_true",
   "PartialEquiv.toFun",
   "congrArg",
   "PartialEquiv.symm",
   "PartialEquiv.trans",
   "Eq.trans",
   "Set.instInterSet",
   "congrFun"],
  "name": "PartialEquiv.trans_refl",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} (e : PartialEquiv α β), PartialEquiv.trans e (PartialEquiv.refl β) = e",
  "constCategory": "Theorem"},
 {"references":
  ["Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_17",
   "Semigroup.toMul",
   "zpowRec",
   "CommSemiring.toSemiring",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_11",
   "OfNat.ofNat",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_2",
   "Monoid.mk",
   "MulOneClass.toMul",
   "Matrix.SpecialLinearGroup.instPowSpecialLinearGroupNat",
   "Monoid.toOne",
   "Subtype.val",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_12",
   "Semiring.toMonoidWithZero",
   "Matrix.SpecialLinearGroup.hasMul",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_5",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_9",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_1",
   "Inv",
   "CommRing",
   "Inv.mk",
   "Eq",
   "Matrix.SpecialLinearGroup.monoid",
   "Matrix.det",
   "Fintype",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_6",
   "Group.mk",
   "Div.mk",
   "Matrix.SpecialLinearGroup.hasInv",
   "Matrix",
   "Group",
   "Nat",
   "Semigroup.mk",
   "HPow.hPow",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_4",
   "Monoid.toSemigroup",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_8",
   "Monoid",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_18",
   "MulOneClass.toOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_7",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_13",
   "Matrix.semiring",
   "One.toOfNat1",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_16",
   "DivInvMonoid.mk",
   "DivInvMonoid.div'",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_14",
   "Matrix.adjugate",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_10",
   "Monoid.toMulOneClass",
   "Matrix.SpecialLinearGroup.hasOne",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup",
   "DecidableEq",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_15",
   "Function.Injective.mulOneClass",
   "Subtype.mk",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup.proof_3",
   "Monoid.npow",
   "Inv.inv"],
  "name": "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
  "constType":
  "{n : Type u} →\n  [inst : DecidableEq n] →\n    [inst_1 : Fintype n] → {R : Type v} → [inst_2 : CommRing R] → Group (Matrix.SpecialLinearGroup n R)",
  "constCategory": "Definition"},
 {"references": ["True.intro", "True"],
  "name": "trivial",
  "constType": "True",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "AddCommSemigroup.toAddCommMagma",
   "instHAdd",
   "HAdd.hAdd",
   "AddCommMagma.toAdd",
   "add_left_comm",
   "True",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "congrArg",
   "AddCommMonoid.toAddCommSemigroup",
   "Eq.trans"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_gt",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a b₂ c : R} (b₁ : R), a + b₂ = c → a + (b₁ + b₂) = b₁ + c",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Subtype.val",
   "Matrix.semiring",
   "Semiring.toMonoidWithZero",
   "instDecidableEqFin",
   "Eq.refl",
   "One.toOfNat1",
   "Fin.fintype",
   "Eq",
   "Semiring.toOne",
   "Matrix.det",
   "Matrix.SpecialLinearGroup.coeToGL",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup",
   "MonoidWithZero.toMonoid",
   "Units.val",
   "Matrix",
   "instOfNatNat",
   "Nat",
   "Int",
   "Fin",
   "Int.instCommRingInt"],
  "name": "EisensteinSeries.slcoe",
  "constType":
  "∀ (M : Matrix.SpecialLinearGroup (Fin 2) ℤ) (i j : Fin 2), ↑↑M i j = ↑M i j",
  "constCategory": "Theorem"},
 {"references": ["DivisionRing", "RatCast"],
  "name": "DivisionRing.toRatCast",
  "constType": "{K : Type u} → [self : DivisionRing K] → RatCast K",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedAddCommMonoid.toLinearOrder",
   "Monotone.reflect_lt",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Semiring.toMonoidWithZero",
   "PosMulReflectLT",
   "NonUnitalNonAssocSemiring.toMul",
   "LE.le",
   "StrictOrderedSemiring.toSemiring",
   "Preorder.toLE",
   "Subtype.property",
   "Zero.toOfNat0",
   "monotone_mul_left_of_nonneg",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "StrictOrderedSemiring.toOrderedSemiring",
   "Preorder.toLT",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "OrderedSemiring.toSemiring",
   "LinearOrderedSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "HMul.hMul",
   "LinearOrderedSemiring.toLinearOrderedAddCommMonoid",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPartialOrder",
   "ContravariantClass.mk",
   "Subtype"],
  "name": "LinearOrderedSemiring.toPosMulReflectLT",
  "constType":
  "∀ {α : Type u} [inst : LinearOrderedSemiring α], PosMulReflectLT α",
  "constCategory": "Definition"},
 {"references":
  ["instHMul",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "HMul.hMul",
   "Neg.neg",
   "HasDistribNeg.mul_neg",
   "HasDistribNeg",
   "Mul",
   "Eq"],
  "name": "mul_neg",
  "constType":
  "∀ {α : Type u} [inst : Mul α] [inst_1 : HasDistribNeg α] (a b : α), a * -b = -(a * b)",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "MulOneClass.toMul",
   "instHDiv",
   "div_eq_mul_inv",
   "DivInvMonoid.toMonoid",
   "CommMagma.toMul",
   "Monoid.toMulOneClass",
   "True",
   "CommMonoid.toCommSemigroup",
   "DivInvMonoid.toInv",
   "Eq",
   "mul_comm",
   "instHMul",
   "of_eq_true",
   "DivisionCommMonoid.toDivisionMonoid",
   "CommSemigroup.toCommMagma",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionCommMonoid.toCommMonoid",
   "congr",
   "DivisionCommMonoid",
   "HMul.hMul",
   "HDiv.hDiv",
   "congrArg",
   "DivisionMonoid.toDivInvOneMonoid",
   "InvOneClass.toInv",
   "Eq.trans",
   "DivInvMonoid.toDiv",
   "Inv.inv"],
  "name": "div_eq_inv_mul",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionCommMonoid α] (a b : α), a / b = b⁻¹ * a",
  "constCategory": "Theorem"},
 {"references": ["Semiring", "CommSemiring"],
  "name": "CommSemiring.toSemiring",
  "constType": "{R : Type u} → [self : CommSemiring R] → Semiring R",
  "constCategory": "Definition"},
 {"references":
  ["instHSub",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "OfNat.ofNat",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing.proof_3",
   "Int.instSubInt",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "Ring.toAddGroupWithOne",
   "instOfNatInt",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing.proof_4",
   "instHAdd",
   "HAdd.hAdd",
   "HSub.hSub",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing.proof_2",
   "addLeftEmbedding",
   "Int.linearOrderedCommRing",
   "Nat.castEmbedding",
   "LocallyFiniteOrder",
   "Function.Embedding.trans",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing.proof_5",
   "LocallyFiniteOrder.mk",
   "Int.instAddInt",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing.proof_6",
   "Finset.map",
   "Int.instRingInt",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing.proof_1",
   "Int.toNat",
   "Finset.range",
   "Nat",
   "Int"],
  "name":
  "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
  "constType": "LocallyFiniteOrder ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "linear_ne_zero''",
   "instOfNatInt",
   "HAdd.hAdd",
   "DivInvMonoid.Pow",
   "Nat.cast_zero",
   "Eq",
   "Zero.toOfNat0",
   "Complex.Complex.addGroupWithOne",
   "Eq.mpr",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "instHPow",
   "Ring.toIntCast",
   "AddMonoid.toZero",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Eq.symm",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "id",
   "HPow.hPow",
   "Ne",
   "zpow_ne_zero",
   "Complex.instZeroComplex",
   "AddGroupWithOne.toAddMonoidWithOne",
   "DivisionSemiring.toGroupWithZero",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Field.toSemifield",
   "UpperHalfPlane.coe",
   "Complex.instRingComplex",
   "Complex.instAddComplex",
   "instHMul",
   "Int.cast",
   "HMul.hMul",
   "Semifield.toDivisionSemiring",
   "Complex",
   "Not",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "Int",
   "Complex.instMulComplex"],
  "name": "pow_linear_ne_zero''",
  "constType":
  "∀ (c d : ℤ) (z : UpperHalfPlane), d ≠ 0 → ∀ (k : ℤ), (↑c * ↑z + ↑d) ^ k ≠ 0",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "StrictOrderedRing.toPartialOrder",
   "Ne",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "Zero.toOfNat0",
   "MonoidWithZero.toMonoid",
   "LinearOrderedRing",
   "instHPow",
   "pow_bit0_pos",
   "Preorder.toLT",
   "LT.lt",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "instOfNatNat",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "MonoidWithZero.toZero",
   "Nat"],
  "name": "sq_pos_of_ne_zero",
  "constType":
  "∀ {R : Type u_2} [inst : LinearOrderedRing R] (a : R), a ≠ 0 → 0 < a ^ 2",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "NonUnitalRing.mk",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_1",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_9",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_3",
   "SeminormedRing.toPseudoMetricSpace",
   "AddCommMonoid.toAddMonoid",
   "SeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_5",
   "Ring.toNeg",
   "SeminormedRing.toNorm",
   "NonUnitalSeminormedCommRing.mk",
   "Ring.toSub",
   "NonUnitalSeminormedRing.mk",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_8",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_6",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_13",
   "AddCommGroup.mk",
   "SeminormedCommRing.mul_comm",
   "NonUnitalSeminormedCommRing",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_10",
   "AddGroup.mk",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_4",
   "NonUnitalNonAssocSemiring.toMul",
   "Ring.toSemiring",
   "NonUnitalNonAssocRing.mk",
   "SubNegMonoid.mk",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_7",
   "Ring.zsmul",
   "SeminormedRing.toRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_2",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_11",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing.proof_12"],
  "name": "SeminormedCommRing.toNonUnitalSeminormedCommRing",
  "constType":
  "{α : Type u_1} → [β : SeminormedCommRing α] → NonUnitalSeminormedCommRing α",
  "constCategory": "Definition"},
 {"references": ["Units", "Monoid"],
  "name": "Units.val",
  "constType": "{α : Type u} → [inst : Monoid α] → αˣ → α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Complex.mk",
   "LT.lt",
   "Real",
   "EisensteinSeries.lbpoint.proof_1",
   "UpperHalfPlane",
   "Complex",
   "Subtype.mk"],
  "name": "EisensteinSeries.lbpoint",
  "constType": "ℝ → (B : ℝ) → 0 < B → UpperHalfPlane",
  "constCategory": "Definition"},
 {"references": ["LinearOrderedSemifield", "Div"],
  "name": "LinearOrderedSemifield.toDiv",
  "constType": "{α : Type u_2} → [self : LinearOrderedSemifield α] → Div α",
  "constCategory": "Definition"},
 {"references":
  ["MulOneClass.toMul",
   "div_eq_mul_inv",
   "True",
   "Eq",
   "mul_pow",
   "DivisionCommMonoid.toDivisionMonoid",
   "instHPow",
   "DivisionCommMonoid.toCommMonoid",
   "Monoid.toNatPow",
   "DivisionCommMonoid",
   "HDiv.hDiv",
   "Nat",
   "CommMonoid.toMonoid",
   "InvOneClass.toInv",
   "Eq.trans",
   "DivInvMonoid.toDiv",
   "HPow.hPow",
   "eq_self",
   "inv_pow",
   "instHDiv",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toInv",
   "instHMul",
   "of_eq_true",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "congr",
   "DivisionMonoid.toDivInvOneMonoid",
   "congrArg",
   "Inv.inv",
   "congrFun"],
  "name": "div_pow",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionCommMonoid α] (a b : α) (n : ℕ), (a / b) ^ n = a ^ n / b ^ n",
  "constCategory": "Theorem"},
 {"references":
  ["Array", "Lean.SyntaxNodeKind", "Lean.SourceInfo", "Lean.Syntax"],
  "name": "Lean.Syntax.node",
  "constType":
  "Lean.SourceInfo → Lean.SyntaxNodeKind → Array Lean.Syntax → Lean.Syntax",
  "constCategory": "Other"},
 {"references": ["Semiring", "Ring"],
  "name": "Ring.toSemiring",
  "constType": "{R : Type u} → [self : Ring R] → Semiring R",
  "constCategory": "Definition"},
 {"references":
  ["Metric.closedBall",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "UniformSpace.toTopologicalSpace",
   "ProperSpace",
   "IsCompact",
   "PseudoMetricSpace"],
  "name": "ProperSpace.isCompact_closedBall",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] [self : ProperSpace α] (x : α) (r : ℝ), IsCompact (Metric.closedBall x r)",
  "constCategory": "Definition"},
 {"references":
  ["Neg.toHasAbs",
   "Real.orderedAddCommGroup",
   "Distrib.toAdd",
   "Complex.abs",
   "PartialOrder.toPreorder",
   "Real",
   "AbsoluteValue",
   "Real.instSupReal",
   "FunLike.coe",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "Abs.abs",
   "AbsoluteValue.nonneg",
   "Preorder.toLE",
   "abs_of_nonneg",
   "Real.instNegReal",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "AbsoluteValue.subadditiveHomClass",
   "Real.linearOrder",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Real.instAddGroupReal",
   "Complex",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "OrderedSemiring.toPartialOrder"],
  "name": "Complex.abs_abs",
  "constType": "∀ (z : ℂ), |Complex.abs z| = Complex.abs z",
  "constCategory": "Theorem"},
 {"references":
  ["Neg.toHasAbs",
   "instHSub",
   "OfNat.ofNat",
   "Dist.mk",
   "Real.instLEReal",
   "Real",
   "Real.instSubReal",
   "HSub.hSub",
   "Real.instSupReal",
   "Real.pseudoMetricSpace.proof_1",
   "UniformSpace.ofDist",
   "abs_sub_le",
   "Real.pseudoMetricSpace.proof_3",
   "Real.instLinearOrderedAddCommGroupReal",
   "Real.pseudoMetricSpace.proof_4",
   "LE.le",
   "Abs.abs",
   "Real.instNegReal",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Real.linearOrder",
   "Real.pseudoMetricSpace.proof_5",
   "Real.instAddGroupReal",
   "Bornology.ofDist",
   "PseudoMetricSpace",
   "Subtype.mk",
   "PseudoMetricSpace.mk",
   "abs_sub_comm",
   "Real.pseudoMetricSpace.proof_2",
   "ENNReal.ofNNReal"],
  "name": "Real.pseudoMetricSpace",
  "constType": "PseudoMetricSpace ℝ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "HAdd.hAdd",
   "abs_pos",
   "AddGroup.toSubtractionMonoid",
   "Preorder.toLE",
   "Abs.abs",
   "Eq",
   "Zero.toOfNat0",
   "AddGroup",
   "SemilatticeSup.toSup",
   "AddMonoid.toAddSemigroup",
   "Preorder.toLT",
   "Lattice.toSemilatticeSup",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Neg.toHasAbs",
   "Ne",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "AddSemigroup.toAdd",
   "instHAdd",
   "instDistribLattice",
   "SemilatticeInf.toPartialOrder",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "DistribLattice.toLattice",
   "propext",
   "LT.lt",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg"],
  "name": "Mathlib.Algebra.Order.Group.Abs._auxLemma.5",
  "constType":
  "∀ {α : Type u_1} [inst : AddGroup α] [inst_1 : LinearOrder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] {a : α}, (0 < |a|) = (a ≠ 0)",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Multiset.mem_ndunion",
   "Or",
   "Iff",
   "DecidableEq",
   "Union.union",
   "Finset",
   "Finset.val",
   "Finset.instMembershipFinset",
   "Finset.instUnionFinset"],
  "name": "Finset.mem_union",
  "constType":
  "∀ {α : Type u_1} [inst : DecidableEq α] {s t : Finset α} {a : α}, a ∈ s ∪ t ↔ a ∈ s ∨ a ∈ t",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "Real.semiring",
   "Real",
   "Semiring.toMonoidWithZero",
   "MonoidWithZero"],
  "name": "Real.instMonoidWithZeroReal",
  "constType": "MonoidWithZero ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "PseudoMetricSpace.toDist",
   "Real.instLTReal",
   "propext",
   "LT.lt",
   "Set",
   "Real",
   "Metric.mem_ball",
   "Metric.ball",
   "PseudoMetricSpace",
   "Eq",
   "Dist.dist",
   "Set.instMembershipSet"],
  "name": "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.7",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {x y : α} {ε : ℝ}, (y ∈ Metric.ball x ε) = (dist y x < ε)",
  "constCategory": "Theorem"},
 {"references": ["LinearOrderedCommMonoid", "OrderedCommMonoid"],
  "name": "LinearOrderedCommMonoid.toOrderedCommMonoid",
  "constType":
  "{α : Type u_3} → [self : LinearOrderedCommMonoid α] → OrderedCommMonoid α",
  "constCategory": "Definition"},
 {"references":
  ["Mathlib.Meta.NormNum.IsInt.mk",
   "Ring",
   "Int.rawCast",
   "Mathlib.Meta.NormNum.IsInt",
   "rfl",
   "Int"],
  "name": "Mathlib.Meta.NormNum.IsInt.of_raw",
  "constType":
  "∀ (α : Type u_1) [inst : Ring α] (n : ℤ), Mathlib.Meta.NormNum.IsInt (Int.rawCast n) n",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "Complex.abs",
   "PartialOrder.toPreorder",
   "Complex.abs_of_nonneg",
   "Real.natCast",
   "Real",
   "AbsoluteValue",
   "FunLike.coe",
   "Nat.cast_nonneg",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "Preorder.toLE",
   "Semiring.toNatCast",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Complex",
   "Nat",
   "OrderedSemiring.toPartialOrder"],
  "name": "Complex.abs_natCast",
  "constType": "∀ (n : ℕ), Complex.abs ↑n = ↑n",
  "constCategory": "Theorem"},
 {"references": ["semiOutParam"],
  "name": "Coe",
  "constType": "semiOutParam (Sort u) → Sort v → Sort (max (max 1 u) v)",
  "constCategory": "Other"},
 {"references": ["Lean.SyntaxNodeKind", "Nat", "Lean.ParserDescr"],
  "name": "Lean.ParserDescr.node",
  "constType": "Lean.SyntaxNodeKind → ℕ → Lean.ParserDescr → Lean.ParserDescr",
  "constCategory": "Other"},
 {"references":
  ["Distrib.toAdd",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "OfNat.ofNat",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "PartialOrder.toPreorder",
   "OrderedRing",
   "GE.ge",
   "Semiring.toMonoidWithZero",
   "AddGroup.toSubtractionMonoid",
   "OrderedAddCommGroup.toOrderedCancelAddCommMonoid",
   "IsCancelAdd.toIsRightCancelAdd",
   "Preorder.toLE",
   "Ring.toNonAssocRing",
   "AddGroupWithOne.toAddGroup",
   "Zero.toOfNat0",
   "OrderedRing.toRing",
   "Semiring.toNonAssocSemiring",
   "Ring.toNeg",
   "Mathlib.Algebra.Order.Group.Defs._auxLemma.4",
   "InvolutiveNeg.toNeg",
   "Preorder.toLT",
   "HasDistribNeg.toInvolutiveNeg",
   "AddGroup.toAddCancelMonoid",
   "OrderedRing.toOrderedSemiring",
   "Std.Classes.Order._auxLemma.3",
   "le_of_lt",
   "neg_mul",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "Eq.trans",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "neg_neg_of_pos",
   "OrderedRing.toOrderedAddCommGroup",
   "AddGroup.existsAddOfLE",
   "Neg.neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "mul_nonneg_of_nonpos_of_nonpos",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OrderedRing.toPartialOrder",
   "instHMul",
   "AddCancelMonoid.toIsCancelAdd",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Eq.mp",
   "letFun",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "MonoidWithZero.toZero",
   "congrArg",
   "NegZeroClass.toZero",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "OrderedSemiring.toPartialOrder",
   "congrFun"],
  "name": "Linarith.mul_nonpos",
  "constType":
  "∀ {α : Type u_1} [inst : OrderedRing α] {a b : α}, a ≤ 0 → 0 < b → b * a ≤ 0",
  "constCategory": "Theorem"},
 {"references": ["Lean.MonadQuotation", "Lean.MacroScope"],
  "name": "Lean.MonadQuotation.getCurrMacroScope",
  "constType":
  "{m : Type → Type} → [self : Lean.MonadQuotation m] → m Lean.MacroScope",
  "constCategory": "Definition"},
 {"references": ["Lean.SyntaxNodeKinds"],
  "name": "Lean.TSyntax",
  "constType": "Lean.SyntaxNodeKinds → Type",
  "constCategory": "Other"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Iff",
   "Real.instLTReal",
   "Subtype.coe_inj",
   "Real",
   "LT.lt",
   "UpperHalfPlane.coe",
   "Complex",
   "UpperHalfPlane",
   "Eq"],
  "name": "UpperHalfPlane.ext_iff",
  "constType": "∀ {a b : UpperHalfPlane}, ↑a = ↑b ↔ a = b",
  "constCategory": "Theorem"},
 {"references": ["LinearOrderedField", "Div"],
  "name": "LinearOrderedField.toDiv",
  "constType": "{α : Type u_2} → [self : LinearOrderedField α] → Div α",
  "constCategory": "Definition"},
 {"references":
  ["AddCommGroup.toDivisionAddCommMonoid",
   "OfNat.ofNat",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "Iff.rfl",
   "Eq.refl",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "abs_eq_max_neg",
   "Abs.abs",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "Eq.mpr",
   "SemilatticeSup.toSup",
   "Iff",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "Lattice.toSemilatticeSup",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "Neg.toHasAbs",
   "LinearOrderedAddCommGroup",
   "max_eq_left_iff",
   "Lattice.toSemilatticeInf",
   "instDistribLattice",
   "SemilatticeInf.toPartialOrder",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "DistribLattice.toLattice",
   "Eq.ndrec",
   "propext",
   "Max.max",
   "LinearOrder.toMax",
   "neg_le_self_iff",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name": "abs_eq_self",
  "constType":
  "∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α] {a : α}, |a| = a ↔ 0 ≤ a",
  "constCategory": "Theorem"},
 {"references": ["Preorder.toLT", "LT.lt", "lt_irrefl", "Not", "Preorder"],
  "name": "Linarith.lt_irrefl",
  "constType": "∀ {α : Type u} [inst : Preorder α] {a : α}, ¬a < a",
  "constCategory": "Theorem"},
 {"references": ["StrictOrderedRing", "Ring"],
  "name": "StrictOrderedRing.toRing",
  "constType": "{α : Type u} → [self : StrictOrderedRing α] → Ring α",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "upper_half_plane_isOpen",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "UpperHalfPlane",
   "Complex",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace",
   "Subtype"],
  "name": "EisensteinSeries.holExtn",
  "constType":
  "(UpperHalfPlane → ℂ) → ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["NeZero",
   "Fin.ofNat'",
   "Nat.linearOrderedCommMonoidWithZero",
   "OfNat",
   "LinearOrderedCommMonoidWithZero.toZero",
   "Fin.instOfNatFin.proof_1",
   "OfNat.mk",
   "Nat",
   "Fin"],
  "name": "Fin.instOfNatFin",
  "constType": "{n a : ℕ} → [inst : NeZero n] → OfNat (Fin n) a",
  "constCategory": "Definition"},
 {"references":
  ["MetricSpace",
   "Real",
   "Real.metricSpace.proof_1",
   "Real.pseudoMetricSpace",
   "MetricSpace.ofT0PseudoMetricSpace"],
  "name": "Real.metricSpace",
  "constType": "MetricSpace ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "TopologicalSpace.Opens",
   "TopologicalSpace.Opens.mem_mk",
   "propext",
   "Set",
   "TopologicalSpace",
   "TopologicalSpace.Opens.mk",
   "IsOpen",
   "SetLike.instMembership",
   "Eq",
   "Set.instMembershipSet"],
  "name": "Mathlib.Topology.Sets.Opens._auxLemma.1",
  "constType":
  "∀ {α : Type u_2} [inst : TopologicalSpace α] {x : α} {U : Set α} {h : IsOpen U},\n  (x ∈ { carrier := U, is_open' := h }) = (x ∈ U)",
  "constCategory": "Theorem"},
 {"references": ["Eq.ndrec", "Eq.refl", "Eq.symm", "Eq"],
  "name": "Mathlib.Tactic.Ring.of_eq",
  "constType": "∀ {R : Type u_1} {a c b : R}, a = c → b = c → a = b",
  "constCategory": "Theorem"},
 {"references":
  ["Finset.disjUnion",
   "Finset.card",
   "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
   "Multiset.card_add",
   "instAddNat",
   "instHAdd",
   "HAdd.hAdd",
   "Disjoint",
   "Finset",
   "Finset.val",
   "Finset.partialOrder",
   "Nat",
   "Eq"],
  "name": "Finset.card_disjUnion",
  "constType":
  "∀ {α : Type u_1} (s t : Finset α) (h : Disjoint s t),\n  Finset.card (Finset.disjUnion s t h) = Finset.card s + Finset.card t",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocRing.toMul",
   "mul_neg",
   "Semiring.toMonoidWithZero",
   "Neg.neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toSemiring",
   "True",
   "Ring.toNonAssocRing",
   "Eq",
   "instHMul",
   "Ring.toNeg",
   "Eq.ndrec",
   "of_eq_true",
   "MonoidWithZero.toMonoid",
   "InvolutiveNeg.toNeg",
   "instHPow",
   "HasDistribNeg.toInvolutiveNeg",
   "Ring",
   "HMul.hMul",
   "Monoid.toNatPow",
   "Nat",
   "congrArg",
   "Eq.trans"],
  "name": "Mathlib.Tactic.Ring.neg_mul",
  "constType":
  "∀ {R : Type u_1} [inst : Ring R] (a₁ : R) (a₂ : ℕ) {a₃ b : R}, -a₃ = b → -(a₁ ^ a₂ * a₃) = a₁ ^ a₂ * b",
  "constCategory": "Theorem"},
 {"references":
  ["AddGroupWithOne.toAddMonoidWithOne",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "instNatCastInt",
   "AddGroupWithOne.toIntCast",
   "Int.cast",
   "AddGroupWithOne",
   "Nat",
   "Int",
   "Eq",
   "AddGroupWithOne.intCast_ofNat"],
  "name": "Int.cast_ofNat",
  "constType": "∀ {R : Type u} [inst : AddGroupWithOne R] (n : ℕ), ↑↑n = ↑n",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "PartialEquiv",
  "constType": "Type u_5 → Type u_6 → Type (max u_5 u_6)",
  "constCategory": "Other"},
 {"references":
  ["Semigroup.toMul",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "one_div",
   "DivInvMonoid.Pow",
   "Semiring.toNatCast",
   "Real.instOneReal",
   "Real.linearOrder",
   "IsROrC.charZero_isROrC",
   "Real.instPowReal",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "Summable",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "GroupWithZero.toInv",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Prod.snd",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "MulOneClass.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "instDistribLattice",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "DivisionRing.toInv",
   "Mathlib.Algebra.GroupWithZero.Defs._auxLemma.2",
   "And",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.20",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "instNatAtLeastTwo",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "Mathlib.Tactic.Ring.atom_pf'",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "GE.ge",
   "Mathlib.Meta.NormNum.isInt_mul",
   "CharP.cast_eq_zero",
   "Eq.refl",
   "Int.rawCast",
   "Real.rpow_neg_one",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Nat.cast_mul",
   "Mathlib.Tactic.Ring.sub_pf",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Int.add_one_le_iff",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "DivisionMonoid.toInvolutiveInv",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "EisensteinSeries.rfunct_pos",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Real.instLinearOrderedRingReal",
   "Real.instLTReal",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.inv_congr",
   "Neg.neg",
   "Finset.sum_const",
   "Monoid.toMulOneClass",
   "GroupWithZero.inv_zero",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "Real.instDivisionRingReal",
   "Nat.commSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "Mathlib.Tactic.Ring.one_mul",
   "DivisionMonoid.toDivInvMonoid",
   "letFun",
   "Semifield.toDivisionSemiring",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Tactic.RingNF.int_rawCast_neg",
   "MulOneClass.toMul",
   "Finset.instEmptyCollectionFinset",
   "instHSMul",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "dite",
   "Inv",
   "Mathlib.Tactic.Ring.div_pf",
   "Semiring.toNonAssocSemiring",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "Nat.one_le_iff_ne_zero",
   "EisensteinSeries.squares_cover_all",
   "nsmul_eq_mul",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "HPow",
   "LinearOrderedRing.toMax",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "Lattice.toSemilatticeInf",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "GroupWithZero.toDivInvMonoid",
   "Int.instLTInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Algebra.GroupPower.Ring._auxLemma.3",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "Int.negSucc",
   "Int.cast",
   "Eq.mp",
   "mul_one",
   "Mathlib.Tactic.Ring.mul_one",
   "LinearOrderedSemiring.noZeroDivisors",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "Real.rpow_add",
   "div_mul_eq_mul_div",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.9",
   "EisensteinSeries.summable_rfunct_twist",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.10",
   "AddMonoid.toZero",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "Int.instLinearOrderInt",
   "Mathlib.Algebra.Order.Field.Basic._auxLemma.5",
   "NeZero.charZero_one",
   "CommSemiring.toCommMonoidWithZero",
   "id",
   "eq_self",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "Real.instMonoidWithZeroReal",
   "instAddNat",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "SemilatticeInf.toPartialOrder",
   "Real.pseudoMetricSpace",
   "Real.rpow_int_cast",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.toSemiring",
   "AddMonoid.toNatSMul",
   "StrictOrderedSemiring.to_charZero",
   "StrictOrderedSemiring.toPartialOrder",
   "zpow_coe_nat",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "OrderedCommSemiring.toOrderedSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Mathlib.Algebra.GroupWithZero.Defs._auxLemma.1",
   "Bool",
   "instMulNat",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.2",
   "OrderedSemiring.toPartialOrder",
   "Int.natAbs",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "EmptyCollection.emptyCollection",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Real.instAddMonoidReal",
   "mul_div_assoc'",
   "Semifield.toCommGroupWithZero",
   "pow_one",
   "Nat.cast_zero",
   "Iff.mpr",
   "MulZeroClass.toMul",
   "instDecidableEqNat",
   "Mathlib.Meta.NormNum.isInt_add",
   "Mathlib.Tactic.Ring.inv_mul",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "mul_assoc",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "HSMul.hSMul",
   "HDiv.hDiv",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Linarith.lt_of_lt_of_eq",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "instHSub",
   "Or",
   "Real.instRingReal",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Real.normedCommRing",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "OrderedSemiring.toPosMulMono",
   "Int",
   "Inv.inv",
   "true_and",
   "Exists",
   "Summable.congr",
   "LinearOrderedSemifield.toInv",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "StarOrderedRing.toExistsAddOfLE",
   "AddMonoid.toAddZeroClass",
   "True",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Eq.rec",
   "Finset",
   "Mathlib.Tactic.Ring.inv_single",
   "InvolutiveInv.toInv",
   "UniformSpace.toTopologicalSpace",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Not.intro",
   "NonUnitalNonAssocRing.toMul",
   "EisensteinSeries.square_size'",
   "Ring.toAddGroupWithOne",
   "Or.inr",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Real.nontrivial",
   "Finset.sum",
   "Mathlib.Tactic.Ring.cast_pos",
   "div_div",
   "One.toOfNat1",
   "inv_inv",
   "SubNegZeroMonoid.toNegZeroClass",
   "Nat.instMaxNat",
   "DivInvMonoid.toMonoid",
   "Mathlib.Tactic.Ring.neg_add",
   "Bool.false",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.3",
   "Real.instPreorderReal",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Prod",
   "Mathlib.Tactic.Ring.add_mul",
   "Real.instAddCommMonoidReal",
   "Mathlib.Tactic.Ring.atom_pf",
   "Real.orderedAddCommGroup",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Real.instMulReal",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.7",
   "MulZeroClass.mul_zero",
   "Exists.casesOn",
   "instLTNat",
   "Preorder.toLE",
   "Mathlib.Tactic.RingNF.mul_assoc_rev",
   "Eq",
   "Eq.mpr",
   "Ring.toNeg",
   "DivisionCommMonoid.toDivisionMonoid",
   "Mathlib.Tactic.Zify._auxLemma.1",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "Real.instLinearOrderedSemiringReal",
   "Finset.sum_congr",
   "EisensteinSeries.square",
   "or_self",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Real.partialOrder",
   "DivisionSemiring.toGroupWithZero",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Real.intCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.div_congr",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instAddInt",
   "DivInvMonoid.toInv",
   "DistribLattice.toLattice",
   "instHMul",
   "Int.instAddGroupInt",
   "AddCancelMonoid.toIsCancelAdd",
   "Not",
   "add_zero",
   "congrArg",
   "Int.instLEInt",
   "mul_nonneg",
   "OrderedAddCommGroup.toAddCommGroup",
   "Mathlib.Algebra.GroupWithZero.Basic._auxLemma.11",
   "LinearOrderedSemiring.toMax",
   "Finset.card",
   "zero_zpow",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "DivisionRing.toRing",
   "CanLift.prf",
   "Mathlib.Data.Finset.Card._auxLemma.1",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "AddCommMonoid.toAddMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Mathlib.Order.MinMax._auxLemma.2",
   "zpow_nonneg",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "outParam",
   "Int.instRingInt",
   "instLENat",
   "Real.instSemigroupReal",
   "forall_congr",
   "instHPow",
   "Preorder.toLT",
   "Ring.toSub",
   "MulZeroClass.toZero",
   "Linarith.mul_neg",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "DivisionRing.toDiv",
   "funext",
   "LT.lt.le",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "AddGroupWithOne.toNeg",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "inv_eq_one_div",
   "CharP.ofCharZero",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Max.max",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "NonAssocSemiring.toNatCast",
   "sum_lemma",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.4",
   "NegZeroClass.toZero",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.3",
   "HMul"],
  "name": "EisensteinSeries.summable_upper_bound",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (z : UpperHalfPlane),\n      Summable fun x => 1 / EisensteinSeries.rfunct z ^ k * (max ↑(Int.natAbs x.1) ↑(Int.natAbs x.2) ^ k)⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["MonoidWithZero.toMonoid",
   "GroupWithZero.zpow_succ'",
   "DivInvMonoid",
   "GroupWithZero.zpow_zero'",
   "GroupWithZero",
   "GroupWithZero.div_eq_mul_inv",
   "DivInvMonoid.mk",
   "GroupWithZero.toMonoidWithZero",
   "GroupWithZero.zpow_neg'",
   "GroupWithZero.zpow",
   "GroupWithZero.toDiv",
   "GroupWithZero.toInv"],
  "name": "GroupWithZero.toDivInvMonoid",
  "constType": "{G₀ : Type u} → [self : GroupWithZero G₀] → DivInvMonoid G₀",
  "constCategory": "Definition"},
 {"references":
  ["OrderedSemiring",
   "inferInstance",
   "Real.strictOrderedCommSemiring",
   "OrderedCommSemiring.toOrderedSemiring",
   "Real",
   "StrictOrderedCommSemiring.toOrderedCommSemiring"],
  "name": "Real.orderedSemiring",
  "constType": "OrderedSemiring ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Array", "Lean.SyntaxNodeKinds", "Lean.TSyntaxArray", "Lean.Syntax"],
  "name": "Lean.TSyntaxArray.raw",
  "constType":
  "{ks : Lean.SyntaxNodeKinds} → Lean.TSyntaxArray ks → Array Lean.Syntax",
  "constCategory": "Other"},
 {"references": ["StrictOrderedRing", "PartialOrder"],
  "name": "StrictOrderedRing.toPartialOrder",
  "constType": "{α : Type u} → [self : StrictOrderedRing α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references": ["gt_iff_lt", "propext", "LT.lt", "LT", "Eq", "GT.gt"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.1",
  "constType": "∀ {α : Type u_1} [inst : LT α] {x y : α}, (x > y) = (y < x)",
  "constCategory": "Theorem"},
 {"references": ["Bind"],
  "name": "Bind.bind",
  "constType":
  "{m : Type u → Type v} → [self : Bind m] → {α β : Type u} → m α → (α → m β) → m β",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "NormedAlgebra.toAlgebra",
   "SlashAction.map",
   "instDecidableEqFin",
   "SetLike.instMembership",
   "Eq",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "Complex.instSemiringComplex",
   "SeminormedCommRing.toSeminormedRing",
   "SlashInvariantForm",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Algebra.toSMul",
   "Subtype",
   "Int.instCommRingInt",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Complex.instCommSemiringComplex",
   "Pi.instSMul",
   "SlashInvariantForm.toFun",
   "AddMonoidWithOne.toAddMonoid",
   "Fin.fintype",
   "NormedField.toNormedCommRing",
   "Pi.addMonoid",
   "ModularForm.subgroupAction",
   "NormedCommRing.toSeminormedCommRing",
   "Matrix.SpecialLinearGroup",
   "Subgroup.toGroup",
   "Complex",
   "Int",
   "Fin",
   "NormedAlgebra.id",
   "Subgroup.instSetLikeSubgroup"],
  "name": "SlashInvariantForm.slash_action_eq'",
  "constType":
  "∀ {Γ : outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ))} {k : outParam ℤ} (self : SlashInvariantForm Γ k)\n  (γ : ↥Γ), SlashAction.map ℂ k γ self.toFun = self.toFun",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toPartialOrder",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedRing.toRing",
   "OrderedAddCommGroup",
   "AddGroup.mk",
   "AddCommMonoid.toAddMonoid",
   "Ring.toSemiring",
   "OrderedAddCommGroup.mk",
   "SubNegMonoid.mk",
   "Ring.zsmul_neg'",
   "Ring.zsmul_zero'",
   "Ring.zsmul",
   "Ring.toNeg",
   "AddCommMonoid.add_comm",
   "StrictOrderedRing",
   "StrictOrderedRing.add_le_add_left",
   "Ring.toSub",
   "Ring.zsmul_succ'",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Ring.add_left_neg",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Ring.sub_eq_add_neg",
   "AddCommGroup.mk"],
  "name": "StrictOrderedRing.toOrderedAddCommGroup",
  "constType":
  "{α : Type u} → [self : StrictOrderedRing α] → OrderedAddCommGroup α",
  "constCategory": "Definition"},
 {"references": ["Zero", "SMulWithZero", "SMulZeroClass"],
  "name": "SMulWithZero.toSMulZeroClass",
  "constType":
  "{R : Type u_1} → {M : Type u_3} → [inst : Zero R] → [inst_1 : Zero M] → [self : SMulWithZero R M] → SMulZeroClass R M",
  "constCategory": "Definition"},
 {"references": ["Iff", "Iff.refl", "Eq.rec", "Eq"],
  "name": "Iff.of_eq",
  "constType": "∀ {a b : Prop}, a = b → (a ↔ b)",
  "constCategory": "Theorem"},
 {"references":
  ["MulHomClass",
   "NonUnitalNonAssocSemiring",
   "outParam",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalRingHomClass"],
  "name": "NonUnitalRingHomClass.toMulHomClass",
  "constType":
  "{F : Type u_5} →\n  {α : outParam (Type u_6)} →\n    {β : outParam (Type u_7)} →\n      [inst : NonUnitalNonAssocSemiring α] →\n        [inst_1 : NonUnitalNonAssocSemiring β] → [self : NonUnitalRingHomClass F α β] → MulHomClass F α β",
  "constCategory": "Definition"},
 {"references": ["Decidable.casesOn", "Decidable", "Not"],
  "name": "dite",
  "constType":
  "{α : Sort u} → (c : Prop) → [h : Decidable c] → (c → α) → (¬c → α) → α",
  "constCategory": "Definition"},
 {"references":
  ["Function.swap",
   "propext",
   "instHAdd",
   "HAdd.hAdd",
   "CovariantClass",
   "LE",
   "add_le_add_iff_right",
   "Add",
   "LE.le",
   "ContravariantClass",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.7",
  "constType":
  "∀ {α : Type u_1} [inst : Add α] [inst_1 : LE α]\n  [inst_2 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1]\n  [inst_3 : ContravariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] (a : α) {b c : α},\n  (b + a ≤ c + a) = (b ≤ c)",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "instHDiv",
   "MulOneClass.toMul",
   "div_eq_mul_inv",
   "DivInvMonoid.Pow",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "True",
   "DivInvMonoid.toInv",
   "Eq",
   "instHMul",
   "of_eq_true",
   "DivInvOneMonoid.toInvOneClass",
   "instHPow",
   "DivisionCommMonoid.toDivisionMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "inv_zpow",
   "mul_zpow",
   "congr",
   "DivisionCommMonoid",
   "HMul.hMul",
   "HDiv.hDiv",
   "congrArg",
   "DivisionMonoid.toDivInvOneMonoid",
   "InvOneClass.toInv",
   "Int",
   "Eq.trans",
   "congrFun",
   "Inv.inv",
   "DivInvMonoid.toDiv"],
  "name": "div_zpow",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionCommMonoid α] (a b : α) (n : ℤ), (a / b) ^ n = a ^ n / b ^ n",
  "constCategory": "Theorem"},
 {"references":
  ["PseudoMetricSpace.toDist",
   "setOf",
   "Set",
   "Real.instLEReal",
   "Real",
   "LE.le",
   "PseudoMetricSpace",
   "Dist.dist"],
  "name": "Metric.closedBall",
  "constType": "{α : Type u} → [inst : PseudoMetricSpace α] → α → ℝ → Set α",
  "constCategory": "Definition"},
 {"references":
  ["Subsemigroup.carrier",
   "SetLike",
   "MulOneClass.toMul",
   "SetLike.mk",
   "Submonoid.toSubsemigroup",
   "Subgroup.toSubmonoid",
   "Subgroup",
   "Group",
   "Subgroup.instSetLikeSubgroup.proof_1",
   "Group.toDivInvMonoid",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass"],
  "name": "Subgroup.instSetLikeSubgroup",
  "constType": "{G : Type u_1} → [inst : Group G] → SetLike (Subgroup G) G",
  "constCategory": "Definition"},
 {"references":
  ["Multiset",
   "Finset",
   "Multiset.nodup_singleton",
   "Multiset.instSingletonMultiset",
   "Singleton.singleton",
   "Finset.mk",
   "Singleton",
   "Singleton.mk"],
  "name": "Finset.instSingletonFinset",
  "constType": "{α : Type u_1} → Singleton α (Finset α)",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup",
   "NontriviallyNormedField",
   "ModelWithCorners.mk",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "NontriviallyNormedField.toNormedField",
   "uniqueDiffOn_univ",
   "PseudoMetricSpace.toUniformSpace",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "PartialEquiv.refl",
   "modelWithCornersSelf.proof_2",
   "UniformSpace.toTopologicalSpace",
   "ModelWithCorners",
   "NormedSpace",
   "modelWithCornersSelf.proof_1"],
  "name": "modelWithCornersSelf",
  "constType":
  "(𝕜 : Type u_1) →\n  [inst : NontriviallyNormedField 𝕜] →\n    (E : Type u_2) → [inst_1 : NormedAddCommGroup E] → [inst_2 : NormedSpace 𝕜 E] → ModelWithCorners 𝕜 E E",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring",
   "CommSemiring.mk",
   "CommRing.toRing",
   "CommRing.mul_comm",
   "Ring.toSemiring",
   "CommRing"],
  "name": "CommRing.toCommSemiring",
  "constType": "{α : Type u} → [s : CommRing α] → CommSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup.toAddCommGroup",
   "Exists",
   "NontriviallyNormedField",
   "NormedAddCommGroup",
   "NontriviallyNormedField.toNormedField",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "Field.toSemifield",
   "AddCommGroup.toAddCommMonoid",
   "NormedSpace",
   "RingHom.id",
   "NormedField.toField",
   "DivisionSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "ContinuousLinearMap",
   "HasFDerivAt",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Semifield.toDivisionSemiring",
   "NormedSpace.toModule",
   "UniformSpace.toTopologicalSpace"],
  "name": "DifferentiableAt",
  "constType":
  "(𝕜 : Type u_1) →\n  [inst : NontriviallyNormedField 𝕜] →\n    {E : Type u_2} →\n      [inst_1 : NormedAddCommGroup E] →\n        [inst_2 : NormedSpace 𝕜 E] →\n          {F : Type u_3} → [inst_3 : NormedAddCommGroup F] → [inst : NormedSpace 𝕜 F] → (E → F) → E → Prop",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "OfNat.ofNat",
   "instHDiv",
   "Real.instLinearOrderedFieldReal",
   "Real.instMonoidReal",
   "Real.instLTReal",
   "instHAdd",
   "Subtype.val",
   "Real.instMulReal",
   "Real",
   "HAdd.hAdd",
   "Real.instAddReal",
   "LinearOrderedField.toDiv",
   "Complex.re",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Complex.im",
   "instHMul",
   "instHPow",
   "LT.lt",
   "HMul.hMul",
   "Monoid.toNatPow",
   "instOfNatNat",
   "UpperHalfPlane",
   "Complex",
   "HDiv.hDiv",
   "Nat"],
  "name": "EisensteinSeries.lb",
  "constType": "UpperHalfPlane → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "upper_half_plane_isOpen",
   "Real",
   "CoeOut",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "CoeOut.mk",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Set.Elem",
   "UpperHalfPlane",
   "Complex",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace",
   "Subtype"],
  "name": "EisensteinSeries.sliceCoe._cstage1",
  "constType":
  "(A B : ℝ) → CoeOut (↑(EisensteinSeries.upperHalfSpaceSlice A B)) UpperHalfPlane",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "OfNat.ofNat",
   "GroupWithZero",
   "MonoidWithZero.toZero",
   "GroupWithZero.toMonoidWithZero",
   "GroupWithZero.toInv",
   "Inv.inv",
   "Eq"],
  "name": "GroupWithZero.inv_zero",
  "constType": "∀ {G₀ : Type u} [self : GroupWithZero G₀], 0⁻¹ = 0",
  "constCategory": "Definition"},
 {"references":
  ["instHSub",
   "SubNegMonoid.toSub",
   "PseudoMetricSpace.toDist",
   "SeminormedAddGroup",
   "Real",
   "HSub.hSub",
   "SeminormedAddGroup.toPseudoMetricSpace",
   "Norm.norm",
   "SeminormedAddGroup.toNorm",
   "dist_eq_norm_sub",
   "SeminormedAddGroup.toAddGroup",
   "AddGroup.toSubNegMonoid",
   "Dist.dist",
   "Eq"],
  "name": "dist_eq_norm",
  "constType":
  "∀ {E : Type u_6} [inst : SeminormedAddGroup E] (a b : E), dist a b = ‖a - b‖",
  "constCategory": "Theorem"},
 {"references": ["_obj"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_2._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "NeZero.one",
   "NonAssocSemiring.toMulZeroOneClass",
   "Eq",
   "Zero.toOfNat0",
   "PProd",
   "Semiring.toNonAssocSemiring",
   "StrictOrderedSemiring",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Preorder.toLT",
   "PUnit",
   "Monoid.toNatPow",
   "instOfNatNat",
   "zero_lt_one",
   "Nat",
   "pow_nonneg.match_1",
   "Nat.succ",
   "id",
   "HPow.hPow",
   "Nat.below",
   "Nat.brecOn",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "instAddNat",
   "instHAdd",
   "Unit",
   "OrderedSemiring.zeroLEOneClass",
   "One.toOfNat1",
   "Monoid.toMulOneClass",
   "StrictOrderedSemiring.toSemiring",
   "pow_zero",
   "instHMul",
   "Nat.rec",
   "PProd.fst",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "StrictOrderedSemiring.toNontrivial",
   "StrictOrderedSemiring.toOrderedSemiring",
   "LT.lt",
   "HMul.hMul",
   "pow_succ",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "mul_pos",
   "MonoidWithZero.toZero"],
  "name": "pow_pos",
  "constType":
  "∀ {α : Type u} [inst : StrictOrderedSemiring α] {a : α}, 0 < a → ∀ (n : ℕ), 0 < a ^ n",
  "constCategory": "Theorem"},
 {"references": ["Finset", "Prod", "Int"],
  "name": "Finset.filter._at.EisensteinSeries.square._spec_2",
  "constType": "ℤ → Finset (ℤ × ℤ) → Finset (ℤ × ℤ)",
  "constCategory": "Axiom"},
 {"references": ["False", "Not", "False.rec"],
  "name": "absurd",
  "constType": "{a : Prop} → {b : Sort v} → a → ¬a → b",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "OrderedAddCommGroup",
   "OrderedAddCommGroup.toPartialOrder",
   "PartialOrder.toPreorder",
   "instHAdd",
   "HAdd.hAdd",
   "CovariantClass",
   "SubNegMonoid.toAddMonoid",
   "AddCommGroup.toAddGroup",
   "AddMonoid.toAddZeroClass",
   "CovariantClass.mk",
   "OrderedAddCommGroup.add_le_add_left",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "Preorder.toLE",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name": "OrderedAddCommGroup.to_covariantClass_left_le",
  "constType":
  "∀ (α : Type u) [inst : OrderedAddCommGroup α], CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1",
  "constCategory": "Definition"},
 {"references": ["List"],
  "name": "List.nil",
  "constType": "{α : Type u} → List α",
  "constCategory": "Other"},
 {"references":
  ["min_choice",
   "Or",
   "LinearOrder",
   "LinearOrder.toMax",
   "Max.max",
   "OrderDual.instLinearOrder",
   "OrderDual",
   "Eq"],
  "name": "max_choice",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] (a b : α), max a b = a ∨ max a b = b",
  "constCategory": "Theorem"},
 {"references":
  ["Array.mkArray1",
   "Lean.SyntaxNodeKind",
   "Lean.SourceInfo",
   "Lean.Syntax",
   "Lean.Syntax.node"],
  "name": "Lean.Syntax.node1",
  "constType":
  "Lean.SourceInfo → Lean.SyntaxNodeKind → Lean.Syntax → Lean.Syntax",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toRing",
   "AddCommGroup.toDivisionAddCommMonoid",
   "OfNat.ofNat",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "OrderedAddCommGroup.toPartialOrder",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Real.instSupReal",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "abs_eq_self",
   "Preorder.toLE",
   "Abs.abs",
   "Eq",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "LinearOrderedRing.toLinearOrder",
   "Eq.mpr",
   "SemilatticeSup.toSup",
   "Ring.toNeg",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Lattice.toSemilatticeSup",
   "Nat",
   "Eq.symm",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "Neg.toHasAbs",
   "HPow.hPow",
   "abs_pow",
   "Real.instLinearOrderedRingReal",
   "Real.instMonoidReal",
   "instAddNat",
   "instDistribLattice",
   "Even",
   "Even.pow_nonneg",
   "SubNegZeroMonoid.toNegZeroClass",
   "Real.instLinearOrderedAddCommGroupReal",
   "LE.le",
   "StrictOrderedSemiring.toSemiring",
   "DistribLattice.toLattice",
   "Eq.ndrec",
   "propext",
   "letFun",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name": "EisensteinSeries.abs_even_pow_eq_self",
  "constType": "∀ (a : ℝ) (n : ℕ), Even n → |a| ^ n = a ^ n",
  "constCategory": "Theorem"},
 {"references":
  ["CommMonoidWithZero.toZero",
   "LinearOrderedSemifield.toSemifield",
   "OfNat.ofNat",
   "LinearOrderedSemifield",
   "PartialOrder.toPreorder",
   "LinearOrderedSemifield.toInv",
   "Semifield.toCommGroupWithZero",
   "CommGroupWithZero.toCommMonoidWithZero",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Zero.toOfNat0",
   "inv_nonneg",
   "StrictOrderedSemiring.toPartialOrder",
   "propext",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Inv.inv"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.15",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a : α}, (0 ≤ a⁻¹) = (0 ≤ a)",
  "constCategory": "Theorem"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "MulZeroClass.mul_zero",
   "NonAssocSemiring.toMulZeroOneClass",
   "MulZeroClass.toMul",
   "True",
   "Nat.cast_zero",
   "Eq",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Nat.cast_succ",
   "AddMonoid.toZero",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "Nat",
   "Nat.succ",
   "Eq.trans",
   "eq_self",
   "mul_add",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "instAddNat",
   "MulOneClass.toOne",
   "AddSemigroup.toAdd",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Nat.cast_add",
   "NonAssocSemiring",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Distrib.leftDistribClass",
   "instHMul",
   "Nat.rec",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "NonAssocSemiring.toNatCast",
   "congr",
   "mul_one",
   "instMulNat",
   "congrArg",
   "congrFun",
   "Nat.semiring"],
  "name": "Nat.cast_mul",
  "constType":
  "∀ {α : Type u_1} [inst : NonAssocSemiring α] (m n : ℕ), ↑(m * n) = ↑m * ↑n",
  "constCategory": "Theorem"},
 {"references":
  ["Min.min",
   "Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "AddCommGroup.toAddCommMonoid",
   "Dist.dist",
   "Real.linearOrder",
   "SubNegMonoid.toSub",
   "Set.Elem",
   "NormedDivisionRing.toDivisionRing",
   "DifferentiableWithinAt",
   "Filter.Tendsto",
   "NormedAddCommGroup.toNorm",
   "ContinuousSemilinearMapClass.toContinuousMapClass",
   "instHSub",
   "Complex.abs",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "instDistribLattice",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedAddGroup.toPseudoMetricSpace",
   "aux2",
   "Real.normedCommRing",
   "SubadditiveHomClass.toFunLike",
   "DivisionRing.toInv",
   "And",
   "eq_true",
   "Modformsported.ModForms.HolomorphicFunctions._auxLemma.9",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "congr",
   "Norm.norm",
   "And.intro",
   "NormedSpace.toModule",
   "congrFun",
   "Inv.inv",
   "Exists",
   "Subtype.val",
   "Real",
   "Set",
   "Eq.refl",
   "dist_zero_right",
   "Exists.intro",
   "Modformsported.ModForms.HolomorphicFunctions._auxLemma.12",
   "SeminormedAddGroup.toAddGroup",
   "RingHom.id",
   "True",
   "NormedField.toField",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "UniformSpace.toTopologicalSpace",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "instMembershipSetFilter",
   "Modformsported.ModForms.HolomorphicFunctions._auxLemma.7",
   "Real.instLinearOrderedRingReal",
   "Real.instLTReal",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "extendByZero",
   "Field.toSemifield",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedCommRing.toSeminormedCommRing",
   "Set.instHasSubsetSet",
   "Eq.ndrec",
   "letFun",
   "Semifield.toDivisionSemiring",
   "NormedAddCommGroup.toNormedAddGroup",
   "Subtype.mk",
   "Set.instInterSet",
   "ContinuousMapClass.toFunLike",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "Real.instMulReal",
   "Real.normedField",
   "AbsoluteValue",
   "Metric.tendsto_nhds",
   "AddGroup.toSubtractionMonoid",
   "Inter.inter",
   "OpenSubs",
   "Exists.casesOn",
   "implies_congr",
   "Preorder.toLE",
   "norm_mul",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "NormedField.toNormedSpace",
   "Filter",
   "Metric.ball",
   "Real.instInvReal",
   "And.casesOn",
   "Eq.trans",
   "Filter.eventually_iff_exists_mem",
   "Lattice.toSemilatticeInf",
   "Modformsported.ModForms.HolomorphicFunctions._auxLemma.5",
   "HasSubset.Subset",
   "Filter.Eventually",
   "ContinuousLinearMap.continuousSemilinearMapClass",
   "Real.orderedSemiring",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DistribLattice.toLattice",
   "instHMul",
   "norm_inv",
   "ContinuousLinearMap",
   "TopologicalSpace.Opens.carrier",
   "Eq.mp",
   "aux",
   "congrArg",
   "SeminormedAddCommGroup.toSeminormedAddGroup",
   "NormedField.toNormedDivisionRing",
   "Modformsported.ModForms.HolomorphicFunctions._auxLemma.6",
   "NormedAddCommGroup.toAddCommGroup",
   "NormedDivisionRing.toNorm",
   "SeminormedRing.toPseudoMetricSpace",
   "SeminormedAddGroup.toNorm",
   "Zero.toOfNat0",
   "NormedAddGroup.toAddGroup",
   "Preorder.toLT",
   "forall_congr",
   "Modformsported.ModForms.HolomorphicFunctions._auxLemma.4",
   "nhdsWithin",
   "id",
   "Membership.mem",
   "funext",
   "nhds",
   "Modformsported.ModForms.HolomorphicFunctions._auxLemma.11",
   "HSub.hSub",
   "SemilatticeInf.toPartialOrder",
   "Real.pseudoMetricSpace",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "Real.instZeroReal",
   "DivisionSemiring.toSemiring",
   "PseudoMetricSpace.toDist",
   "dist_self",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "LinearOrderedRing.toMin",
   "Complex.instNormedAddCommGroupComplex",
   "NegZeroClass.toZero",
   "HasFDerivWithinAt",
   "DenselyNormedField.toNontriviallyNormedField",
   "OrderedSemiring.toPartialOrder"],
  "name": "diff_on_diff",
  "constType":
  "∀ {D : OpenSubs} (f : ↑D.carrier → ℂ),\n  (∀ (x : ↑D.carrier),\n      ∃ ε, 0 < ε ∧ Metric.ball (↑x) ε ⊆ D.carrier ∧ DifferentiableOn ℂ (extendByZero f) (Metric.ball (↑x) ε)) →\n    DifferentiableOn ℂ (extendByZero f) D.carrier",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Complex.instNormedFieldComplex",
   "Exists",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "Subtype.val",
   "NontriviallyNormedField.toNormedField",
   "Set",
   "extendByZero",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "OpenSubs",
   "NormedField.toNormedCommRing",
   "Set.instMembershipSet",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "TopologicalSpace.Opens.carrier",
   "Set.Elem",
   "HasDerivWithinAt",
   "NormedField.toNormedSpace",
   "Complex",
   "UniformSpace.toTopologicalSpace",
   "Complex.instNormedAddCommGroupComplex",
   "DenselyNormedField.toNontriviallyNormedField"],
  "name": "IsHolomorphicOn",
  "constType": "{D : OpenSubs} → (↑D.carrier → ℂ) → Prop",
  "constCategory": "Definition"},
 {"references": ["Eq"],
  "name": "Eq.refl",
  "constType": "∀ {α : Sort u_1} (a : α), a = a",
  "constCategory": "Other"},
 {"references":
  ["NonUnitalNonAssocRing.toMul",
   "Int.instMulInt",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Eq",
   "instHMul",
   "Int.mul",
   "NonAssocRing.toIntCast",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Int.cast",
   "Ring.toIntCast",
   "Ring",
   "HMul.hMul",
   "Mathlib.Meta.NormNum.isInt_mul.match_1",
   "Int.cast_mul",
   "Mathlib.Meta.NormNum.IsInt",
   "Eq.symm",
   "Int"],
  "name": "Mathlib.Meta.NormNum.isInt_mul",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {f : α → α → α} {a b : α} {a' b' c : ℤ},\n  f = HMul.hMul →\n    Mathlib.Meta.NormNum.IsInt a a' →\n      Mathlib.Meta.NormNum.IsInt b b' → Int.mul a' b' = c → Mathlib.Meta.NormNum.IsInt (a * b) c",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Set",
  "constType": "Type u → Type u",
  "constCategory": "Definition"},
 {"references":
  ["Int.ofNat",
   "instHSub",
   "instSubNat",
   "Int.negSucc",
   "Unit",
   "HSub.hSub",
   "Int.negOfNat.match_1",
   "Nat",
   "Int"],
  "name": "Int.subNatNat",
  "constType": "ℕ → ℕ → ℤ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "instAddNat",
   "Even",
   "Fintype.card",
   "Fin.fintype",
   "Nat.even_iff",
   "rfl",
   "Iff.mpr",
   "Eq",
   "Nat.instModNat",
   "instHMod",
   "Fact.mk",
   "HMod.hMod",
   "instOfNatNat",
   "Nat",
   "Fact",
   "Fin"],
  "name":
  "UpperHalfPlane.instFactEvenNatInstAddNatCardFinOfNatInstOfNatNatFintype",
  "constType": "Fact (Even (Fintype.card (Fin 2)))",
  "constCategory": "Definition"},
 {"references": ["Iff", "Eq"],
  "name": "propext",
  "constType": "∀ {a b : Prop}, (a ↔ b) → a = b",
  "constCategory": "Axiom"},
 {"references": ["NonUnitalNonAssocSemiring", "NonAssocSemiring"],
  "name": "NonAssocSemiring.toNonUnitalNonAssocSemiring",
  "constType":
  "{α : Type u} → [self : NonAssocSemiring α] → NonUnitalNonAssocSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Real.orderedAddCommGroup",
   "Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "MulZeroOneClass.toMulOneClass",
   "AbsoluteValue",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "DivInvMonoid.Pow",
   "Real.orderedRing",
   "Preorder.toLE",
   "Complex.abs_ofReal",
   "Eq",
   "Real.linearOrder",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "SemilatticeSup.toSup",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "UpperHalfPlane",
   "LinearOrderedField.toLinearOrderedSemifield",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "HPow.hPow",
   "Complex.abs",
   "Complex.instNontrivialComplex",
   "Complex.abs_of_nonneg",
   "DivisionSemiring.toGroupWithZero",
   "instDistribLattice",
   "Real.orderedSemiring",
   "GroupWithZero.toDivInvMonoid",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DistribLattice.toLattice",
   "MonoidWithZero.toMulZeroOneClass",
   "of_eq_true",
   "Real.instIsDomainRealSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "Real.instAddGroupReal",
   "map_zpow₀",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "Int",
   "congrFun",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "Real",
   "Eq.refl",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "True",
   "Abs.abs",
   "Real.instNegReal",
   "AbsoluteValue.subadditiveHomClass",
   "Zero.toOfNat0",
   "Complex.instSemiringComplex",
   "abs_abs",
   "instHPow",
   "Lattice.toSemilatticeSup",
   "Eq.symm",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "EisensteinSeries.rfunct_pos",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "eq_self",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "LT.lt.le",
   "MonoidHomClass.toMulHomClass",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "GroupWithZero.toMonoidWithZero",
   "LE.le",
   "Real.instZeroReal",
   "Real.instDivisionRingReal",
   "Eq.ndrec",
   "OrderedSemiring.toSemiring",
   "letFun",
   "Real.instPreorderReal",
   "Complex",
   "Semifield.toDivisionSemiring",
   "NegZeroClass.toNeg",
   "AbsoluteValue.monoidWithZeroHomClass",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.baux2",
  "constType":
  "∀ (z : UpperHalfPlane) (k : ℤ), Complex.abs (↑(EisensteinSeries.rfunct z) ^ k) = EisensteinSeries.rfunct z ^ k",
  "constCategory": "Theorem"},
 {"references":
  ["NormedAddCommGroup",
   "IsROrC.toDenselyNormedField",
   "InnerProductSpace",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "DenselyNormedField.toNormedField",
   "IsROrC",
   "NormedSpace"],
  "name": "InnerProductSpace.toNormedSpace",
  "constType":
  "{𝕜 : Type u_4} →\n  {E : Type u_5} →\n    [inst : IsROrC 𝕜] → [inst_1 : NormedAddCommGroup E] → [self : InnerProductSpace 𝕜 E] → NormedSpace 𝕜 E",
  "constCategory": "Definition"},
 {"references": ["DivisionRing", "Inv"],
  "name": "DivisionRing.toInv",
  "constType": "{K : Type u} → [self : DivisionRing K] → Inv K",
  "constCategory": "Definition"},
 {"references":
  ["CommMonoidWithZero.toZero",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "Int.instSubInt",
   "instOfNatInt",
   "NontriviallyNormedField.toNormedField",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NormedField.toField",
   "Zero.toOfNat0",
   "hasStrictDerivAt_zpow",
   "instHPow",
   "NormedDivisionRing.toDivisionRing",
   "Ring.toIntCast",
   "NormedField.toNormedSpace",
   "DivisionRing.toDivInvMonoid",
   "NormedRing.toRing",
   "instHSub",
   "HPow.hPow",
   "Ne",
   "Or",
   "NontriviallyNormedField",
   "NonUnitalNonAssocRing.toMul",
   "HSub.hSub",
   "NormedCommRing.toNormedRing",
   "Field.toSemifield",
   "NormedField.toNormedCommRing",
   "CommGroupWithZero.toCommMonoidWithZero",
   "HasDerivAt",
   "LE.le",
   "NormedCommRing.toSeminormedCommRing",
   "instHMul",
   "HasStrictDerivAt.hasDerivAt",
   "Int.cast",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Int",
   "NormedField.toNormedDivisionRing",
   "NonUnitalNormedRing.toNormedAddCommGroup",
   "Int.instLEInt"],
  "name": "hasDerivAt_zpow",
  "constType":
  "∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] (m : ℤ) (x : 𝕜),\n  x ≠ 0 ∨ 0 ≤ m → HasDerivAt (fun x => x ^ m) (↑m * x ^ (m - 1)) x",
  "constCategory": "Theorem"},
 {"references":
  ["RingHom.instRingHomClass",
   "Equiv",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "AddCommSemigroup.toAddCommMagma",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Real.instAddMonoidReal",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Complex.instField",
   "Int.castRingHom",
   "UpperHalfPlane.mk",
   "RingHomClass.toMonoidWithZeroHomClass",
   "HSMul.hSMul",
   "HDiv.hDiv",
   "Units.mk",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Int.instCommRingInt",
   "Complex.instOneComplex",
   "HPow.hPow",
   "instHDiv",
   "add_comm",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "MulOneClass.toOne",
   "Matrix.semiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "Complex.instAddComplex",
   "Real.instRingReal",
   "AddCommMagma.toAdd",
   "instHVAdd",
   "div_one",
   "Matrix.adjugate_fin_two_of",
   "Complex.im",
   "RingHomClass.toMonoidHomClass",
   "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "Field.toDiv",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "Fin",
   "Inv.inv",
   "congrFun",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "instOfNatInt",
   "Subtype.val",
   "Matrix.empty_val'",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "AddMonoid.toAddZeroClass",
   "algebraInt",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "RingHomClass.toNonUnitalRingHomClass",
   "Subtype.property",
   "Matrix.det",
   "zero_add",
   "Complex.instSemiringComplex",
   "Eq.rec",
   "MonoidHomClass.toOneHomClass",
   "map_zero",
   "ModularGroup.coe_T_zpow",
   "HVAdd.hVAdd",
   "Nat.succ",
   "CommGroupWithZero.toDivisionCommMonoid",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.ofReal'",
   "Real.instLTReal",
   "algebraMap",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "Neg.neg",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "Matrix.SpecialLinearGroup.coeToGL.proof_1",
   "Monoid.toMulOneClass",
   "Matrix.vecEmpty",
   "Units",
   "NormedCommRing.toSeminormedCommRing",
   "ModularGroup.T",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup.coeToGL",
   "Eq.ndrec",
   "Matrix.cons_val'",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NegZeroClass.toNeg",
   "MonoidWithZeroHomClass.toZeroHomClass",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "instHSMul",
   "MulZeroOneClass.toMulOneClass",
   "neg_zero",
   "HAdd.hAdd",
   "NonUnitalRingHomClass.toMulHomClass",
   "UpperHalfPlane.SLAction",
   "UpperHalfPlane.specialLinearGroup_apply",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Ring.toNeg",
   "MonoidWithZero.toMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "Nat",
   "Eq.trans",
   "Monoid",
   "Matrix.SpecialLinearGroup.coeToGL.proof_2",
   "Int.instCommSemiringInt",
   "Fin.fintype",
   "MulZeroOneClass.toZero",
   "Real.intCast",
   "instHMul",
   "NonAssocRing.toIntCast",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "of_eq_true",
   "Matrix.of",
   "Int.cast",
   "UpperHalfPlane.coe_mk",
   "Fin.instOfNatFin",
   "CommRing.toRing",
   "AddAction.toVAdd",
   "Matrix.vecCons",
   "congrArg",
   "RingHom",
   "MulZeroClass.zero_mul",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Ring.toNonAssocRing",
   "UpperHalfPlane.ext_iff",
   "Zero.toOfNat0",
   "one_mul",
   "instHPow",
   "Matrix",
   "Matrix.SpecialLinearGroup.hasInv",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "AddCommMonoid.toAddCommSemigroup",
   "id",
   "eq_self",
   "NeZero.succ",
   "AddGroupWithOne.toAddMonoidWithOne",
   "funext",
   "UpperHalfPlane.coe_vadd",
   "instHAdd",
   "map_one",
   "AddMonoidWithOne.toAddMonoid",
   "eq_intCast",
   "NonUnitalNonAssocSemiring.toMul",
   "Matrix.adjugate",
   "Equiv.instFunLikeEquiv",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Matrix.cons_val_fin_one",
   "Real.semiring",
   "Units.val",
   "Int.instSemiringInt",
   "Int.instAddCommGroupInt",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "Group.toDivInvMonoid",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "UpperHalfPlane.modular_T_zpow_smul",
  "constType":
  "∀ (z : UpperHalfPlane) (n : ℤ), ModularGroup.T ^ n • z = ↑n +ᵥ z",
  "constCategory": "Theorem"},
 {"references":
  ["_obj",
   "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_4",
   "Lean.Syntax.Preresolved.namespace"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_6._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["Real.orderedAddCommGroup",
   "Distrib.toAdd",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "AbsoluteValue",
   "Real.instLEReal",
   "Real",
   "Real.instSupReal",
   "Preorder.toLE",
   "Abs.abs",
   "abs_of_nonneg",
   "Eq",
   "Real.instNegReal",
   "Complex.abs_ofReal",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Real.linearOrder",
   "Semiring.toNonAssocSemiring",
   "Eq.trans",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "Complex.abs",
   "FunLike.coe",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "LE.le",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Real.instZeroReal",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Real.instAddGroupReal",
   "Complex",
   "OrderedSemiring.toPartialOrder"],
  "name": "Complex.abs_of_nonneg",
  "constType": "∀ {r : ℝ}, 0 ≤ r → Complex.abs ↑r = r",
  "constCategory": "Theorem"},
 {"references":
  ["MulZeroClass.mk",
   "NonUnitalNonAssocSemiring",
   "NonUnitalNonAssocSemiring.zero_mul",
   "AddMonoid.toZero",
   "MulZeroClass",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "NonUnitalNonAssocSemiring.toMulZeroClass",
  "constType":
  "{α : Type u} → [self : NonUnitalNonAssocSemiring α] → MulZeroClass α",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Lean.Macro.Context",
  "constType": "Type",
  "constCategory": "Other"},
 {"references": ["Div.div", "Div", "HDiv", "HDiv.mk"],
  "name": "instHDiv",
  "constType": "{α : Type u_1} → [inst : Div α] → HDiv α α α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "instHSub",
   "Complex.mk",
   "Real.instSubReal",
   "Real",
   "HSub.hSub",
   "Complex",
   "Sub",
   "Complex.re",
   "Sub.mk"],
  "name": "Complex.instSubComplex",
  "constType": "Sub ℂ",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "instAddNat",
   "AddMonoid.toAddSemigroup",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Nat",
   "Eq.symm",
   "Nat.cast_add",
   "Eq"],
  "name": "Mathlib.Data.Nat.Cast.Defs._auxLemma.3",
  "constType":
  "∀ {R : Type u_1} [inst : AddMonoidWithOne R] (m n : ℕ), ↑m + ↑n = ↑(m + n)",
  "constCategory": "Theorem"},
 {"references": ["Group"],
  "name": "Subgroup",
  "constType": "(G : Type u_5) → [inst : Group G] → Type u_5",
  "constCategory": "Other"},
 {"references": [],
  "name": "Iff",
  "constType": "Prop → Prop → Prop",
  "constCategory": "Other"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "SMul",
   "OfNat.ofNat",
   "NormedAlgebra.toAlgebra",
   "HEq",
   "SlashAction.map",
   "SlashInvariantFormClass.toFunLike",
   "Eq.refl",
   "instDecidableEqFin",
   "Subgroup.instTopSubgroup",
   "SlashAction",
   "EisensteinSeries.Eisenstein_SIF",
   "SetLike.instMembership",
   "Eq",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "Complex.instSemiringComplex",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "SlashInvariantFormClass.slashInvariantForm",
   "SlashInvariantForm",
   "SlashInvariantForm.slash_action_eq'",
   "Subgroup",
   "Group",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Eq.symm",
   "Algebra.toSMul",
   "Int.instCommRingInt",
   "Subtype",
   "id",
   "Membership.mem",
   "pi_congr",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Complex.instCommSemiringComplex",
   "Pi.instSMul",
   "Top.top",
   "eq_of_heq",
   "SlashInvariantForm.toFun",
   "AddMonoidWithOne.toAddMonoid",
   "Fin.fintype",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "AddMonoid",
   "Pi.addMonoid",
   "ModularForm.subgroupAction",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Matrix.SpecialLinearGroup",
   "Subgroup.toGroup",
   "HEq.refl",
   "Complex",
   "Eq.casesOn",
   "Int",
   "Fin",
   "NormedAlgebra.id",
   "Subgroup.instSetLikeSubgroup"],
  "name": "EisensteinSeries.EisensteinSeriesModularForm.proof_1",
  "constType":
  "∀ (k : ℤ) (γ : ↥⊤),\n  SlashAction.map ℂ k γ ⇑(EisensteinSeries.Eisenstein_SIF ⊤ k) = ⇑(EisensteinSeries.Eisenstein_SIF ⊤ k)",
  "constCategory": "Theorem"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Ring.toNonAssocRing",
   "True",
   "Semiring.toNatCast",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Ring.toIntCast",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "instOfNatNat",
   "Nat",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "NonUnitalNonAssocRing.toMul",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "MulOneClass.toOne",
   "Mathlib.Meta.NormNum.IsRat",
   "One.toOfNat1",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Mathlib.Meta.NormNum.IsRat.mk",
   "Ring.toSemiring",
   "Mathlib.Meta.NormNum.IsInt.to_isRat.match_1",
   "Semiring.toOne",
   "instHMul",
   "of_eq_true",
   "AddMonoidWithOne.toOne",
   "Int.cast",
   "HMul.hMul",
   "mul_one",
   "Invertible.mk",
   "congrArg",
   "Int",
   "congrFun"],
  "name": "Mathlib.Meta.NormNum.IsInt.to_isRat",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {a : α} {n : ℤ}, Mathlib.Meta.NormNum.IsInt a n → Mathlib.Meta.NormNum.IsRat a n 1",
  "constCategory": "Theorem"},
 {"references": ["TopologicalSpace"],
  "name": "ChartedSpace",
  "constType":
  "(H : Type u_5) → [inst : TopologicalSpace H] → (M : Type u_6) → [inst : TopologicalSpace M] → Type (max u_5 u_6)",
  "constCategory": "Other"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Real.instLEReal",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.isROrC",
   "DivInvMonoid.Pow",
   "Real.instSupReal",
   "DivisionRing.toRatCast",
   "Complex.instRatCastComplex",
   "Exists.casesOn",
   "Real.orderedRing",
   "Preorder.toLE",
   "Complex.abs_ofReal",
   "Semiring.toNatCast",
   "Eq",
   "Mathlib.Data.Complex.Basic._auxLemma.14",
   "Complex.Complex.addGroupWithOne",
   "IsROrC.charZero_isROrC",
   "And.right",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Nat.cast",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "Ring.toIntCast",
   "Rat.cast",
   "UpperHalfPlane",
   "Std.Classes.Order._auxLemma.3",
   "HDiv.hDiv",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "Complex.instOneComplex",
   "HPow.hPow",
   "Complex.abs",
   "Complex.instNontrivialComplex",
   "instHDiv",
   "Prod.snd",
   "EisensteinSeries.auxlem",
   "Complex.charZero",
   "UpperHalfPlane.coe",
   "Complex.instAddComplex",
   "Prod.fst",
   "Real.intCast",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "Rat.divInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "And",
   "instHMul",
   "EisensteinSeries.baux2",
   "AddMonoidWithOne.toOne",
   "Real.instIsDomainRealSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Int.cast",
   "Eq.mp",
   "congr",
   "Field.toDiv",
   "Field.toDivisionRing",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "Int",
   "Int.instLEInt",
   "congrFun",
   "Exists",
   "Real.instLinearOrderedFieldReal",
   "DivisionRing.toRing",
   "instOfNatInt",
   "Real",
   "CanLift.prf",
   "Eq.refl",
   "pow_le_pow_left",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "LinearOrderedField.toDiv",
   "Abs.abs",
   "zpow_ofNat",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "map_pow",
   "instHPow",
   "Monoid.toNatPow",
   "OrderedRing.toOrderedSemiring",
   "instOfNatNat",
   "Eq.symm",
   "EisensteinSeries.rfunct_pos",
   "DivisionRing.toDiv",
   "id",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "AddGroupWithOne.toAddMonoidWithOne",
   "LT.lt.le",
   "Real.instMonoidReal",
   "MonoidHomClass.toMulHomClass",
   "instHAdd",
   "MulHomClass.toFunLike",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "FunLike.coe",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "LE.le",
   "Real.instZeroReal",
   "Real.instDivisionRingReal",
   "Eq.ndrec",
   "instNatCastInt",
   "Real.instPreorderReal",
   "letFun",
   "OrderedSemiring.toSemiring",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "HMul.hMul",
   "Prod",
   "Complex",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Mathlib.Data.Rat.Cast.CharZero._auxLemma.11",
   "Complex.instMulComplex",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.auxlem3",
  "constType":
  "∀ (z : UpperHalfPlane) (x : ℤ × ℤ) (k : ℤ),\n  0 ≤ k → Complex.abs (↑(EisensteinSeries.rfunct z) ^ k) ≤ Complex.abs ((↑x.1 / ↑x.2 * ↑z + 1) ^ k)",
  "constCategory": "Theorem"},
 {"references": ["LinearOrderedAddCommGroup", "OrderedAddCommGroup"],
  "name": "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
  "constType":
  "{α : Type u} → [self : LinearOrderedAddCommGroup α] → OrderedAddCommGroup α",
  "constCategory": "Definition"},
 {"references": ["Preorder", "PartialOrder"],
  "name": "PartialOrder.toPreorder",
  "constType": "{α : Type u} → [self : PartialOrder α] → Preorder α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "AddZeroClass.toAdd",
   "AddZeroClass.toZero",
   "OfNat.ofNat",
   "instHAdd",
   "HAdd.hAdd",
   "CovariantClass",
   "Preorder",
   "LE.le",
   "AddZeroClass",
   "Preorder.toLE",
   "Left.add_nonpos"],
  "name": "add_nonpos",
  "constType":
  "∀ {α : Type u_1} [inst : AddZeroClass α] [inst_1 : Preorder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] {a b : α}, a ≤ 0 → b ≤ 0 → a + b ≤ 0",
  "constCategory": "Theorem"},
 {"references":
  ["Equiv",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Subtype.val",
   "OfNat",
   "instDecidableEqFin",
   "One.toOfNat1",
   "Fin.fintype",
   "Matrix.adjugate",
   "EisensteinSeries.MoebiusEquiv._elambda_1",
   "Eq",
   "Semiring.toOne",
   "Matrix.det",
   "CommRing.toCommSemiring",
   "Fintype",
   "Matrix.SpecialLinearGroup",
   "lcProof",
   "EisensteinSeries.MoebiusEquiv._elambda_2",
   "Matrix.SpecialLinearGroup.hasInv",
   "Matrix",
   "Decidable",
   "Equiv.mk",
   "instOfNatNat",
   "Prod",
   "Nat",
   "EisensteinSeries.MoebiusPerm",
   "Int",
   "Subtype.mk",
   "Fin",
   "Int.instCommRingInt",
   "Inv.inv"],
  "name": "EisensteinSeries.MoebiusEquiv._cstage1",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ → ℤ × ℤ ≃ ℤ × ℤ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instOfNatInt",
   "AddGroupWithOne.toIntCast",
   "Eq.refl",
   "One.toOfNat1",
   "Int.cast_ofNat",
   "Eq",
   "Eq.mpr",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Eq.ndrec",
   "AddMonoidWithOne.toOne",
   "instNatCastInt",
   "Int.cast",
   "AddGroupWithOne",
   "instOfNatNat",
   "Nat",
   "Int",
   "Nat.cast_one",
   "id"],
  "name": "Int.cast_one",
  "constType": "∀ {R : Type u} [inst : AddGroupWithOne R], ↑1 = 1",
  "constCategory": "Theorem"},
 {"references":
  ["Nat.commSemiring",
   "CommSemiring.toSemiring",
   "inferInstance",
   "Semiring",
   "Nat"],
  "name": "Nat.semiring",
  "constType": "Semiring ℕ",
  "constCategory": "Definition"},
 {"references":
  ["TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens",
   "IsROrC.innerProductSpace",
   "upper_half_plane_isOpen",
   "SeminormedRing.toPseudoMetricSpace",
   "IsHolomorphicOn",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "TopologicalSpace.Opens.instChartedSpace",
   "SeminormedCommRing.toSeminormedRing",
   "Iff",
   "Complex.instIsROrCComplex",
   "UpperHalfPlane.upperHalfSpace",
   "EisensteinSeries.mdiff_to_holo",
   "UniformSpace.toTopologicalSpace",
   "Subtype",
   "Membership.mem",
   "MDifferentiable",
   "Complex.instDenselyNormedFieldComplex",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "NormedField.toNormedCommRing",
   "chartedSpaceSelf",
   "EisensteinSeries.holo_to_mdiff",
   "Iff.intro",
   "NormedCommRing.toSeminormedCommRing",
   "InnerProductSpace.toNormedSpace",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Complex",
   "instTopologicalSpaceSubtype",
   "Complex.instNormedAddCommGroupComplex",
   "DenselyNormedField.toNontriviallyNormedField",
   "modelWithCornersSelf"],
  "name": "EisensteinSeries.mdiff_iff_holo",
  "constType":
  "∀ (f : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ),\n  MDifferentiable (modelWithCornersSelf ℂ ℂ) (modelWithCornersSelf ℂ ℂ) f ↔ IsHolomorphicOn f",
  "constCategory": "Theorem"},
 {"references": ["SubNegMonoid", "AddMonoid"],
  "name": "SubNegMonoid.toAddMonoid",
  "constType": "{G : Type u} → [self : SubNegMonoid G] → AddMonoid G",
  "constCategory": "Definition"},
 {"references": ["OrderedSemiring", "Semiring"],
  "name": "OrderedSemiring.toSemiring",
  "constType": "{α : Type u} → [self : OrderedSemiring α] → Semiring α",
  "constCategory": "Definition"},
 {"references": ["Lean.Name", "Lean.MonadQuotation"],
  "name": "Lean.MonadQuotation.getMainModule",
  "constType":
  "{m : Type → Type} → [self : Lean.MonadQuotation m] → m Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toRing",
   "StrictOrderedCommRing",
   "StrictOrderedCommRing.toStrictOrderedRing",
   "StrictOrderedCommRing.mul_comm",
   "CommRing",
   "CommRing.mk"],
  "name": "StrictOrderedCommRing.toCommRing",
  "constType": "{α : Type u_2} → [self : StrictOrderedCommRing α] → CommRing α",
  "constCategory": "Definition"},
 {"references":
  ["IsDomain.toIsCancelMulZero",
   "CancelMonoidWithZero",
   "CancelMonoidWithZero.mk",
   "Semiring",
   "IsDomain",
   "Semiring.toMonoidWithZero"],
  "name": "IsDomain.toCancelMonoidWithZero",
  "constType":
  "{α : Type u_1} → [inst : Semiring α] → [inst : IsDomain α] → CancelMonoidWithZero α",
  "constCategory": "Definition"},
 {"references": ["Add", "AddSemigroup"],
  "name": "AddSemigroup.toAdd",
  "constType": "{G : Type u} → [self : AddSemigroup G] → Add G",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "instOfNatInt",
   "Prod.mk",
   "Finset",
   "Eq.refl",
   "Singleton.singleton",
   "Prod",
   "EisensteinSeries.square",
   "Int",
   "Finset.instSingletonFinset",
   "Eq"],
  "name": "EisensteinSeries.square_zero",
  "constType": "EisensteinSeries.square 0 = {(0, 0)}",
  "constCategory": "Theorem"},
 {"references":
  ["MulOneClass.toMul",
   "Complex.normSq_mul",
   "MulZeroOneClass.toMulOneClass",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MonoidHomClass.toMulHomClass",
   "Real.instMulReal",
   "Real",
   "Eq.refl",
   "MulHomClass.toFunLike",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "FunLike.coe",
   "Complex.normSq_nonneg",
   "Real.sqrt",
   "NonAssocSemiring.toMulZeroOneClass",
   "Eq",
   "instHMul",
   "Complex.instSemiringComplex",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "Real.semiring",
   "Complex.normSq",
   "HMul.hMul",
   "Real.sqrt_mul",
   "Complex",
   "MonoidWithZeroHom",
   "Complex.instMulComplex",
   "id"],
  "name": "_private.Mathlib.Data.Complex.Abs.0.Complex.AbsTheory.abs_mul",
  "constType":
  "∀ (z w : ℂ), Real.sqrt (Complex.normSq (z * w)) = Real.sqrt (Complex.normSq z) * Real.sqrt (Complex.normSq w)",
  "constCategory": "Theorem"},
 {"references":
  ["Nat.ble",
   "instLENat",
   "Decidable.isFalse",
   "Bool.true",
   "Decidable",
   "Not",
   "Decidable.isTrue",
   "dite",
   "Bool",
   "Nat.not_le_of_not_ble_eq_true",
   "Nat.le_of_ble_eq_true",
   "Nat",
   "LE.le",
   "instDecidableEqBool",
   "Eq"],
  "name": "Nat.decLe",
  "constType": "(n m : ℕ) → Decidable (n ≤ m)",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "rfl", "Eq"],
  "name": "Eq.symm",
  "constType": "∀ {α : Sort u} {a b : α}, a = b → b = a",
  "constCategory": "Theorem"},
 {"references": ["Semiring", "AddCommMonoid"],
  "name": "Module",
  "constType":
  "(R : Type u) → (M : Type v) → [inst : Semiring R] → [inst : AddCommMonoid M] → Type (max u v)",
  "constCategory": "Other"},
 {"references":
  ["List",
   "Lean.SourceInfo",
   "Lean.Syntax.Preresolved",
   "Lean.Name",
   "Lean.Syntax",
   "Substring"],
  "name": "Lean.Syntax.ident",
  "constType":
  "Lean.SourceInfo → Substring → Lean.Name → List Lean.Syntax.Preresolved → Lean.Syntax",
  "constCategory": "Other"},
 {"references": [],
  "name": "LE",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references": [],
  "name": "TopologicalSpace",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["AddZeroClass.toAdd",
   "StrictOrderedRing.toRing",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "Mathlib.Algebra.Order.Group.Defs._auxLemma.10",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Semiring.toMonoidWithZero",
   "AddGroup.toSubtractionMonoid",
   "AddMonoid.toAddZeroClass",
   "StrictOrderedRing.toStrictOrderedSemiring",
   "Ring.toNonAssocRing",
   "AddGroupWithOne.toAddGroup",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "Eq.mpr",
   "Ring.toNeg",
   "mul_pos_of_neg_of_neg",
   "InvolutiveNeg.toNeg",
   "Preorder.toLT",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "StrictOrderedRing",
   "HasDistribNeg.toInvolutiveNeg",
   "AddGroup.toAddCancelMonoid",
   "neg_mul",
   "Eq.trans",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "StrictOrderedRing.toPartialOrder",
   "NonUnitalNonAssocRing.toMul",
   "IsCancelAdd.toIsLeftCancelAdd",
   "Ring.toAddGroupWithOne",
   "neg_neg_of_pos",
   "AddGroup.existsAddOfLE",
   "Neg.neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "StrictOrderedSemiring.toSemiring",
   "GT.gt",
   "instHMul",
   "Std.Classes.Order._auxLemma.4",
   "AddCancelMonoid.toIsCancelAdd",
   "StrictOrderedSemiring.toPartialOrder",
   "neg_of_neg_pos",
   "LT.lt",
   "Eq.mp",
   "SubNegMonoid.toAddMonoid",
   "letFun",
   "HMul.hMul",
   "MonoidWithZero.toZero",
   "congrArg",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "congrFun"],
  "name": "Linarith.mul_neg",
  "constType":
  "∀ {α : Type u_1} [inst : StrictOrderedRing α] {a b : α}, a < 0 → 0 < b → b * a < 0",
  "constCategory": "Theorem"},
 {"references": ["HPow", "Pow.pow", "Pow", "HPow.mk"],
  "name": "instHPow",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → [inst : Pow α β] → HPow α β α",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance", "Ring", "CommRing.toRing", "Int", "Int.instCommRingInt"],
  "name": "Int.instRingInt",
  "constType": "Ring ℤ",
  "constCategory": "Definition"},
 {"references":
  ["NNReal.toReal",
   "NormedRing.toNorm",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "NormedAddCommGroup",
   "Pi.normedSpace",
   "NontriviallyNormedField.toNormedField",
   "EuclideanDomain.to_principal_ideal_domain",
   "AddCommGroup.toAddCommMonoid",
   "instUniformAddGroupRealToUniformSpacePseudoMetricSpaceInstAddGroupReal",
   "Semifield.toCommGroupWithZero",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Iff.mpr",
   "Iff",
   "ContinuousLinearMap.hasOpNorm",
   "NormedAddCommGroup.toNorm",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Summable",
   "ContinuousSemilinearMapClass.toContinuousMapClass",
   "RingHomInvPair.ids",
   "ContinuousLinearEquiv",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NormedCommRing.toNormedRing",
   "Summable.mul_left",
   "Real.norm",
   "Real.instRingReal",
   "Pi.normedRing",
   "Module.toMulActionWithZero",
   "Real.normedCommRing",
   "CommGroupWithZero.toCommMonoidWithZero",
   "SMulZeroClass.toSMul",
   "NormedAddCommGroup.toMetricSpace",
   "FiniteDimensional.finrank",
   "Basis.equivFunL",
   "summable_sum",
   "propext",
   "ContinuousSemilinearEquivClass.continuousSemilinearMapClass",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Norm.norm",
   "NormedSpace.toModule",
   "Fin",
   "congrFun",
   "SeminormedAddCommGroup.toTopologicalAddGroup",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "Summable.abs",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "RingHom.id",
   "MetricSpace.toMetrizableSpace",
   "NormedField.toField",
   "SeminormedAddCommGroup.toAddCommGroup",
   "ContinuousLinearEquiv.symm",
   "NormedSpace.boundedSMul",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "Real.denselyNormedField",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "Finset.sum",
   "Real.nontrivial",
   "PrincipalIdealRing.isNoetherianRing",
   "Field.toSemifield",
   "FunLike.coe",
   "Pi.topologicalSpace",
   "NormedField.toNormedCommRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "Real.instLinearOrderedAddCommGroupReal",
   "LE.le",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "ContinuousLinearMap.toSeminormedAddCommGroup",
   "Eq.ndrec",
   "RingHomIsometric.ids",
   "instTopologicalRingRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceToNonUnitalNonAssocRingToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "TopologicalSemiring.toContinuousAdd",
   "letFun",
   "Semifield.toDivisionSemiring",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Real.instAddCommMonoidReal",
   "Pi.module",
   "ContinuousMapClass.toFunLike",
   "Finset.single_le_sum",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "Real.instMulReal",
   "Real.instLEReal",
   "Real.normedField",
   "Pi.summable",
   "NNNorm.nnnorm",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "SMulWithZero.toSMulZeroClass",
   "Iff.mp",
   "Pi.seminormedAddCommGroup",
   "norm_norm",
   "NormedField.toNormedSpace",
   "Nat",
   "IsNoetherianRing.strongRankCondition",
   "FiniteDimensional",
   "TopologicalSpace.t2Space_of_metrizableSpace",
   "Module.Free.of_divisionRing",
   "ContinuousLinearEquiv.toContinuousLinearMap",
   "Real.field",
   "Finset.instMembershipFinset",
   "Fin.fintype",
   "Iff.intro",
   "Pi.seminormedAddGroup",
   "instHMul",
   "Finset.univ",
   "MulActionWithZero.toSMulWithZero",
   "ContinuousLinearMap",
   "Real.orderedAddCommMonoid",
   "Field.toEuclideanDomain",
   "Eq.mp",
   "Finset.mem_univ",
   "congrArg",
   "SeminormedAddCommGroup.toSeminormedAddGroup",
   "BoundedSMul.continuousSMul",
   "NormedAddCommGroup.toAddCommGroup",
   "complete_of_proper",
   "instCompleteSpaceRealToUniformSpacePseudoMetricSpace",
   "Summable.of_norm",
   "ContinuousLinearEquiv.summable",
   "SeminormedRing.toPseudoMetricSpace",
   "FiniteDimensional.proper_real",
   "SeminormedAddGroup.toNorm",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Summable.of_norm_bounded",
   "NormedSpace",
   "Pi.addCommMonoid",
   "ContinuousLinearEquiv.continuousSemilinearEquivClass",
   "TopologicalRing.toTopologicalSemiring",
   "SeminormedAddCommGroup.toNorm",
   "id",
   "Membership.mem",
   "norm_nonneg",
   "FiniteDimensional.finBasis",
   "pi_norm_le_iff_of_nonneg",
   "Real.pseudoMetricSpace",
   "NonUnitalNonAssocSemiring.toMul",
   "Finset.sum_nonneg",
   "Ring.toSemiring",
   "ContinuousLinearEquiv.symm_apply_apply",
   "SeminormedAddGroup.toNNNorm",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "Real.instZeroReal",
   "DivisionSemiring.toSemiring",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NegZeroClass.toZero",
   "ContinuousLinearMap.le_op_norm",
   "DenselyNormedField.toNontriviallyNormedField"],
  "name": "summable_norm_iff",
  "constType":
  "∀ {α : Type u_1} {E : Type u_2} [inst : NormedAddCommGroup E] [inst_1 : NormedSpace ℝ E]\n  [inst_2 : FiniteDimensional ℝ E] {f : α → E}, (Summable fun x => ‖f x‖) ↔ Summable f",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Distrib.toAdd",
   "add_assoc",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Semiring.toNonAssocSemiring",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "AddMonoid.toAddSemigroup",
   "CommSemiring",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_lt",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a₂ b c : R} (a₁ : R), a₂ + b = c → a₁ + a₂ + b = a₁ + c",
  "constCategory": "Theorem"},
 {"references":
  ["LinearOrder.decidableLE",
   "LinearOrder",
   "Int.mul_pos",
   "LinearOrder.max_def",
   "StrictOrderedRing.mk",
   "LinearOrder.min_def",
   "LinearOrder.le_total",
   "CommRing.mul_comm",
   "Int.linearOrderedCommRing.proof_2",
   "CommRing",
   "LinearOrder.toOrd",
   "Int.add_le_add_left",
   "Int.linearOrderedCommRing.proof_1",
   "LinearOrderedCommRing.mk",
   "LinearOrder.compare_eq_compareOfLessAndEq",
   "LinearOrder.decidableLT",
   "LinearOrder.toMax",
   "CommRing.toRing",
   "LinearOrder.toMin",
   "LinearOrderedCommRing",
   "LinearOrder.decidableEq",
   "LinearOrder.toPartialOrder",
   "Int.instLinearOrderInt",
   "Nontrivial",
   "Int.instNontrivialInt",
   "LinearOrderedRing.mk",
   "Int",
   "Int.instCommRingInt"],
  "name": "Int.linearOrderedCommRing",
  "constType": "LinearOrderedCommRing ℤ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedCommRing.toLinearOrderedRing",
   "StrictOrderedCommRing",
   "StrictOrderedCommRing.mk",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing",
   "LinearOrderedCommRing.mul_comm"],
  "name": "LinearOrderedCommRing.toStrictOrderedCommRing",
  "constType":
  "{α : Type u} → [d : LinearOrderedCommRing α] → StrictOrderedCommRing α",
  "constCategory": "Definition"},
 {"references": ["Norm", "NormedDivisionRing"],
  "name": "NormedDivisionRing.toNorm",
  "constType": "{α : Type u_5} → [self : NormedDivisionRing α] → Norm α",
  "constCategory": "Definition"},
 {"references": ["Iff", "Iff.refl"],
  "name": "Iff.rfl",
  "constType": "∀ {a : Prop}, a ↔ a",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Inf.inf",
   "Filter.Tendsto.inf",
   "Exists.casesOn",
   "Filter.NeBot",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "Lean.Data.AC.Variable",
   "Iff.mp",
   "Option.none",
   "Bool.true",
   "Lean.Data.AC.Context.eq_of_norm",
   "Filter",
   "Filter.Tendsto",
   "Nat",
   "Set.image",
   "instIsIdempotent",
   "And.casesOn",
   "_private.Mathlib.Topology.Compactness.Compact.0.nhdsWithin._eq_1",
   "Lattice.toSemilatticeInf",
   "Lean.Data.AC.eval",
   "eq_of_heq",
   "Set.instMembershipSet",
   "And",
   "instIsAssociative",
   "Filter.le_principal_iff",
   "HEq.refl",
   "Filter.instPartialOrderFilter",
   "congr",
   "And.intro",
   "congrArg",
   "ContinuousOn",
   "Lean.Data.AC.Context.mk",
   "Lean.Data.AC.Expr.var",
   "Lean.Data.AC.Expr.op",
   "inf_le_right",
   "Exists",
   "HEq",
   "Set",
   "ClusterPt.neBot",
   "Eq.refl",
   "Exists.intro",
   "Lean.IsNeutral",
   "Filter.Tendsto.neBot",
   "instIsIdempotentInfToInf",
   "Filter.principal",
   "instIsAssociativeInfToInf",
   "Lean.Data.AC.Variable.mk",
   "CompleteLattice.toConditionallyCompleteLattice",
   "Lean.Data.AC.Context",
   "TopologicalSpace",
   "instOfNatNat",
   "Option.some",
   "List.nil",
   "nhdsWithin",
   "Eq.symm",
   "Filter.instCompleteLatticeFilter",
   "instMembershipSetFilter",
   "Filter.comap_inf_principal_neBot_of_image_mem",
   "Set.mem_image_of_mem",
   "id",
   "Membership.mem",
   "List.cons",
   "nhds",
   "ConditionallyCompleteLattice.toLattice",
   "instIsCommutative",
   "instIsCommutativeInfToInf",
   "Lean.IsIdempotent",
   "LE.le",
   "ClusterPt",
   "Filter.tendsto_comap",
   "Eq.ndrec",
   "Lean.Data.AC.instEvalInformationContext",
   "Lean.IsCommutative",
   "letFun",
   "Filter.instInfFilter",
   "Filter.comap",
   "Bool",
   "Eq.casesOn",
   "IsCompact"],
  "name": "IsCompact.image_of_continuousOn",
  "constType":
  "∀ {X : Type u} {Y : Type v} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace Y] {s : Set X} {f : X → Y},\n  IsCompact s → ContinuousOn f s → IsCompact (f '' s)",
  "constCategory": "Theorem"},
 {"references":
  ["LinearOrderedAddCommGroup",
   "Neg.toHasAbs",
   "AddCommGroup.toDivisionAddCommMonoid",
   "OfNat.ofNat",
   "OrderedAddCommGroup.toPartialOrder",
   "PartialOrder.toPreorder",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "instDistribLattice",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "abs_eq_self",
   "LE.le",
   "Preorder.toLE",
   "Abs.abs",
   "Eq",
   "Zero.toOfNat0",
   "DistribLattice.toLattice",
   "SemilatticeSup.toSup",
   "propext",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "Lattice.toSemilatticeSup",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.13",
  "constType":
  "∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α] {a : α}, (|a| = a) = (0 ≤ a)",
  "constCategory": "Theorem"},
 {"references": ["Fin.cons", "Nat", "Nat.succ", "Fin"],
  "name": "Matrix.vecCons",
  "constType":
  "{α : Type u} → {n : ℕ} → α → (Fin n → α) → Fin (Nat.succ n) → α",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "Prod",
   "instOfNatNat",
   "Nat",
   "EisensteinSeries.MoebiusPerm",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "EisensteinSeries.MoebiusEquiv._elambda_1._cstage1",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ → ℤ × ℤ → ℤ × ℤ",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "Ring.toAddGroupWithOne",
   "AddGroup",
   "CommRing.toRing",
   "Int",
   "Int.instCommRingInt",
   "AddGroupWithOne.toAddGroup"],
  "name": "Int.instAddGroupInt",
  "constType": "AddGroup ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Neg.toHasAbs",
   "CauSeq.Completion.instIntCastCauchy",
   "DivisionRing.toRing",
   "Real",
   "Rat",
   "Rat.instLinearOrderedRingRat",
   "Real.ofCauchy",
   "Abs.abs",
   "Rat.instSupRat",
   "IntCast.mk",
   "IsAbsoluteValue.abs_isAbsoluteValue",
   "Int.cast",
   "Rat.divisionRing",
   "Rat.instNegRat",
   "CauSeq.Completion.Cauchy",
   "Int",
   "Rat.instLinearOrderedFieldRat",
   "IntCast"],
  "name": "Real.intCast",
  "constType": "IntCast ℝ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Preorder",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["PartialHomeomorph.continuousOn_invFun",
   "PartialHomeomorph.open_target",
   "PartialHomeomorph.continuousOn_toFun",
   "PartialHomeomorph.toPartialEquiv",
   "PartialHomeomorph.mk",
   "PartialHomeomorph",
   "PartialHomeomorph.open_source",
   "TopologicalSpace",
   "PartialEquiv.symm"],
  "name": "PartialHomeomorph.symm",
  "constType":
  "{α : Type u_1} →\n  {β : Type u_2} →\n    [inst : TopologicalSpace α] → [inst_1 : TopologicalSpace β] → PartialHomeomorph α β → PartialHomeomorph β α",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "instOfNatInt",
   "Top.top",
   "SlashInvariantForm.mk",
   "SlashInvariantFormClass.toFunLike",
   "instDecidableEqFin",
   "Subgroup.instTopSubgroup",
   "Fin.fintype",
   "FunLike.coe",
   "EisensteinSeries.Eisenstein_series_is_bounded",
   "EisensteinSeries.Eisenstein_SIF",
   "LE.le",
   "ModularForm",
   "EisensteinSeries.EisensteinSeriesModularForm.proof_1",
   "ModularForm.mk",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Matrix.SpecialLinearGroup",
   "SlashInvariantFormClass.slashInvariantForm",
   "SlashInvariantForm",
   "Subgroup",
   "Complex",
   "UpperHalfPlane",
   "instOfNatNat",
   "EisensteinSeries.Eisenstein_series_is_mdiff",
   "Nat",
   "Int",
   "Int.instLEInt",
   "Fin",
   "Int.instCommRingInt"],
  "name": "EisensteinSeries.EisensteinSeriesModularForm",
  "constType": "(k : ℤ) → 3 ≤ k → ModularForm ⊤ k",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_one",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "one_div",
   "DivInvMonoid.Pow",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Real.instOneReal",
   "Semiring.toNatCast",
   "IsROrC.charZero_isROrC",
   "Set.Elem",
   "NormedDivisionRing.toDivisionRing",
   "Real.instPowReal",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Complex.instOneComplex",
   "Summable",
   "Subtype",
   "Nat.strictOrderedSemiring",
   "GroupWithZero.toInv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "instHDiv",
   "Complex.instNontrivialComplex",
   "Prod.snd",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "map_inv₀",
   "SubadditiveHomClass.toFunLike",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "forall_prop_domain_congr",
   "False.elim",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instNatAtLeastTwo",
   "congr",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "Int.subNatNat",
   "congrFun",
   "AddZeroClass.toAdd",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.5",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Mathlib.Data.Int.Cast.Lemmas._auxLemma.8",
   "HEq",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Set",
   "GE.ge",
   "EisensteinSeries.AbsEise_bounded_on_square",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "Complex.instSemiringComplex",
   "M_test_uniform",
   "Int.add_one_le_iff",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "EisensteinSeries.rfunct_pos",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Real.instLTReal",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "Neg.neg",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "Real.instDivisionRingReal",
   "div_ne_zero",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "instTopologicalRingRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceToNonUnitalNonAssocRingToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "letFun",
   "Semifield.toDivisionSemiring",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Subtype.mk",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "HAdd.hAdd",
   "AbsoluteValue",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Inv",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Ring.toIntCast",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Filter",
   "le_trans",
   "not_false_eq_true",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "lt_of_not_ge",
   "Real.orderedSemiring",
   "GroupWithZero.toDivInvMonoid",
   "Int.instLTInt",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "HEq.refl",
   "of_eq_true",
   "Mathlib.Topology.Sets.Opens._auxLemma.1",
   "Int.cast",
   "eise",
   "Eq.mp",
   "Filter.atTop",
   "NormedField.toNormedDivisionRing",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "SeminormedRing.toPseudoMetricSpace",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "EisensteinSeries.rfunctbound'",
   "EisensteinSeries.eisenSquare",
   "TopologicalRing.toTopologicalSemiring",
   "summable_mul_left_iff",
   "AddMonoid.toZero",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "Int.instLinearOrderInt",
   "NeZero.charZero_one",
   "CommSemiring.toCommMonoidWithZero",
   "id",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "False",
   "AddMonoidWithOne.toAddMonoid",
   "Real.pseudoMetricSpace",
   "Real.rpow_int_cast",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.to_charZero",
   "StrictOrderedSemiring.toPartialOrder",
   "EisensteinSeries.lbpoint",
   "OrderedCommSemiring.toOrderedSemiring",
   "EisensteinSeries.eisensteinSeriesRestrict",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Eq.casesOn",
   "Bool",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "upper_half_plane_isOpen",
   "Nat.cast_zero",
   "Iff.mpr",
   "EisensteinSeries.nonemp",
   "Real.orderedRing",
   "Mathlib.Meta.NormNum.isInt_add",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Complex.instField",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "Finset.range",
   "AbsEise",
   "EisensteinSeries.Eisenstein_series_is_sum_eisen_squares_slice",
   "UpperHalfPlane.upperHalfSpace",
   "HDiv.hDiv",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "instHSub",
   "Complex.abs",
   "eq_of_heq",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.7",
   "Real.normedCommRing",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Real.summable_nat_rpow_inv",
   "Complex.im",
   "MonoidWithZero.toMulZeroOneClass",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Int",
   "EisensteinSeries.eisenSquareSlice",
   "Inv.inv",
   "Exists",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Complex.instInvComplex",
   "AddMonoid.toAddZeroClass",
   "TopologicalSpace.Opens.mk",
   "True",
   "AbsoluteValue.subadditiveHomClass",
   "TendstoUniformly",
   "AddMonoidWithOne.toNatCast",
   "Eq.substr",
   "AddMonoid.toAddSemigroup",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "DivInvMonoid.toDiv",
   "zpow_ne_zero",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Real.nontrivial",
   "Finset.sum",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "Mathlib.Tactic.Ring.neg_add",
   "Bool.false",
   "Real.instPreorderReal",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.8",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Prod",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Mathlib.Tactic.Ring.add_mul",
   "Real.instAddCommMonoidReal",
   "Mathlib.Tactic.Ring.atom_pf",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "EisensteinSeries.complex_abs_sum_le",
   "Monoid.toOne",
   "AddGroupWithOne.toSub",
   "MulZeroOneClass.toMulOneClass",
   "Real.instSubReal",
   "Real.instLEReal",
   "Real.instMulReal",
   "Exists.casesOn",
   "implies_congr",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Eq",
   "Mathlib.Data.Subtype._auxLemma.1",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Real.instInvReal",
   "Nat",
   "Finset.sum_congr",
   "EisensteinSeries.square",
   "EisensteinSeries.eisenParSumSlice",
   "AddCommMonoid",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "DivisionSemiring.toGroupWithZero",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Real.intCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "Int.instAddInt",
   "Iff.symm",
   "Mathlib.Order.Basic._auxLemma.2",
   "instHMul",
   "Int.instAddGroupInt",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.instIsDomainRealSemiring",
   "Not",
   "congrArg",
   "map_zpow₀",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "TopologicalSpace.Opens",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "CanLift.prf",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Ring.toNonAssocRing",
   "zpow_ofNat",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "forall_congr",
   "instHPow",
   "Preorder.toLT",
   "TopologicalSpace",
   "Linarith.mul_neg",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "funext",
   "Real.instMonoidReal",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "tsum",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Real.instZeroReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.Eisen_partial_tends_to_uniformly",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (A B : ℝ),\n      0 ≤ A →\n        0 < B →\n          TendstoUniformly (EisensteinSeries.eisenParSumSlice k A B) (EisensteinSeries.eisensteinSeriesRestrict k A B)\n            Filter.atTop",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.normSq.proof_3",
   "Complex.normSq.proof_1",
   "ZeroHom.mk",
   "instHAdd",
   "Real",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.instMulReal",
   "MulZeroOneClass.toZero",
   "Complex.normSq.proof_2",
   "NonAssocSemiring.toMulZeroOneClass",
   "Complex.re",
   "Complex.im",
   "Complex.instSemiringComplex",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Real.semiring",
   "HMul.hMul",
   "Complex",
   "MonoidWithZeroHom",
   "MonoidWithZeroHom.mk"],
  "name": "Complex.normSq",
  "constType": "ℂ →*₀ ℝ",
  "constCategory": "Definition"},
 {"references": ["DivisionMonoid", "DivisionCommMonoid"],
  "name": "DivisionCommMonoid.toDivisionMonoid",
  "constType":
  "{G : Type u} → [self : DivisionCommMonoid G] → DivisionMonoid G",
  "constCategory": "Definition"},
 {"references":
  ["AbsEise",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "Real.pseudoMetricSpace",
   "Prod",
   "tsum",
   "UpperHalfPlane",
   "UniformSpace.toTopologicalSpace",
   "Real.instAddCommMonoidReal",
   "Int"],
  "name": "AbsEisenstein_tsum",
  "constType": "ℤ → UpperHalfPlane → ℝ",
  "constCategory": "Definition"},
 {"references": ["Zero", "AddZeroClass"],
  "name": "AddZeroClass.toZero",
  "constType": "{M : Type u} → [self : AddZeroClass M] → Zero M",
  "constCategory": "Definition"},
 {"references":
  ["SemigroupWithZero.toSemigroup",
   "Semigroup.toMul",
   "CommSemiring.toSemiring",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "mul_assoc",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "NonUnitalSemiring.toSemigroupWithZero",
   "HMul.hMul",
   "CommSemiring.toNonUnitalCommSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Eq.symm",
   "Eq"],
  "name": "Mathlib.Tactic.RingNF.mul_assoc_rev",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (a b c : R), a * (b * c) = a * b * c",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Eq",
  "constType": "{α : Sort u_1} → α → α → Prop",
  "constCategory": "Other"},
 {"references":
  ["Exists",
   "OfNat.ofNat",
   "Real",
   "Set",
   "Eq.refl",
   "implies_congr",
   "True",
   "iff_self",
   "Zero.toOfNat0",
   "Iff",
   "forall_congr",
   "Filter",
   "Metric.ball",
   "UniformSpace.toTopologicalSpace",
   "IsOpen",
   "Eq.trans",
   "PseudoMetricSpace",
   "instMembershipSetFilter",
   "Membership.mem",
   "Real.instLTReal",
   "nhds",
   "PseudoMetricSpace.toUniformSpace",
   "HasSubset.Subset",
   "GT.gt",
   "Set.instMembershipSet",
   "Real.instZeroReal",
   "And",
   "Set.instHasSubsetSet",
   "of_eq_true",
   "congrArg",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.32",
   "congrFun",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.33"],
  "name": "Metric.isOpen_iff",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {s : Set α}, IsOpen s ↔ ∀ x ∈ s, ∃ ε > 0, Metric.ball x ε ⊆ s",
  "constCategory": "Theorem"},
 {"references": ["AddGroupWithOne", "Sub"],
  "name": "AddGroupWithOne.toSub",
  "constType": "{R : Type u} → [self : AddGroupWithOne R] → Sub R",
  "constCategory": "Definition"},
 {"references": ["NonUnitalSeminormedCommRing", "NonUnitalSeminormedRing"],
  "name": "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
  "constType":
  "{α : Type u_5} → [self : NonUnitalSeminormedCommRing α] → NonUnitalSeminormedRing α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "AddZeroClass.toAdd",
   "AddZeroClass.toZero",
   "OfNat.ofNat",
   "propext",
   "instHAdd",
   "add_le_iff_nonpos_right",
   "HAdd.hAdd",
   "CovariantClass",
   "LE",
   "LE.le",
   "AddZeroClass",
   "ContravariantClass",
   "Eq"],
  "name": "Mathlib.Algebra.Order.Monoid.Lemmas._auxLemma.19",
  "constType":
  "∀ {α : Type u_1} [inst : AddZeroClass α] [inst_1 : LE α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1]\n  [inst_3 : ContravariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] (a : α) {b : α}, (a + b ≤ a) = (b ≤ 0)",
  "constCategory": "Theorem"},
 {"references": ["Monoid", "One"],
  "name": "Monoid.toOne",
  "constType": "{M : Type u} → [self : Monoid M] → One M",
  "constCategory": "Definition"},
 {"references":
  ["Real.orderedAddCommGroup",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Nat.decLt",
   "Real",
   "Real.isROrC",
   "Eq.refl",
   "EisensteinSeries.rfunct",
   "instLTNat",
   "Nat.cast_zero",
   "Eq",
   "Decidable.decide",
   "Zero.toOfNat0",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.9",
   "IsROrC.charZero_isROrC",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toZero",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Eq.symm",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "absurd",
   "Eq.trans",
   "EisensteinSeries.rfunct_pos",
   "Ne",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "Ring.toAddGroupWithOne",
   "Real.partialOrder",
   "Real.instLTReal",
   "of_decide_eq_false",
   "OrderedSemiring.zeroLEOneClass",
   "AddMonoidWithOne.toAddMonoid",
   "Real.instRingReal",
   "Real.orderedSemiring",
   "Real.instZeroReal",
   "Eq.ndrec",
   "LT.lt",
   "Real.semiring",
   "Eq.mp",
   "letFun",
   "congr",
   "Bool",
   "congrArg"],
  "name": "EisensteinSeries.rfunct_ne_zero",
  "constType": "∀ (z : UpperHalfPlane), EisensteinSeries.rfunct z ≠ 0",
  "constCategory": "Theorem"},
 {"references": ["Lean.PrettyPrinter.UnexpandM", "Lean.Syntax"],
  "name": "Lean.PrettyPrinter.Unexpander",
  "constType": "Type",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "pow_one",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "HPow.hPow",
   "instHAdd",
   "Nat.rawCast",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "HMul.hMul",
   "mul_one",
   "add_zero",
   "congrArg",
   "Nat.semiring",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.atom_pf",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (a : R), a = a ^ Nat.rawCast 1 * Nat.rawCast 1 + 0",
  "constCategory": "Theorem"},
 {"references":
  ["Subtype.prop",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Semiring.toMonoidWithZero",
   "PosMulStrictMono",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_left",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.toSemiring",
   "Zero.toOfNat0",
   "instHMul",
   "StrictOrderedSemiring",
   "Semiring.toNonAssocSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "Preorder.toLT",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "HMul.hMul",
   "CovariantClass.mk",
   "MonoidWithZero.toZero",
   "Subtype"],
  "name": "StrictOrderedSemiring.toPosMulStrictMono",
  "constType":
  "∀ {α : Type u} [inst : StrictOrderedSemiring α], PosMulStrictMono α",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toRing",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrder.decidableLE",
   "LinearOrder",
   "LinearOrder.max_def",
   "Real",
   "Real.nontrivial",
   "StrictOrderedRing.mk",
   "LinearOrder.min_def",
   "LinearOrder.le_total",
   "Real.commRing",
   "CommRing.mul_comm",
   "StrictOrderedRing.toNontrivial",
   "StrictOrderedRing.mul_pos",
   "CommRing",
   "StrictOrderedRing.zero_le_one",
   "LinearOrder.toOrd",
   "Real.linearOrder",
   "LinearOrderedCommRing.mk",
   "LinearOrder.compare_eq_compareOfLessAndEq",
   "LinearOrder.decidableLT",
   "StrictOrderedRing",
   "LinearOrder.toMax",
   "StrictOrderedRing.add_le_add_left",
   "LinearOrder.toMin",
   "LinearOrderedCommRing",
   "LinearOrder.decidableEq",
   "Nontrivial",
   "Real.strictOrderedRing",
   "LinearOrderedRing.mk"],
  "name": "Real.linearOrderedCommRing",
  "constType": "LinearOrderedCommRing ℝ",
  "constCategory": "Definition"},
 {"references": ["Or"],
  "name": "Or.inl",
  "constType": "∀ {a b : Prop}, a → a ∨ b",
  "constCategory": "Other"},
 {"references":
  ["Zero.toOfNat0", "Zero", "OfNat.ofNat", "GE.ge", "LE", "LE.le"],
  "name": "le_zero_of_zero_ge",
  "constType":
  "∀ {α : Type u_1} [inst : Zero α] [inst_1 : LE α] {a : α}, 0 ≥ a → a ≤ 0",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Ne",
   "OfNat.ofNat",
   "pow_eq_zero",
   "mt",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "Eq",
   "NoZeroDivisors",
   "Zero.toOfNat0",
   "MonoidWithZero.toMulZeroOneClass",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toZero",
   "Nat",
   "MonoidWithZero"],
  "name": "pow_ne_zero",
  "constType":
  "∀ {M : Type u_3} [inst : MonoidWithZero M] [inst_1 : NoZeroDivisors M] {a : M} (n : ℕ), a ≠ 0 → a ^ n ≠ 0",
  "constCategory": "Theorem"},
 {"references":
  ["Exists",
   "OfNat.ofNat",
   "Real",
   "Set",
   "Eq.refl",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.35",
   "implies_congr",
   "True",
   "iff_self",
   "Dist.dist",
   "Eq",
   "Zero.toOfNat0",
   "Eq.mpr",
   "Iff",
   "forall_congr",
   "Filter.Tendsto",
   "Filter",
   "UniformSpace.toTopologicalSpace",
   "nhdsWithin",
   "Eq.symm",
   "Eq.trans",
   "PseudoMetricSpace",
   "id",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.25",
   "Membership.mem",
   "funext",
   "Real.instLTReal",
   "nhds",
   "PseudoMetricSpace.toUniformSpace",
   "Set.univ",
   "GT.gt",
   "Set.instMembershipSet",
   "Real.instZeroReal",
   "And",
   "PseudoMetricSpace.toDist",
   "Eq.ndrec",
   "of_eq_true",
   "propext",
   "LT.lt",
   "Metric.tendsto_nhdsWithin_nhdsWithin",
   "congrArg",
   "nhdsWithin_univ",
   "congrFun"],
  "name": "Metric.tendsto_nhdsWithin_nhds",
  "constType":
  "∀ {α : Type u} {β : Type v} [inst : PseudoMetricSpace α] {s : Set α} [inst_1 : PseudoMetricSpace β] {f : α → β} {a : α}\n  {b : β},\n  Filter.Tendsto f (nhdsWithin a s) (nhds b) ↔ ∀ ε > 0, ∃ δ > 0, ∀ {x : α}, x ∈ s → dist x a < δ → dist (f x) b < ε",
  "constCategory": "Theorem"},
 {"references":
  ["InvolutiveInv.toInv",
   "InvolutiveInv.inv_inv",
   "InvolutiveInv",
   "Inv.inv",
   "Eq"],
  "name": "inv_inv",
  "constType": "∀ {G : Type u_1} [inst : InvolutiveInv G] (a : G), a⁻¹⁻¹ = a",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "AddZeroClass.toAdd",
   "Distrib.toAdd",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "instHAdd",
   "HAdd.hAdd",
   "Nat.rawCast",
   "AddMonoidWithOne.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Semiring.toNonAssocSemiring",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "of_eq_true",
   "Mathlib.Meta.NormNum.IsNat",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "congr",
   "Mathlib.Tactic.Ring.cast_pos.match_1",
   "CommSemiring.toCommMonoidWithZero",
   "Nat",
   "add_zero",
   "congrArg",
   "Eq.trans"],
  "name": "Mathlib.Tactic.Ring.cast_pos",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a : R} {n : ℕ}, Mathlib.Meta.NormNum.IsNat a n → a = Nat.rawCast n + 0",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Subtype.coe_prop",
   "eq_true",
   "Subtype.val",
   "Set",
   "True",
   "Subtype",
   "Eq",
   "Set.instMembershipSet"],
  "name": "Mathlib.Data.Subtype._auxLemma.5",
  "constType":
  "∀ {α : Type u_1} {S : Set α} (a : { a // a ∈ S }), (↑a ∈ S) = True",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "eq_false",
   "OfNat.ofNat",
   "NeZero",
   "False",
   "zero_ne_one",
   "One",
   "One.toOfNat1",
   "Eq"],
  "name": "Mathlib.Algebra.NeZero._auxLemma.3",
  "constType":
  "∀ {α : Type u_2} [inst : Zero α] [inst_1 : One α] [inst_2 : NeZero 1], (0 = 1) = False",
  "constCategory": "Theorem"},
 {"references": ["SeminormedAddCommGroup", "PseudoMetricSpace"],
  "name": "SeminormedAddCommGroup.toPseudoMetricSpace",
  "constType":
  "{E : Type u_9} → [self : SeminormedAddCommGroup E] → PseudoMetricSpace E",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "HPow.hPow",
   "Ne",
   "OfNat.ofNat",
   "instHPow",
   "zpow_eq_zero",
   "GroupWithZero",
   "DivInvMonoid.Pow",
   "MonoidWithZero.toZero",
   "GroupWithZero.toDivInvMonoid",
   "mt",
   "GroupWithZero.toMonoidWithZero",
   "Int",
   "Eq"],
  "name": "zpow_ne_zero",
  "constType":
  "∀ {G₀ : Type u_1} [inst : GroupWithZero G₀] {x : G₀} (n : ℤ), x ≠ 0 → x ^ n ≠ 0",
  "constCategory": "Theorem"},
 {"references": ["Nat"],
  "name": "Nat.succ",
  "constType": "ℕ → ℕ",
  "constCategory": "Other"},
 {"references":
  ["Neg.toHasAbs",
   "CauSeq.Completion.instAddCauchy",
   "DivisionRing.toRing",
   "instHAdd",
   "Real",
   "HAdd.hAdd",
   "Rat",
   "Rat.instLinearOrderedRingRat",
   "Real.ofCauchy",
   "Abs.abs",
   "Rat.instSupRat",
   "IsAbsoluteValue.abs_isAbsoluteValue",
   "Rat.divisionRing",
   "Real.definition.match_1._@.Mathlib.Data.Real.Basic._hyg.827",
   "Rat.instNegRat",
   "CauSeq.Completion.Cauchy",
   "Rat.instLinearOrderedFieldRat"],
  "name": "Real.definition._@.Mathlib.Data.Real.Basic._hyg.827",
  "constType": "ℝ → ℝ → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Real.instLEReal",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.isROrC",
   "DivInvMonoid.Pow",
   "Real.instSupReal",
   "DivisionRing.toRatCast",
   "Complex.instRatCastComplex",
   "Exists.casesOn",
   "And.left",
   "Real.orderedRing",
   "Preorder.toLE",
   "Semiring.toNatCast",
   "Complex.abs_ofReal",
   "Eq",
   "Complex.Complex.addGroupWithOne",
   "Mathlib.Data.Complex.Basic._auxLemma.14",
   "IsROrC.charZero_isROrC",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Nat.cast",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "Ring.toIntCast",
   "Rat.cast",
   "UpperHalfPlane",
   "Std.Classes.Order._auxLemma.3",
   "HDiv.hDiv",
   "Nat",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Nat.cast_one",
   "Complex.instOneComplex",
   "HPow.hPow",
   "Complex.abs",
   "Complex.instNontrivialComplex",
   "instHDiv",
   "Prod.snd",
   "EisensteinSeries.auxlem",
   "Complex.charZero",
   "UpperHalfPlane.coe",
   "Complex.instAddComplex",
   "Prod.fst",
   "Real.intCast",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "Rat.divInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "And",
   "AddMonoidWithOne.toOne",
   "EisensteinSeries.baux2",
   "Real.instIsDomainRealSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Int.cast",
   "Eq.mp",
   "congr",
   "Field.toDiv",
   "Field.toDivisionRing",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "Int",
   "Int.instLEInt",
   "congrFun",
   "Exists",
   "Real.instLinearOrderedFieldReal",
   "instOfNatInt",
   "DivisionRing.toRing",
   "Real",
   "CanLift.prf",
   "Eq.refl",
   "pow_le_pow_left",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "LinearOrderedField.toDiv",
   "Abs.abs",
   "zpow_ofNat",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "map_pow",
   "instHPow",
   "Monoid.toNatPow",
   "OrderedRing.toOrderedSemiring",
   "instOfNatNat",
   "Eq.symm",
   "EisensteinSeries.rfunct_pos",
   "DivisionRing.toDiv",
   "id",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "AddGroupWithOne.toAddMonoidWithOne",
   "LT.lt.le",
   "Real.instMonoidReal",
   "MonoidHomClass.toMulHomClass",
   "instHAdd",
   "MulHomClass.toFunLike",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "FunLike.coe",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "LE.le",
   "Real.instZeroReal",
   "Real.instDivisionRingReal",
   "Eq.ndrec",
   "instNatCastInt",
   "Real.instPreorderReal",
   "letFun",
   "OrderedSemiring.toSemiring",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "HMul.hMul",
   "Prod",
   "Complex",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Complex.instMulComplex",
   "Mathlib.Data.Rat.Cast.CharZero._auxLemma.11",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.auxlem2",
  "constType":
  "∀ (z : UpperHalfPlane) (x : ℤ × ℤ) (k : ℤ),\n  0 ≤ k → Complex.abs (↑(EisensteinSeries.rfunct z) ^ k) ≤ Complex.abs ((↑z + ↑x.2 / ↑x.1) ^ k)",
  "constCategory": "Theorem"},
 {"references":
  ["TopologicalSpace.Opens.instChartedSpace.proof_4",
   "Membership.mem",
   "TopologicalSpace.Opens",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "TopologicalSpace.Opens.instChartedSpace.proof_2",
   "Subtype.val",
   "PartialHomeomorph",
   "Set",
   "ChartedSpace",
   "chartAt",
   "TopologicalSpace.Opens.instChartedSpace.proof_1",
   "SetLike.instMembership",
   "ChartedSpace.mk",
   "Set.instSingletonSet",
   "Set.iUnion",
   "PartialHomeomorph.subtypeRestr",
   "TopologicalSpace",
   "instTopologicalSpaceSubtype",
   "Singleton.singleton",
   "TopologicalSpace.Opens.instChartedSpace.proof_3",
   "Subtype"],
  "name": "TopologicalSpace.Opens.instChartedSpace",
  "constType":
  "{H : Type u} →\n  {M : Type u_2} →\n    [inst : TopologicalSpace H] →\n      [inst_1 : TopologicalSpace M] → [inst_2 : ChartedSpace H M] → (s : TopologicalSpace.Opens M) → ChartedSpace H ↥s",
  "constCategory": "Definition"},
 {"references":
  ["Subtype.val", "PseudoMetricSpace.induced", "Subtype", "PseudoMetricSpace"],
  "name": "Subtype.pseudoMetricSpace",
  "constType":
  "{α : Type u} → [inst : PseudoMetricSpace α] → {p : α → Prop} → PseudoMetricSpace (Subtype p)",
  "constCategory": "Definition"},
 {"references": ["Field", "CommRing"],
  "name": "Field.toCommRing",
  "constType": "{K : Type u} → [self : Field K] → CommRing K",
  "constCategory": "Definition"},
 {"references": ["Subsingleton.allEq", "Subsingleton", "Eq"],
  "name": "Subsingleton.elim",
  "constType": "∀ {α : Sort u} [h : Subsingleton α] (a b : α), a = b",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "True",
  "constType": "Prop",
  "constCategory": "Other"},
 {"references": ["Zero.toOfNat0", "Zero", "OfNat.ofNat", "Zero.mk"],
  "name": "Pi.instZero",
  "constType":
  "{I : Type u} → {f : I → Type v₁} → [inst : (i : I) → Zero (f i)] → Zero ((i : I) → f i)",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "HAdd.hAdd",
   "abs_pos",
   "AddGroup.toSubtractionMonoid",
   "Preorder.toLE",
   "Abs.abs",
   "Eq",
   "Zero.toOfNat0",
   "AddGroup",
   "SemilatticeSup.toSup",
   "AddMonoid.toAddSemigroup",
   "Preorder.toLT",
   "Lattice.toSemilatticeSup",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Neg.toHasAbs",
   "Ne",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "AddSemigroup.toAdd",
   "instHAdd",
   "instDistribLattice",
   "SemilatticeInf.toPartialOrder",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "DistribLattice.toLattice",
   "propext",
   "LT.lt",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.5",
  "constType":
  "∀ {α : Type u_1} [inst : AddGroup α] [inst_1 : LinearOrder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] {a : α}, (0 < |a|) = (a ≠ 0)",
  "constCategory": "Theorem"},
 {"references":
  ["DivisionMonoid",
   "_private.Mathlib.Algebra.Group.Defs.0.inv_eq_of_mul",
   "Group.toDivisionMonoid.proof_1",
   "Group.toDivisionMonoid.proof_2",
   "DivisionMonoid.mk",
   "Group",
   "Group.toDivInvMonoid"],
  "name": "Group.toDivisionMonoid",
  "constType": "{G : Type u_1} → [inst : Group G] → DivisionMonoid G",
  "constCategory": "Definition"},
 {"references":
  ["EStateM.Result.ok",
   "Lean.Syntax.node2",
   "Lean.Name.anonymous._impl",
   "Lean.Syntax.isOfKind",
   "Lean.Syntax.getArgs",
   "Lean.Name.mkStr4",
   "Array.append._rarg",
   "Lean.Syntax.atom",
   "_neutral",
   "Lean.Syntax.getArg",
   "Lean.Syntax.node",
   "EStateM.Result.error",
   "UInt8",
   "Array.mkEmpty",
   "PUnit.unit",
   "Bool.casesOn",
   "Lean.Syntax.node1",
   "_obj",
   "Lean.Name.num._override",
   "Bool.false",
   "Lean.replaceRef",
   "Lean.Name.str._override",
   "Lean.SourceInfo.fromRef"],
  "name":
  "EisensteinSeries._aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___unexpand_EisensteinSeries_holExtn_1._cstage2",
  "constType": "_obj → _obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "Module.toDistribMulAction",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "Semifield.toCommSemiring",
   "Semiring.toMonoidWithZero",
   "NormedAlgebra.id.proof_3",
   "AddCommGroup.toAddCommMonoid",
   "AddCommMonoid.toAddMonoid",
   "NormedSpace",
   "NormedField.toField",
   "Algebra.toRingHom",
   "SeminormedCommRing.toSeminormedRing",
   "SeminormedAddCommGroup.toAddCommGroup",
   "MonoidWithZero.toMonoid",
   "NormedField.toNormedSpace",
   "Algebra",
   "NormedAlgebra.id.proof_1",
   "NormedAlgebra",
   "DistribMulAction.toMulAction",
   "NormedAlgebra.id.proof_2",
   "NormedField",
   "Field.toSemifield",
   "NormedField.toNormedCommRing",
   "Ring.toSemiring",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "NormedCommRing.toSeminormedCommRing",
   "DivisionSemiring.toSemiring",
   "SeminormedRing.toRing",
   "MulAction.toSMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Semifield.toDivisionSemiring",
   "Algebra.mk",
   "Algebra.id",
   "NormedSpace.toModule",
   "NormedAlgebra.mk"],
  "name": "NormedAlgebra.id",
  "constType": "(𝕜 : Type u_5) → [inst : NormedField 𝕜] → NormedAlgebra 𝕜 𝕜",
  "constCategory": "Definition"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "AddZeroClass.toAdd",
   "PartialOrder.toPreorder",
   "instHAdd",
   "HAdd.hAdd",
   "AddCommMonoid.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "Function.swap",
   "OrderedCancelAddCommMonoid.toContravariantClassLeft",
   "Preorder.toLT",
   "LT.lt",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
   "AddCommMonoid.toAddCommSemigroup",
   "OrderedAddCommMonoid.toPartialOrder",
   "ContravariantClass",
   "contravariant_swap_add_of_contravariant_add",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.toContravariantClassRight",
  "constType":
  "∀ {α : Type u_1} [inst : OrderedCancelAddCommMonoid α],\n  ContravariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x < x_1",
  "constCategory": "Definition"},
 {"references": ["Trans", "Eq.rec", "Eq.symm", "Trans.mk", "Eq"],
  "name": "instTransEq",
  "constType":
  "{α : Sort u_1} → {γ : Sort u_2} → (r : α → γ → Sort u) → Trans Eq r r",
  "constCategory": "Definition"},
 {"references":
  ["nonzero_of_invertible",
   "Ne",
   "Invertible.invOf",
   "DivisionRing",
   "DivisionRing.toDivisionSemiring",
   "OfNat.ofNat",
   "NonUnitalNonAssocRing.toMul",
   "DivisionRing.toRing",
   "DivisionRing.toNontrivial",
   "Mathlib.Meta.NormNum.IsRat",
   "Semiring.toMonoidWithZero",
   "Mathlib.Meta.NormNum.IsRat.den_nz.match_1",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "NonAssocSemiring.toMulZeroOneClass",
   "Ring.toSemiring",
   "Invertible",
   "Ring.toNonAssocRing",
   "Eq",
   "Semiring.toNatCast",
   "Semiring.toOne",
   "Zero.toOfNat0",
   "instHMul",
   "DivisionSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "Int.cast",
   "Ring.toIntCast",
   "HMul.hMul",
   "Nat",
   "MonoidWithZero.toZero",
   "Int"],
  "name": "Mathlib.Meta.NormNum.IsRat.den_nz",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionRing α] {a : α} {n : ℤ} {d : ℕ}, Mathlib.Meta.NormNum.IsRat a n d → ↑d ≠ 0",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Eq.refl",
   "DivInvMonoid.Pow",
   "inv_one",
   "one_pow",
   "Eq",
   "zpow_ofNat",
   "DivisionMonoid",
   "Eq.mpr",
   "Nat.cast",
   "instHPow",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "InvOneClass.toInv",
   "id",
   "zpow_negSucc",
   "HPow.hPow",
   "instAddNat",
   "instHAdd",
   "One.toOfNat1",
   "DivInvMonoid.toMonoid",
   "DivInvMonoid.toInv",
   "InvOneClass.toOne",
   "Eq.ndrec",
   "instNatCastInt",
   "DivInvOneMonoid.toInvOneClass",
   "Int.negSucc",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionMonoid.toDivInvOneMonoid",
   "one_zpow.match_1",
   "Int",
   "Inv.inv"],
  "name": "one_zpow",
  "constType": "∀ {α : Type u_1} [inst : DivisionMonoid α] (n : ℤ), 1 ^ n = 1",
  "constCategory": "Theorem"},
 {"references": ["trivial", "Iff.intro", "propext", "True", "Eq"],
  "name": "eq_true",
  "constType": "∀ {p : Prop}, p → p = True",
  "constCategory": "Theorem"},
 {"references":
  ["_obj",
   "Lean.Name.num._override",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_9"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_10._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["SemilatticeSup",
   "Exists",
   "PartialOrder.toPreorder",
   "propext",
   "GE.ge",
   "Filter.eventually_atTop",
   "Filter.Eventually",
   "Filter.atTop",
   "Preorder.toLE",
   "SemilatticeSup.toPartialOrder",
   "Nonempty",
   "Eq"],
  "name": "Mathlib.Order.Filter.AtTopBot._auxLemma.4",
  "constType":
  "∀ {α : Type u_3} [inst : SemilatticeSup α] [inst_1 : Nonempty α] {p : α → Prop},\n  (∀ᶠ (x : α) in Filter.atTop, p x) = ∃ a, ∀ b ≥ a, p b",
  "constCategory": "Theorem"},
 {"references":
  ["Equiv",
   "RingHom.instRingHomClass",
   "CommSemiring.toSemiring",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "instDecidableEqFin",
   "one_div",
   "DivInvMonoid.Pow",
   "UpperHalfPlane.coe'",
   "Nat.cast_zero",
   "Semiring.toNatCast",
   "Complex.Complex.addGroupWithOne",
   "EisensteinSeries.MoebiusEquiv",
   "Nat.cast",
   "Complex.instField",
   "Int.castRingHom",
   "Mathlib.Data.Int.Basic._auxLemma.1",
   "NormedDivisionRing.toDivisionRing",
   "UpperHalfPlane.mk",
   "HSMul.hSMul",
   "HDiv.hDiv",
   "NonAssocRing.toNonAssocSemiring",
   "Complex.instOneComplex",
   "Int.instCommRingInt",
   "Subtype",
   "HPow.hPow",
   "instHDiv",
   "Prod.snd",
   "Matrix.semiring",
   "UpperHalfPlane.coe",
   "Complex.instAddComplex",
   "Real.instRingReal",
   "Complex.im",
   "Fin.instAddMonoidWithOne",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "Field.toDiv",
   "Int",
   "Fin",
   "Inv.inv",
   "congrFun",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Complex.instInvComplex",
   "algebraInt",
   "Matrix.det",
   "RingHomClass.toNonUnitalRingHomClass",
   "Subtype.property",
   "AddMonoidWithOne.toNatCast",
   "Eq.rec",
   "EisensteinSeries.Moebius_aux_lem",
   "DivInvMonoid.toDiv",
   "Complex.ofReal'",
   "Int.instMulInt",
   "NonUnitalNonAssocRing.toMul",
   "Real.instLTReal",
   "algebraMap",
   "One.toOfNat1",
   "Complex.instRingComplex",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "DivInvMonoid.toMonoid",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup.coeToGL",
   "Eq.ndrec",
   "UpperHalfPlane.denom_ne_zero",
   "letFun",
   "Prod",
   "instHSMul",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Mathlib.Data.Int.Cast.Basic._auxLemma.7",
   "NonUnitalRingHomClass.toMulHomClass",
   "UpperHalfPlane.SLAction",
   "Eq",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "Nat",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Nat.cast_one",
   "Fin.fintype",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "DivInvMonoid.toInv",
   "Int.instAddInt",
   "instHMul",
   "NonAssocRing.toIntCast",
   "Matrix.SpecialLinearGroup",
   "MulAction.toSMul",
   "Int.cast",
   "eise",
   "Eq.mp",
   "Fin.instOfNatFin",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "RingHom",
   "AddGroupWithOne.toIntCast",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "instHPow",
   "Matrix",
   "AddMonoid.toZero",
   "instOfNatNat",
   "Eq.symm",
   "Fin.instCommRing",
   "id",
   "NeZero.succ",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "eq_intCast",
   "NonUnitalNonAssocSemiring.toMul",
   "Equiv.instFunLikeEquiv",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Real.semiring",
   "Units.val",
   "Int.instSemiringInt",
   "HMul.hMul",
   "Complex",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.eise_Moebius",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane) (A : Matrix.SpecialLinearGroup (Fin 2) ℤ) (i : ℤ × ℤ),\n  eise k (A • z) i = (↑(↑A 1 0) * ↑z + ↑(↑A 1 1)) ^ k * eise k z ((EisensteinSeries.MoebiusEquiv A) i)",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "Semiring.mk",
   "Matrix.semiring.proof_4",
   "Semiring",
   "Matrix.semiring.proof_3",
   "Matrix.semiring.proof_10",
   "NonUnitalSemiring",
   "Matrix.semiring.proof_9",
   "Matrix.semiring.proof_1",
   "Matrix.nonUnitalNonAssocSemiring",
   "npowRec",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalNonAssocSemiring.mk",
   "Matrix.semiring.proof_6",
   "NonAssocSemiring",
   "Matrix.nonAssocSemiring",
   "Matrix.semiring.proof_11",
   "Matrix.semiring.proof_8",
   "Matrix.semiring.proof_2",
   "Fintype",
   "Semiring.toNonAssocSemiring",
   "DecidableEq",
   "Matrix",
   "NonUnitalSemiring.mk",
   "NonAssocSemiring.toOne",
   "NonAssocSemiring.toNatCast",
   "Matrix.semiring.proof_5",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Matrix.nonUnitalSemiring",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Matrix.semiring.proof_7"],
  "name": "Matrix.semiring",
  "constType":
  "{n : Type u_3} →\n  {α : Type v} → [inst : Semiring α] → [inst : Fintype n] → [inst : DecidableEq n] → Semiring (Matrix n n α)",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Ne",
   "AbsoluteValue.eq_zero",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Semiring",
   "AbsoluteValue",
   "Semiring.toMonoidWithZero",
   "Ne.symm",
   "FunLike.coe",
   "mt",
   "SubadditiveHomClass.toFunLike",
   "AbsoluteValue.nonneg",
   "Preorder.toLE",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "AbsoluteValue.subadditiveHomClass",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "lt_of_le_of_ne",
   "Semiring.toNonAssocSemiring",
   "Iff.mp",
   "Preorder.toLT",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "OrderedSemiring.toSemiring",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name": "AbsoluteValue.pos",
  "constType":
  "∀ {R : Type u_1} {S : Type u_2} [inst : Semiring R] [inst_1 : OrderedSemiring S] (abv : AbsoluteValue R S) {x : R},\n  x ≠ 0 → 0 < abv x",
  "constCategory": "Theorem"},
 {"references": ["DecidableEq", "Bool.decEq", "Bool"],
  "name": "instDecidableEqBool",
  "constType": "DecidableEq Bool",
  "constCategory": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring", "NonUnitalNonAssocCommSemiring"],
  "name": "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
  "constType":
  "{α : Type u} → [self : NonUnitalNonAssocCommSemiring α] → NonUnitalNonAssocSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Semiring.mk",
   "Int.zero_mul",
   "Int.instSubInt",
   "instOfNatInt",
   "Zero.ofOfNat0",
   "Int.add_comm",
   "NonUnitalNonAssocSemiring.mk",
   "NatCast.mk",
   "CommRing",
   "Int.mul_comm",
   "CommRing.mk",
   "Int.instCommRingInt.proof_9",
   "Int.instCommRingInt.proof_1",
   "Int.mul_one",
   "Int.add_zero",
   "AddCommMonoid.mk",
   "Nat.cast",
   "Int.one_mul",
   "Int.instNegInt",
   "Int.instCommRingInt.proof_2",
   "Int.instCommRingInt.proof_4",
   "Nat",
   "Int.sub_eq_add_neg",
   "HPow.hPow",
   "Int.instMulInt",
   "AddSemigroup.mk",
   "Int.mul_add",
   "Int.instCommRingInt.proof_6",
   "One.ofOfNat1",
   "Int.zero_add",
   "AddMonoid.mk",
   "Int.instHPowIntNat",
   "Int.instAddInt",
   "Int.mul_zero",
   "Int.instCommRingInt.proof_5",
   "instHMul",
   "IntCast.mk",
   "instNatCastInt",
   "Int.instCommRingInt.proof_7",
   "NonUnitalSemiring.mk",
   "Int.add_assoc",
   "HMul.hMul",
   "Int.instCommRingInt.proof_8",
   "Int.add_mul",
   "Ring.mk",
   "Int.mul_assoc",
   "Int.instCommRingInt.proof_3",
   "Int",
   "Int.add_left_neg"],
  "name": "Int.instCommRingInt",
  "constType": "CommRing ℤ",
  "constCategory": "Definition"},
 {"references": ["Bool"],
  "name": "Bool.true",
  "constType": "Bool",
  "constCategory": "Other"},
 {"references":
  ["le_of_not_lt",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Preorder.toLT",
   "LinearOrder.toPartialOrder",
   "Not",
   "LE.le",
   "Preorder.toLE",
   "GT.gt"],
  "name": "le_of_not_gt",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b : α}, ¬a > b → a ≤ b",
  "constCategory": "Theorem"},
 {"references":
  ["Eq.ndrec", "Ring.toNeg", "Ring", "Eq.refl", "Neg.neg", "Eq.symm", "Eq"],
  "name": "Mathlib.Tactic.Ring.neg_congr",
  "constType":
  "∀ {R : Type u_1} [inst : Ring R] {a a' b : R}, a = a' → -a' = b → -a = b",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "one_mul",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "Nat.succ",
   "Eq.trans",
   "eq_self",
   "HPow.hPow",
   "Nat.succ_mul",
   "instAddNat",
   "MulOneClass.toOne",
   "instHAdd",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "Monoid.toMulOneClass",
   "pow_add",
   "instHMul",
   "Eq.ndrec",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "instMulNat",
   "Nat.mul",
   "congrArg",
   "Nat.semiring",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.pow_bit0",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a : R} {k : ℕ} {b c : R}, a ^ k = b → b * b = c → a ^ Nat.mul 2 k = c",
  "constCategory": "Theorem"},
 {"references":
  ["Semigroup.toMul",
   "instHMul",
   "HMul.hMul",
   "Semigroup.mul_assoc",
   "Semigroup",
   "Eq"],
  "name": "mul_assoc",
  "constType":
  "∀ {G : Type u_1} [inst : Semigroup G] (a b c : G), a * b * c = a * (b * c)",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "AddSemigroup.toAdd",
   "AddGroupWithOne.toIntCast",
   "instHAdd",
   "Mathlib.Meta.NormNum.isInt_add.match_1",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Int.cast_add",
   "Ring.toNonAssocRing",
   "Int.instAddInt",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "AddMonoid.toAddSemigroup",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Int.cast",
   "Ring.toIntCast",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.add",
   "Eq.symm",
   "Int"],
  "name": "Mathlib.Meta.NormNum.isInt_add",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {f : α → α → α} {a b : α} {a' b' c : ℤ},\n  f = HAdd.hAdd →\n    Mathlib.Meta.NormNum.IsInt a a' →\n      Mathlib.Meta.NormNum.IsInt b b' → Int.add a' b' = c → Mathlib.Meta.NormNum.IsInt (f a b) c",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Real",
   "AddMonoidWithOne.toAddMonoid",
   "Real.instRingReal",
   "AddMonoid"],
  "name": "Real.instAddMonoidReal",
  "constType": "AddMonoid ℝ",
  "constCategory": "Definition"},
 {"references": ["EmptyCollection"],
  "name": "EmptyCollection.emptyCollection",
  "constType": "{α : Type u} → [self : EmptyCollection α] → α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "Monoid.toOne",
   "PartialOrder.toPreorder",
   "MulZeroOneClass.toMulOneClass",
   "Real.instLEReal",
   "AbsoluteValue",
   "HAdd.hAdd",
   "one_div",
   "DivInvMonoid.Pow",
   "Real.orderedRing",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "AbsEisenstein_tsum",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "Complex.instField",
   "AbsEise",
   "NormedDivisionRing.toDivisionRing",
   "Ring.toIntCast",
   "LinearOrderedField.toLinearOrderedSemifield",
   "UpperHalfPlane",
   "HDiv.hDiv",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Summable",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Complex.instOneComplex",
   "AddCommMonoid",
   "GroupWithZero.toInv",
   "HPow.hPow",
   "Complex.abs",
   "Complex.instNontrivialComplex",
   "instHDiv",
   "Prod.snd",
   "DivisionSemiring.toGroupWithZero",
   "eq_of_heq",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Prod.fst",
   "Complex.instAddComplex",
   "map_inv₀",
   "GroupWithZero.toDivInvMonoid",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "DivInvMonoid.toInv",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Complex.im",
   "MonoidWithZero.toMulZeroOneClass",
   "instHMul",
   "of_eq_true",
   "HEq.refl",
   "Real.instIsDomainRealSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Int.cast",
   "LT.lt",
   "eise",
   "Field.toDiv",
   "map_zpow₀",
   "congrArg",
   "Int",
   "NormedField.toNormedDivisionRing",
   "Int.instLEInt",
   "Inv.inv",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "HEq",
   "instOfNatInt",
   "Subtype.val",
   "Real",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "True",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Eisenstein_tsum",
   "instHPow",
   "TopologicalSpace",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "DivInvMonoid.toDiv",
   "EisensteinSeries.real_eise_is_summable",
   "id",
   "eq_self",
   "funext",
   "Real.instLTReal",
   "MonoidHomClass.toMulHomClass",
   "instHAdd",
   "Field.toSemifield",
   "Real.pseudoMetricSpace",
   "MulHomClass.toFunLike",
   "Complex.instRingComplex",
   "tsum",
   "One.toOfNat1",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "LE.le",
   "Real.instZeroReal",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "abs_tsum'",
   "letFun",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Semifield.toDivisionSemiring",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Prod",
   "Eq.casesOn",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Real.instAddCommMonoidReal",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Complex.instMulComplex",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.eis_bound_by_real_eis",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane), 3 ≤ k → Complex.abs (Eisenstein_tsum k z) ≤ AbsEisenstein_tsum k z",
  "constCategory": "Theorem"},
 {"references": ["Add", "Distrib"],
  "name": "Distrib.toAdd",
  "constType": "{R : Type u_1} → [self : Distrib R] → Add R",
  "constCategory": "Definition"},
 {"references":
  ["DivisionRing",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHDiv",
   "Ring.toAddGroupWithOne",
   "DivisionRing.toRing",
   "DivisionRing.toRatCast",
   "Rat.divInt",
   "Eq",
   "CharZero",
   "Int.cast",
   "Ring.toIntCast",
   "Rat.cast",
   "HDiv.hDiv",
   "Rat.cast_mk",
   "Eq.symm",
   "Int",
   "DivisionRing.toDiv"],
  "name": "Mathlib.Data.Rat.Cast.CharZero._auxLemma.11",
  "constType":
  "∀ {α : Type u_3} [inst : DivisionRing α] [inst_1 : CharZero α] (a b : ℤ), ↑a / ↑b = ↑(Rat.divInt a b)",
  "constCategory": "Theorem"},
 {"references":
  ["PartialEquiv.trans.proof_1",
   "PartialEquiv.trans'",
   "PartialEquiv.source",
   "PartialEquiv.restr",
   "PartialEquiv.target",
   "PartialEquiv.symm",
   "PartialEquiv"],
  "name": "PartialEquiv.trans",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → {γ : Type u_3} → PartialEquiv α β → PartialEquiv β γ → PartialEquiv α γ",
  "constCategory": "Definition"},
 {"references":
  ["EStateM",
   "EStateM.tryCatch",
   "EStateM.Backtrackable",
   "MonadExceptOf",
   "EStateM.throw",
   "MonadExceptOf.mk"],
  "name": "EStateM.instMonadExceptOfEStateM",
  "constType":
  "{ε σ δ : Type u} → [inst : EStateM.Backtrackable δ σ] → MonadExceptOf ε (EStateM ε σ)",
  "constCategory": "Definition"},
 {"references":
  ["DivisionRing",
   "DivisionRing.toRing",
   "TopologicalRing",
   "TopologicalSpace",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "TopologicalDivisionRing",
   "Ring.toNonAssocRing"],
  "name": "TopologicalDivisionRing.toTopologicalRing",
  "constType":
  "∀ {K : Type u_1} [inst : DivisionRing K] [inst_1 : TopologicalSpace K] [self : TopologicalDivisionRing K],\n  TopologicalRing K",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "CommRing.toRing",
   "Ring.toAddCommGroup",
   "AddCommGroup",
   "Int",
   "Int.instCommRingInt"],
  "name": "Int.instAddCommGroupInt",
  "constType": "AddCommGroup ℤ",
  "constCategory": "Definition"},
 {"references": ["OrderedSemiring", "OrderedCommSemiring"],
  "name": "OrderedCommSemiring.toOrderedSemiring",
  "constType":
  "{α : Type u} → [self : OrderedCommSemiring α] → OrderedSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "PseudoMetricSpace.toDist",
   "Real",
   "PseudoMetricSpace.dist_self",
   "PseudoMetricSpace",
   "Dist.dist",
   "Eq"],
  "name": "dist_self",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] (x : α), dist x x = 0",
  "constCategory": "Theorem"},
 {"references": ["StrictOrderedSemiring", "PartialOrder"],
  "name": "StrictOrderedSemiring.toPartialOrder",
  "constType":
  "{α : Type u} → [self : StrictOrderedSemiring α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "DivInvMonoid.Pow",
   "Mathlib.Tactic.Ring.pow_zero",
   "AbsoluteValue.mulHomClass",
   "Semiring.toNatCast",
   "Complex.abs_ofReal",
   "IsROrC.charZero_isROrC",
   "SemilatticeSup.toSup",
   "AbsoluteValue.zeroHomClass",
   "NormedDivisionRing.toDivisionRing",
   "Mathlib.Algebra.GroupPower.Ring._auxLemma.4",
   "map_mul",
   "LinearOrderedField.toLinearOrderedSemifield",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "instHDiv",
   "Complex.instZeroComplex",
   "Complex.instNontrivialComplex",
   "Prod.snd",
   "instDistribLattice",
   "UpperHalfPlane.coe",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "SubadditiveHomClass.toFunLike",
   "False.elim",
   "Nat.noConfusion",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "MonoidWithZero.toZero",
   "congrFun",
   "CommMonoidWithZero.toZero",
   "HEq",
   "instOfNatInt",
   "Eq.refl",
   "EisensteinSeries.rfunct_mul_n_pos",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "map_zero",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "OrderedRing.toOrderedSemiring",
   "Lattice.toSemilatticeSup",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.instCommSemiringComplex",
   "Nat.linearOrderedCommMonoidWithZero",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Real.instLinearOrderedRingReal",
   "Mathlib.Tactic.Ring.mul_pow",
   "MonoidHomClass.toMulHomClass",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "Monoid.toMulOneClass",
   "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.10",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Logic.Basic._auxLemma.43",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "Mathlib.Tactic.Ring.one_mul",
   "Semifield.toDivisionSemiring",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "Int.cast_pow",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "Mathlib.Data.Int.CharZero._auxLemma.2",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "Rat.cast",
   "not_false_eq_true",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Prod.fst",
   "Real.orderedSemiring",
   "MulZeroOneClass.toMulZeroClass",
   "Rat.divInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "HEq.refl",
   "Int.cast",
   "Eq.mp",
   "NormedField.toNormedDivisionRing",
   "StrictOrderedRing.toRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedRing.toLinearOrder",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "eq_false'",
   "AddMonoid.toZero",
   "Complex.abs_natCast",
   "instOfNatNat",
   "Mathlib.Data.Complex.Basic._auxLemma.11",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "Mathlib.Tactic.Ring.pow_atom",
   "id",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "LinearOrderedCommMonoid.toOrderedCommMonoid",
   "False",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "Ring.toSemiring",
   "StrictOrderedSemiring.toSemiring",
   "pow_linear_ne_zero'",
   "Field.isDomain",
   "div_pow",
   "StrictOrderedSemiring.toPartialOrder",
   "zpow_coe_nat",
   "OrderedCommSemiring.toOrderedSemiring",
   "Mathlib.Algebra.GroupWithZero.Units.Lemmas._auxLemma.2",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Eq.casesOn",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Mathlib.Data.Rat.Cast.CharZero._auxLemma.11",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.2",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "Mathlib.Tactic.Ring.one_pow",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "mul_div_assoc'",
   "Semifield.toCommGroupWithZero",
   "DivisionRing.toRatCast",
   "MulZeroClass.toMul",
   "AddGroupWithOne.toAddGroup",
   "Nat.cast_zero",
   "Real.orderedRing",
   "Complex.Complex.addGroupWithOne",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "IsDomain.to_noZeroDivisors",
   "Complex.instField",
   "LinearOrderedCommMonoidWithZero.toZero",
   "HDiv.hDiv",
   "Mathlib.Tactic.Ring.pow_add",
   "HPow.hPow",
   "Complex.abs",
   "AbsoluteValue.pos",
   "eq_of_heq",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "CommMagma.toMul",
   "Real.normedCommRing",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Modformsported.ForMathlib.EisensteinSeries.summable._auxLemma.2",
   "MonoidWithZero.toMulZeroOneClass",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Nat.cast_pow",
   "OrderedSemiring.toPosMulMono",
   "Int",
   "Inv.inv",
   "Exists",
   "LinearOrderedSemifield.toInv",
   "Real",
   "Semiring.toMonoidWithZero",
   "True",
   "Abs.abs",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "map_pow",
   "EisensteinSeries.auxlem2",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "Ring.toAddGroupWithOne",
   "Mathlib.Data.Rat.Cast.Defs._auxLemma.1",
   "Complex.instRingComplex",
   "SubNegZeroMonoid.toNegZeroClass",
   "DivInvMonoid.toMonoid",
   "AbsoluteValue.nonneg",
   "Real.instPreorderReal",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Prod",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Real.instLEReal",
   "Real.instMulReal",
   "Exists.casesOn",
   "implies_congr",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "Ring.toNeg",
   "DivisionCommMonoid.toDivisionMonoid",
   "OrderedCommMonoid.toPartialOrder",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.12",
   "Ne",
   "abs_pow",
   "DivisionSemiring.toGroupWithZero",
   "Nat.rawCast",
   "Complex.charZero",
   "DivisionSemiring.toDiv",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instHPowIntNat",
   "DistribLattice.toLattice",
   "instHMul",
   "mul_le_mul_of_nonneg_left",
   "Real.instIsDomainRealSemiring",
   "Not",
   "congrArg",
   "Int.instLEInt",
   "Real.instLinearOrderedFieldReal",
   "DivisionRing.toRing",
   "CanLift.prf",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Real.instNegReal",
   "zpow_ofNat",
   "Zero.toOfNat0",
   "mul_comm",
   "Int.instRingInt",
   "instLENat",
   "instHPow",
   "Nat.monoid",
   "LE",
   "Eq.symm",
   "DivisionRing.toDiv",
   "add_div'",
   "Real.instMonoidReal",
   "instHAdd",
   "Mathlib.Tactic.Ring.single_pow",
   "DivisionSemiring.toSemiring",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "inv_le_inv",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "LinearOrderedCommMonoidWithZero.toLinearOrderedCommMonoid",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.Eise_on_square_is_bounded_Case1",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane) (n : ℕ) (x : ℤ × ℤ),\n  1 ≤ n →\n    0 ≤ k →\n      Complex.abs ↑x.1 = ↑n →\n        (Complex.abs ((↑x.1 * ↑z + ↑x.2) ^ k))⁻¹ ≤ (Complex.abs (↑(EisensteinSeries.rfunct z) ^ k * ↑n ^ k))⁻¹",
  "constCategory": "Theorem"},
 {"references": ["Dist", "PseudoMetricSpace"],
  "name": "PseudoMetricSpace.toDist",
  "constType": "{α : Type u} → [self : PseudoMetricSpace α] → Dist α",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "Complex.ofReal'",
   "Complex.instNormedFieldComplex",
   "Mathlib.Analysis.SpecialFunctions.Pow.Real._auxLemma.2",
   "Real",
   "Complex.instRingComplex",
   "DivInvMonoid.Pow",
   "Real.intCast",
   "True",
   "Eq",
   "Complex.re",
   "Real.instDivisionRingReal",
   "Complex.cpow_int_cast",
   "of_eq_true",
   "Complex.instPowComplex",
   "NormedDivisionRing.toDivisionRing",
   "instHPow",
   "Int.cast",
   "Real.instPowReal",
   "Ring.toIntCast",
   "Complex",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "Int",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "congrFun"],
  "name": "Real.rpow_int_cast",
  "constType": "∀ (x : ℝ) (n : ℤ), x ^ ↑n = x ^ n",
  "constCategory": "Theorem"},
 {"references": ["PUnit"],
  "name": "Unit",
  "constType": "Type",
  "constCategory": "Definition"},
 {"references": ["Nat.add", "Add", "Nat", "Add.mk"],
  "name": "instAddNat",
  "constType": "Add ℕ",
  "constCategory": "Definition"},
 {"references": ["eq_true", "rfl", "True", "Eq"],
  "name": "eq_self",
  "constType": "∀ {α : Sort u_1} (a : α), (a = a) = True",
  "constCategory": "Theorem"},
 {"references":
  ["instHSub",
   "OfNat.ofNat",
   "sub_self",
   "HSub.hSub",
   "eq_of_sub_eq_zero",
   "Eq.refl",
   "AddGroup.toSubtractionMonoid",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "Iff.mpr",
   "Eq",
   "Zero.toOfNat0",
   "Iff.intro",
   "SubNegMonoid.toSub",
   "Eq.mpr",
   "Eq.ndrec",
   "AddGroup",
   "NegZeroClass.toZero",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id"],
  "name": "sub_eq_zero_of_eq",
  "constType":
  "∀ {G : Type u_3} [inst : AddGroup G] {a b : G}, a = b → a - b = 0",
  "constCategory": "Theorem"},
 {"references":
  ["AbsEisenstein_tsum",
   "AbsEise",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "Real.pseudoMetricSpace",
   "Eq.refl",
   "Prod",
   "tsum",
   "UpperHalfPlane",
   "UniformSpace.toTopologicalSpace",
   "Real.instAddCommMonoidReal",
   "Int",
   "Eq"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty.0.AbsEisenstein_tsum._eq_1",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane), AbsEisenstein_tsum k z = ∑' (x : ℤ × ℤ), AbsEise k z x",
  "constCategory": "Theorem"},
 {"references":
  ["Filter.principal",
   "nhds",
   "Inf.inf",
   "Set",
   "Filter.instInfFilter",
   "TopologicalSpace",
   "Filter"],
  "name": "nhdsWithin",
  "constType":
  "{α : Type u} → [inst : TopologicalSpace α] → α → Set α → Filter α",
  "constCategory": "Definition"},
 {"references":
  ["CommMonoidWithZero.toZero",
   "LinearOrderedSemifield.toSemifield",
   "OfNat.ofNat",
   "LinearOrderedSemifield",
   "PartialOrder.toPreorder",
   "LinearOrderedSemifield.toInv",
   "Semifield.toCommGroupWithZero",
   "CommGroupWithZero.toCommMonoidWithZero",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Zero.toOfNat0",
   "inv_nonneg",
   "StrictOrderedSemiring.toPartialOrder",
   "propext",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Inv.inv"],
  "name": "Mathlib.Algebra.Order.Field.Basic._auxLemma.5",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a : α}, (0 ≤ a⁻¹) = (0 ≤ a)",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalNonAssocRing",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "TopologicalSemiring",
   "TopologicalRing",
   "TopologicalSpace"],
  "name": "TopologicalRing.toTopologicalSemiring",
  "constType":
  "∀ {α : Type u_1} [inst : TopologicalSpace α] [inst_1 : NonUnitalNonAssocRing α] [self : TopologicalRing α],\n  TopologicalSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "funext",
   "OfNat.ofNat",
   "DivisionSemiring.toGroupWithZero",
   "inv_mul_cancel_left₀",
   "DivisionSemiring",
   "TopologicalSemiring",
   "Semiring.toMonoidWithZero",
   "Summable.mul_left",
   "NonUnitalNonAssocSemiring.toMul",
   "GroupWithZero.toMonoidWithZero",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "Zero.toOfNat0",
   "Iff.intro",
   "MonoidWithZero.toMulZeroOneClass",
   "DivisionSemiring.toSemiring",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Iff",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Eq.mp",
   "TopologicalSpace",
   "HMul.hMul",
   "DivisionSemiring.toInv",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "MonoidWithZero.toZero",
   "congrArg",
   "Summable",
   "GroupWithZero.toInv",
   "Inv.inv"],
  "name": "summable_mul_left_iff",
  "constType":
  "∀ {ι : Type u_1} {α : Type u_4} [inst : DivisionSemiring α] [inst_1 : TopologicalSpace α]\n  [inst_2 : TopologicalSemiring α] {f : ι → α} {a : α}, a ≠ 0 → ((Summable fun i => a * f i) ↔ Summable f)",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "OrderedAddCommMonoid",
   "PartialOrder.toPreorder",
   "Multiset.sum_map_le_sum_map",
   "Finset.sum",
   "Finset",
   "Finset.val",
   "Finset.instMembershipFinset",
   "LE.le",
   "OrderedAddCommMonoid.toPartialOrder",
   "Preorder.toLE",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "Finset.sum_le_sum",
  "constType":
  "∀ {ι : Type u_1} {N : Type u_5} [inst : OrderedAddCommMonoid N] {f g : ι → N} {s : Finset ι},\n  (∀ i ∈ s, f i ≤ g i) → (Finset.sum s fun i => f i) ≤ Finset.sum s fun i => g i",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.mk",
   "Int.cast",
   "Real.definition._@.Mathlib.Data.Real.Basic._hyg.1004",
   "Real",
   "Real.definition._@.Mathlib.Data.Real.Basic._hyg.1157",
   "Real.definition._@.Mathlib.Data.Real.Basic._hyg.827",
   "Complex.instRingComplex",
   "Complex",
   "Int",
   "IntCast"],
  "name": "EisensteinSeries.trans._cstage1",
  "constType": "ℤ → ℤ → ℂ → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "OfNat.ofNat",
   "Ne.isUnit",
   "instHDiv",
   "GroupWithZero.toDivisionMonoid",
   "GroupWithZero.toMonoidWithZero",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "Eq",
   "GroupWithZero.toDiv",
   "Zero.toOfNat0",
   "MonoidWithZero.toMulZeroOneClass",
   "instHMul",
   "GroupWithZero",
   "HMul.hMul",
   "IsUnit.mul_div_cancel",
   "HDiv.hDiv",
   "MonoidWithZero.toZero"],
  "name": "mul_div_cancel",
  "constType":
  "∀ {G₀ : Type u_3} [inst : GroupWithZero G₀] {b : G₀} (a : G₀), b ≠ 0 → a * b / b = a",
  "constCategory": "Theorem"},
 {"references": ["SMul", "Group", "AddMonoid"],
  "name": "SlashAction",
  "constType":
  "Type u_1 →\n  (G : Type u_2) →\n    (α : Type u_3) →\n      (γ : Type u_4) → [inst : Group G] → [inst : AddMonoid α] → [inst : SMul γ α] → Type (max (max u_1 u_2) u_3)",
  "constCategory": "Other"},
 {"references":
  ["Neg.toHasAbs",
   "NatCast",
   "DivisionRing.toRing",
   "Real",
   "Rat",
   "CauSeq.Completion.instNatCastCauchy",
   "Rat.instLinearOrderedRingRat",
   "Real.ofCauchy",
   "NatCast.mk",
   "Abs.abs",
   "Rat.instSupRat",
   "Nat.cast",
   "IsAbsoluteValue.abs_isAbsoluteValue",
   "Rat.divisionRing",
   "Rat.instNegRat",
   "CauSeq.Completion.Cauchy",
   "Nat",
   "Rat.instLinearOrderedFieldRat"],
  "name": "Real.natCast",
  "constType": "NatCast ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "NormedAlgebra.toAlgebra",
   "OfNat.ofNat",
   "instHSMul",
   "HAdd.hAdd",
   "ModularForm.slash_action_eq'_iff",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "UpperHalfPlane.SLAction",
   "SetLike.instMembership",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "SlashInvariantFormClass",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "NormedDivisionRing.toDivisionRing",
   "SlashInvariantForm.slash_action_eqn",
   "Subgroup.toSubmonoid",
   "Ring.toIntCast",
   "HSMul.hSMul",
   "Subgroup",
   "UpperHalfPlane",
   "Nat",
   "Algebra.toSMul",
   "DivisionRing.toDivInvMonoid",
   "Int.instCommRingInt",
   "Subtype",
   "HPow.hPow",
   "Pi.instSMul",
   "Matrix.semiring",
   "UpperHalfPlane.coe",
   "Fin.fintype",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "Pi.addMonoid",
   "Set.instMembershipSet",
   "ModularForm.subgroupAction",
   "instHMul",
   "Subgroup.toGroup",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "propext",
   "Int.cast",
   "Fin.instOfNatFin",
   "Submonoid.smul",
   "Int",
   "NormedField.toNormedDivisionRing",
   "Fin",
   "NormedAlgebra.id",
   "SetLike.coe",
   "Subtype.val",
   "SlashAction.map",
   "Real",
   "Set",
   "SlashInvariantFormClass.toFunLike",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "algebraInt",
   "outParam",
   "Complex.instSemiringComplex",
   "instHPow",
   "Matrix",
   "instOfNatNat",
   "Eq.symm",
   "id",
   "Membership.mem",
   "NeZero.succ",
   "Complex.instCommSemiringComplex",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Complex.instRingComplex",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "NormedCommRing.toSeminormedCommRing",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup.coeToGL",
   "Eq.ndrec",
   "Units.val",
   "HMul.hMul",
   "Complex",
   "Group.toDivInvMonoid",
   "Complex.instMulComplex",
   "Subgroup.instSetLikeSubgroup"],
  "name": "SlashInvariantForm.slash_action_eqn'",
  "constType":
  "∀ {F : Type u_1} (k : ℤ) (Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) [inst : SlashInvariantFormClass F Γ k]\n  (f : F) (γ : ↥Γ) (z : UpperHalfPlane), f (γ • z) = (↑(↑↑↑γ 1 0) * ↑z + ↑(↑↑↑γ 1 1)) ^ k * f z",
  "constCategory": "Theorem"},
 {"references":
  ["Filter.principal",
   "CompleteLattice.toConditionallyCompleteLattice",
   "iInf",
   "Filter",
   "Set.Ici",
   "Preorder",
   "ConditionallyCompleteLattice.toInfSet",
   "Filter.instCompleteLatticeFilter"],
  "name": "Filter.atTop",
  "constType": "{α : Type u_3} → [inst : Preorder α] → Filter α",
  "constCategory": "Definition"},
 {"references": ["Ring", "CommRing"],
  "name": "CommRing.toRing",
  "constType": "{α : Type u} → [self : CommRing α] → Ring α",
  "constCategory": "Definition"},
 {"references": ["Int", "IntCast.intCast", "IntCast"],
  "name": "Int.cast",
  "constType": "{R : Type u} → [inst : IntCast R] → ℤ → R",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Nat.cast_zero",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Mathlib.Tactic.Ring.cast_zero.match_1",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat",
   "of_eq_true",
   "CommSemiring",
   "AddMonoid.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.cast_zero",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a : R}, Mathlib.Meta.NormNum.IsNat a 0 → a = 0",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instOfNatInt",
   "AddGroupWithOne.toIntCast",
   "AddGroup.toSubtractionMonoid",
   "SubNegZeroMonoid.toNegZeroClass",
   "Nat.cast_zero",
   "AddGroupWithOne.toAddGroup",
   "Eq",
   "AddGroupWithOne.intCast_ofNat",
   "Zero.toOfNat0",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "instNatCastInt",
   "Int.cast",
   "AddGroupWithOne",
   "instOfNatNat",
   "Nat",
   "NegZeroClass.toZero",
   "Eq.trans",
   "Int",
   "IntCast.intCast",
   "SubtractionMonoid.toSubNegZeroMonoid"],
  "name": "Int.cast_zero",
  "constType": "∀ {R : Type u} [inst : AddGroupWithOne R], ↑0 = 0",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalNonAssocSemiring",
   "NonUnitalNonAssocSemiring.right_distrib",
   "AddMonoid.toAddSemigroup",
   "AddSemigroup.toAdd",
   "AddCommMonoid.toAddMonoid",
   "Distrib.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "Distrib",
   "NonUnitalNonAssocSemiring.left_distrib"],
  "name": "NonUnitalNonAssocSemiring.toDistrib",
  "constType":
  "{α : Type u} → [self : NonUnitalNonAssocSemiring α] → Distrib α",
  "constCategory": "Definition"},
 {"references": ["Int.lt", "LT", "LT.mk", "Int"],
  "name": "Int.instLTInt",
  "constType": "LT ℤ",
  "constCategory": "Definition"},
 {"references": ["Nat.linearOrder", "LinearOrder.toLattice", "Lattice", "Nat"],
  "name": "Nat.instLatticeNat",
  "constType": "Lattice ℕ",
  "constCategory": "Definition"},
 {"references": ["Equiv.refl", "Equiv.toPartialEquiv", "PartialEquiv"],
  "name": "PartialEquiv.refl",
  "constType": "(α : Type u_5) → PartialEquiv α α",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "separated_t3",
   "T25Space.t2Space",
   "PseudoMetricSpace.toUniformSpace",
   "MetricSpace.toPseudoMetricSpace",
   "T2Space",
   "TopologicalSpace",
   "T3Space.t25Space",
   "TopologicalSpace.MetrizableSpace",
   "MetricSpace.to_separated",
   "TopologicalSpace.metrizableSpaceMetric"],
  "name": "TopologicalSpace.t2Space_of_metrizableSpace",
  "constType":
  "∀ {X : Type u_2} [inst : TopologicalSpace X] [inst_1 : TopologicalSpace.MetrizableSpace X], T2Space X",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Nat.rawCast",
   "One.toOfNat1",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "Eq",
   "Semiring.toOne",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "of_eq_true",
   "AddMonoidWithOne.toOne",
   "CommSemiring",
   "instOfNatNat",
   "Nat",
   "congrArg",
   "Eq.trans",
   "Nat.cast_one",
   "congrFun"],
  "name": "Mathlib.Tactic.RingNF.nat_rawCast_1",
  "constType": "∀ {R : Type u_1} [inst : CommSemiring R], Nat.rawCast 1 = 1",
  "constCategory": "Theorem"},
 {"references": ["Preorder.le_trans", "Preorder", "LE.le", "Preorder.toLE"],
  "name": "le_trans",
  "constType":
  "∀ {α : Type u} [inst : Preorder α] {a b c : α}, a ≤ b → b ≤ c → a ≤ c",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "AddZeroClass.toAdd",
   "Left.add_nonneg",
   "AddZeroClass.toZero",
   "OfNat.ofNat",
   "instHAdd",
   "HAdd.hAdd",
   "CovariantClass",
   "Preorder",
   "LE.le",
   "AddZeroClass",
   "Preorder.toLE"],
  "name": "add_nonneg",
  "constType":
  "∀ {α : Type u_1} [inst : AddZeroClass α] [inst_1 : Preorder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] {a b : α}, 0 ≤ a → 0 ≤ b → 0 ≤ a + b",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "MulOneClass.toMul",
   "DivisionRing",
   "NonUnitalNonAssocRing.toMul",
   "instHDiv",
   "DivisionRing.toRing",
   "div_eq_mul_inv",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "True",
   "DivisionRing.toInv",
   "Ring.toNonAssocRing",
   "DivInvMonoid.toInv",
   "Eq",
   "instHMul",
   "Eq.ndrec",
   "of_eq_true",
   "HMul.hMul",
   "HDiv.hDiv",
   "congrArg",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "DivisionRing.toDiv",
   "congrFun",
   "Inv.inv",
   "DivInvMonoid.toDiv"],
  "name": "Mathlib.Tactic.Ring.div_pf",
  "constType":
  "∀ {R : Type u_1} [inst : DivisionRing R] {a b c d : R}, b⁻¹ = c → a * c = d → a / b = d",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Inv",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["Sup", "_private.Mathlib.Data.Real.Basic.0.Real.sup", "Real", "Sup.mk"],
  "name": "Real.instSupReal",
  "constType": "Sup ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_one",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "Monoid.toOne",
   "instOfNatInt",
   "AddGroupWithOne.toIntCast",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Ring.toNonAssocRing",
   "Eq",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Ring.toIntCast",
   "Ring",
   "Monoid.toNatPow",
   "Int.cast_mul",
   "instOfNatNat",
   "Nat",
   "Int.instMonoidInt",
   "Nat.succ",
   "id",
   "HPow.hPow",
   "Int.instMulInt",
   "NonUnitalNonAssocRing.toMul",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "instAddNat",
   "instHAdd",
   "One.toOfNat1",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toSemiring",
   "Monoid.toMulOneClass",
   "pow_zero",
   "Int.instHPowIntNat",
   "instHMul",
   "NonAssocRing.toIntCast",
   "Nat.rec",
   "Nat.zero",
   "Eq.ndrec",
   "AddMonoidWithOne.toOne",
   "Int.cast",
   "HMul.hMul",
   "pow_succ",
   "Int"],
  "name": "Int.cast_pow",
  "constType":
  "∀ {R : Type u₁} [inst : Ring R] (n : ℤ) (m : ℕ), ↑(n ^ m) = ↑n ^ m",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "AddGroupWithOne.toIntCast",
   "Nat.rawCast",
   "Int.rawCast",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "True",
   "Eq",
   "Ring.toNeg",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "of_eq_true",
   "Int.cast_negOfNat",
   "Int.cast",
   "Ring",
   "Nat",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.RingNF.int_rawCast_neg",
  "constType":
  "∀ {n : ℕ} {R : Type u_1} [inst : Ring R], Int.rawCast (Int.negOfNat n) = -Nat.rawCast n",
  "constCategory": "Theorem"},
 {"references":
  ["Array",
   "Array.empty",
   "Lean.SyntaxNodeKind",
   "Lean.Syntax.setKind.match_1",
   "Lean.SourceInfo",
   "Lean.Syntax"],
  "name": "Lean.Syntax.getArgs",
  "constType": "Lean.Syntax → Array Lean.Syntax",
  "constCategory": "Definition"},
 {"references":
  ["TopologicalSpace.Opens",
   "SetLike",
   "SetLike.mk",
   "TopologicalSpace.Opens.carrier",
   "TopologicalSpace",
   "TopologicalSpace.Opens.instSetLikeOpens.proof_1"],
  "name": "TopologicalSpace.Opens.instSetLikeOpens",
  "constType":
  "{α : Type u_2} → [inst : TopologicalSpace α] → SetLike (TopologicalSpace.Opens α) α",
  "constCategory": "Definition"},
 {"references":
  ["SubNegMonoid.toSub",
   "Function.swap",
   "OrderedSub",
   "AddGroup",
   "sub_le_iff_le_add",
   "AddMonoid.toAddSemigroup",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HAdd.hAdd",
   "OrderedSub.mk",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "LE",
   "LE.le",
   "AddGroup.toSubNegMonoid"],
  "name": "AddGroup.toHasOrderedSub",
  "constType":
  "∀ {α : Type u_1} [inst : AddGroup α] [inst_1 : LE α]\n  [inst_2 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1], OrderedSub α",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "Eq"],
  "name": "Eq.ndrec",
  "constType":
  "{α : Sort u2} → {a : α} → {motive : α → Sort u1} → motive a → {b : α} → a = b → motive b",
  "constCategory": "Definition"},
 {"references":
  ["Nat.add_assoc",
   "Semiring.mk",
   "Nat.add_comm",
   "Nat.pow_succ'",
   "Nat.pow_zero",
   "NonUnitalNonAssocSemiring.mk",
   "NatCast.mk",
   "Nat.mul_zero",
   "Nat.right_distrib",
   "Nat.add",
   "AddCommMonoid.mk",
   "instHPow",
   "CommSemiring",
   "instNatPowNat",
   "Nat.mul_one",
   "Nat",
   "Nat.add_zero",
   "Nat.left_distrib",
   "Nat.succ",
   "Nat.commSemiring.proof_3",
   "Add.mk",
   "HPow.hPow",
   "Nat.commSemiring.proof_2",
   "AddSemigroup.mk",
   "CommSemiring.mk",
   "One.mk",
   "Nat.commSemiring.proof_1",
   "instPowNat",
   "AddMonoid.mk",
   "Nat.mul_comm",
   "instHMul",
   "Nat.zero_add",
   "Nat.mul_assoc",
   "Nat.zero",
   "Nat.one_mul",
   "NonUnitalSemiring.mk",
   "Nat.zero_mul",
   "HMul.hMul",
   "Zero.mk",
   "instMulNat",
   "Nat.mul",
   "Mul.mk"],
  "name": "Nat.commSemiring",
  "constType": "CommSemiring ℕ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedAddCommGroup",
   "inferInstance",
   "Real.instLinearOrderedRingReal",
   "Real",
   "LinearOrderedRing.toLinearOrderedAddCommGroup"],
  "name": "Real.instLinearOrderedAddCommGroupReal",
  "constType": "LinearOrderedAddCommGroup ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "instOfNatInt",
   "HAdd.hAdd",
   "Real",
   "Real.instLEReal",
   "AbsoluteValue",
   "DivInvMonoid.Pow",
   "EisensteinSeries.rfunct",
   "Preorder.toLE",
   "Semiring.toNatCast",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "instLENat",
   "NormedDivisionRing.toDivisionRing",
   "instHPow",
   "EisensteinSeries.Eise_on_square_is_bounded",
   "Ring.toIntCast",
   "Finset",
   "instOfNatNat",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "EisensteinSeries.square",
   "DivisionRing.toDivInvMonoid",
   "Complex.ofReal'",
   "HPow.hPow",
   "Membership.mem",
   "Complex.abs",
   "Prod.snd",
   "instHAdd",
   "UpperHalfPlane.coe",
   "Complex.instRingComplex",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "Complex.instAddComplex",
   "FunLike.coe",
   "Real.orderedSemiring",
   "LE.le",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "instNatCastInt",
   "Int.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Prod",
   "Complex",
   "Complex.instMulComplex",
   "NormedField.toNormedDivisionRing",
   "Int",
   "OrderedSemiring.toPartialOrder",
   "Int.instLEInt",
   "Inv.inv"],
  "name": "EisensteinSeries.Eise_on_square_is_bounded'",
  "constType":
  "∀ (k : ℤ),\n  0 ≤ k →\n    ∀ (z : UpperHalfPlane) (n : ℕ),\n      1 ≤ n →\n        ∀ x ∈ EisensteinSeries.square ↑n,\n          (Complex.abs ((↑x.1 * ↑z + ↑x.2) ^ k))⁻¹ ≤ (Complex.abs (↑(EisensteinSeries.rfunct z) ^ k * ↑n ^ k))⁻¹",
  "constCategory": "Theorem"},
 {"references": ["MulHom", "instHMul", "HMul.hMul", "Mul", "Eq"],
  "name": "MulHom.mk",
  "constType":
  "{M : Type u_9} →\n  {N : Type u_10} →\n    [inst : Mul M] → [inst_1 : Mul N] → (toFun : M → N) → (∀ (x y : M), toFun (x * y) = toFun x * toFun y) → M →ₙ* N",
  "constCategory": "Other"},
 {"references":
  ["eq_self",
   "HPow.hPow",
   "CommSemiring.toSemiring",
   "MulOneClass.toMul",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocSemiring.toMul",
   "Monoid.toMulOneClass",
   "True",
   "Eq",
   "mul_pow",
   "instHMul",
   "pow_mul",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "MonoidWithZero.toMonoid",
   "of_eq_true",
   "instHPow",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "congr",
   "HMul.hMul",
   "Monoid.toNatPow",
   "CommSemiring.toCommMonoid",
   "CommMonoid.toMonoid",
   "Nat",
   "instMulNat",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.mul_pow",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {ea₁ b c₁ : ℕ} {a₂ c₂ xa₁ : R},\n  ea₁ * b = c₁ → a₂ ^ b = c₂ → (xa₁ ^ ea₁ * a₂) ^ b = xa₁ ^ c₁ * c₂",
  "constCategory": "Theorem"},
 {"references":
  ["CommRing.toCommSemiring",
   "inferInstance",
   "Complex.commRing",
   "CommSemiring",
   "Complex"],
  "name": "Complex.instCommSemiringComplex",
  "constType": "CommSemiring ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "PartialOrder.toPreorder",
   "upper_half_plane_isOpen",
   "NormedLatticeAddCommGroup.orderClosedTopology",
   "Set.Nonempty",
   "IsMinOn",
   "Dist.dist",
   "Complex.abs_ofReal",
   "Real.instOneReal",
   "SubNegMonoid.toSub",
   "Real.linearOrder",
   "Nat.cast",
   "Set.Elem",
   "UpperHalfPlane.upperHalfSpace",
   "Std.Classes.Order._auxLemma.3",
   "Set.image",
   "Subtype",
   "instHSub",
   "Complex.instSubComplex",
   "Complex.abs",
   "Complex.instZeroComplex",
   "Mathlib.Algebra.Order.ZeroLEOne._auxLemma.2",
   "eq_of_heq",
   "instDistribLattice",
   "PseudoMetricSpace.toUniformSpace",
   "Real.instRingReal",
   "SubadditiveHomClass.toFunLike",
   "CompleteAtomicBooleanAlgebra.toCompletelyDistribLattice",
   "Complex.im",
   "And",
   "AddMonoidWithOne.toOne",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "And.intro",
   "AbsoluteValue.sub_le",
   "ContinuousOn",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "SetLike.coe",
   "congrFun",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Exists",
   "HEq",
   "Subtype.val",
   "Set",
   "Real",
   "GE.ge",
   "Real.orderedCancelAddCommMonoid",
   "Eq.refl",
   "Exists.intro",
   "IsCancelAdd.toIsRightCancelAdd",
   "TopologicalSpace.Opens.mk",
   "Abs.abs",
   "Subtype.pseudoMetricSpace",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "AddGroup.toAddCancelMonoid",
   "IsCompact.isBounded",
   "UniformSpace.toTopologicalSpace",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "Top.top",
   "Complex.abs_re_le_abs",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "Set.inclusion",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "Real.instLinearOrderedAddCommGroupReal",
   "Set.univ",
   "LE.le",
   "NormedCommRing.toSeminormedCommRing",
   "Set.instHasSubsetSet",
   "Eq.ndrec",
   "Real.instPreorderReal",
   "CompleteLattice.toTop",
   "letFun",
   "instTopologicalSpaceSubtype",
   "Bornology.IsBounded.subset_ball_lt",
   "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
   "IsCompact",
   "Subtype.mk",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "OrderedAddCommGroup.toPartialOrder",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.instLEReal",
   "AbsoluteValue",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.7",
   "Real.instSupReal",
   "Exists.casesOn",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Eq",
   "SeminormedCommRing.toSeminormedRing",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Iff.mp",
   "sub_zero",
   "le_trans",
   "instClosedIicTopology",
   "Metric.ball",
   "Nat",
   "And.casesOn",
   "Eq.trans",
   "Nat.cast_one",
   "Continuous.continuousOn",
   "EisensteinSeries.mem_uhs",
   "CompletelyDistribLattice.toCompleteLattice",
   "setOf",
   "Lattice.toSemilatticeInf",
   "Real.partialOrder",
   "OrderedSemiring.zeroLEOneClass",
   "HasSubset.Subset",
   "Real.orderedSemiring",
   "continuous_inclusion",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DistribLattice.toLattice",
   "SubNegZeroMonoid.toSubNegMonoid",
   "TopologicalSpace.Opens.carrier",
   "HEq.refl",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.orderedAddCommMonoid",
   "of_eq_true",
   "Eq.mp",
   "Real.instAddGroupReal",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.13",
   "Real.normedLatticeAddCommGroup",
   "congrArg",
   "Complex.continuous_im",
   "OrderedAddCommGroup.toAddCommGroup",
   "IsCompact.image_of_continuousOn",
   "TopologicalSpace.Opens",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "SeminormedRing.toPseudoMetricSpace",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "isCompact_iff_isCompact_univ",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Set.range",
   "Complex.abs_I",
   "Preorder.toLT",
   "Ring.toSub",
   "LE",
   "instOfNatNat",
   "Eq.symm",
   "id",
   "Complex.I",
   "Membership.mem",
   "Complex.addCommGroup",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.7",
   "LT.lt.le",
   "instHAdd",
   "HSub.hSub",
   "SemilatticeInf.toPartialOrder",
   "Real.pseudoMetricSpace",
   "Set.Set.completeAtomicBooleanAlgebra",
   "Set.image_univ",
   "Ring.toSemiring",
   "Complex.re",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "PseudoMetricSpace.toDist",
   "Set.range_inclusion",
   "OrderedSemiring.toSemiring",
   "Complex",
   "Eq.casesOn",
   "NegZeroClass.toZero",
   "OrderedSemiring.toPartialOrder",
   "IsCompact.exists_isMinOn"],
  "name": "EisensteinSeries.compact_in_slice'",
  "constType":
  "∀ (S : Set ℂ),\n  Set.Nonempty S →\n    ∀ (hs : S ⊆ ↑{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }),\n      IsCompact S → ∃ A B, 0 < B ∧ Set.inclusion hs '' ⊤ ⊆ EisensteinSeries.upperHalfSpaceSlice A B",
  "constCategory": "Theorem"},
 {"references":
  ["eq_true", "le_refl", "Preorder", "LE.le", "True", "Preorder.toLE", "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.9",
  "constType": "∀ {α : Type u} [inst : Preorder α] (a : α), (a ≤ a) = True",
  "constCategory": "Theorem"},
 {"references":
  ["UpperHalfPlane.im",
   "Complex.im",
   "zero_add",
   "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal",
   "Real",
   "Real.instAddMonoidReal",
   "UpperHalfPlane.coe",
   "AddAction.toVAdd",
   "UpperHalfPlane",
   "HVAdd.hVAdd",
   "AddMonoid.toAddZeroClass",
   "instHVAdd",
   "Eq"],
  "name": "UpperHalfPlane.vadd_im",
  "constType":
  "∀ (x : ℝ) (z : UpperHalfPlane), UpperHalfPlane.im (x +ᵥ z) = UpperHalfPlane.im z",
  "constCategory": "Theorem"},
 {"references": ["Classical.not_not", "propext", "Not", "Eq"],
  "name": "Mathlib.Logic.Basic._auxLemma.10",
  "constType": "∀ {a : Prop}, (¬¬a) = a",
  "constCategory": "Theorem"},
 {"references": ["outParam"],
  "name": "FunLike",
  "constType":
  "Sort u_1 → (α : outParam (Sort u_2)) → outParam (α → Sort u_3) → Sort (max (max (max 1 u_1) u_2) u_3)",
  "constCategory": "Other"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "PartialOrder.toPreorder",
   "Mathlib.Meta.NormNum.IsInt.to_isRat",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Dist.dist",
   "Complex.abs_ofReal",
   "Semiring.toNatCast",
   "Real.instOneReal",
   "Real.linearOrder",
   "IsROrC.charZero_isROrC",
   "SemilatticeSup.toSup",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.10",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "UpperHalfPlane.im_ne_zero",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "Subtype",
   "Complex.instSubComplex",
   "add_comm",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Complex.instZeroComplex",
   "instHDiv",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "instDistribLattice",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.instAddCommSemigroupReal",
   "AddCommMagma.toAdd",
   "SubadditiveHomClass.toFunLike",
   "DivisionRing.toInv",
   "And",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instNatAtLeastTwo",
   "congr",
   "Norm.norm",
   "LinearOrder.toPartialOrder",
   "And.intro",
   "MonoidWithZero.toZero",
   "AbsoluteValue.sub_le",
   "abs_sub_comm",
   "Mathlib.Tactic.Ring.add_overlap_pf",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "sub_nonpos_of_le",
   "Set",
   "GE.ge",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "sub_pos",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.11",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "OrderedRing.toOrderedSemiring",
   "zero_lt_one",
   "Lattice.toSemilatticeSup",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.9",
   "Real.instLTReal",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.4",
   "Mathlib.Tactic.Ring.mul_add",
   "add_lt_of_le_of_neg",
   "Complex.abs_re_le_abs",
   "Field.toSemifield",
   "Mathlib.Tactic.Ring.inv_congr",
   "Neg.neg",
   "FunLike.coe",
   "dist_eq_norm",
   "NormedField.toNormedCommRing",
   "Real.instLinearOrderedAddCommGroupReal",
   "LE.le",
   "Mathlib.Meta.NormNum.isNat_mul",
   "Real.instDivisionRingReal",
   "OrderedRing.toPartialOrder",
   "NormedCommRing.toSeminormedCommRing",
   "Nat.commSemiring",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Mathlib.Meta.NormNum.IsRat.of_raw",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.3",
   "letFun",
   "Mathlib.Tactic.Ring.one_mul",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.8",
   "Semifield.toDivisionSemiring",
   "NegZeroClass.toNeg",
   "AddGroup.toHasOrderedSub",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Mathlib.Tactic.Ring.mul_congr",
   "OrderedAddCommGroup.toPartialOrder",
   "Metric.closedBall",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.isROrC",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.7",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "Semiring.toNonAssocSemiring",
   "Mathlib.Tactic.RingNF.rat_rawCast_pos",
   "add_nonneg",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "le_trans",
   "Eq.trans",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.1",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "Real.field",
   "neg_neg_of_pos",
   "HasSubset.Subset",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "lt_of_not_ge",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Set.instMembershipSet",
   "Mathlib.Tactic.Ring.neg_mul",
   "SubNegZeroMonoid.toSubNegMonoid",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "OrderedCancelAddCommMonoid.toContravariantClassLeft",
   "of_eq_true",
   "Eq.mp",
   "Real.instAddGroupReal",
   "mul_pos",
   "Mathlib.Meta.NormNum.IsRat.to_raw_eq",
   "Mathlib.Tactic.Ring.mul_one",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "Int.ofNat",
   "StrictOrderedRing.toRing",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "Real.natCast",
   "CommRing.toNonUnitalCommRing",
   "SeminormedRing.toPseudoMetricSpace",
   "CancelDenoms.mul_subst",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "CancelDenoms.div_subst",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Linarith.mul_nonpos",
   "AddMonoid.toZero",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "AddCommGroup.toAddGroup",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Subtype.dist_eq",
   "LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid",
   "id",
   "Membership.mem",
   "Complex.addCommGroup",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Algebra.Order.Group.Abs._auxLemma.5",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "NonUnitalNonAssocSemiring.toMul",
   "Ring.toSemiring",
   "StrictOrderedSemiring.toSemiring",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "Complex.re",
   "PseudoMetricSpace.toDist",
   "StrictOrderedSemiring.toPartialOrder",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Bool",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "upper_half_plane_isOpen",
   "Real.instAddMonoidReal",
   "LinearOrderedSemiring.toPosMulReflectLT",
   "Semifield.toCommGroupWithZero",
   "Mathlib.Meta.NormNum.isRat_add",
   "pow_one",
   "Real.orderedRing",
   "Mathlib.Meta.NormNum.isInt_add",
   "Nat.cast_zero",
   "SubNegMonoid.toSub",
   "Nat.cast",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "Real.strictOrderedSemiring",
   "UpperHalfPlane.upperHalfSpace",
   "HDiv.hDiv",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "Complex.abs_im_le_abs",
   "SeminormedAddGroup.toPseudoMetricSpace",
   "Real.instRingReal",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Real.normedCommRing",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.6",
   "Complex.im",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Complex.sub_im",
   "Mathlib.Meta.NormNum.IsRat.den_nz",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Meta.NormNum.isRat_div",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Int",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "Inv.inv",
   "SetLike.coe",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.5",
   "Exists",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Real.orderedCancelAddCommMonoid",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Exists.intro",
   "AddMonoid.toAddZeroClass",
   "SeminormedAddGroup.toAddGroup",
   "TopologicalSpace.Opens.mk",
   "True",
   "Abs.abs",
   "LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid",
   "Real.instAddCommGroupReal",
   "Field.toCommRing",
   "Subtype.pseudoMetricSpace",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Mathlib.Tactic.Ring.inv_single",
   "UniformSpace.toTopologicalSpace",
   "Neg.toHasAbs",
   "Complex.ofReal'",
   "Mathlib.Meta.NormNum.isRat_mul",
   "neg_nonpos_of_nonneg",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "AbsoluteValue.nonneg",
   "Mathlib.Meta.NormNum.isNat_eq_true",
   "sub_neg_of_lt",
   "le_zero_of_zero_ge",
   "Set.instHasSubsetSet",
   "Int.mul",
   "Bool.false",
   "Real.instPreorderReal",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "LinearOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Real.orderedAddCommGroup",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "CancelDenoms.sub_subst",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "Real.instLEReal",
   "Real.instMulReal",
   "Real.instSubReal",
   "Real.commRing",
   "implies_congr",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Eq",
   "OrderedRing.toRing",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "sub_zero",
   "Real.instInvReal",
   "Nat",
   "Real.instLinearOrderedSemiringReal",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Real.partialOrder",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "abs_sub_le",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "DistribLattice.toLattice",
   "instHMul",
   "IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.orderedAddCommMonoid",
   "Not",
   "SeminormedAddCommGroup.toSeminormedAddGroup",
   "congrArg",
   "add_zero",
   "OrderedAddCommGroup.toAddCommGroup",
   "abs_nonneg",
   "TopologicalSpace.Opens",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "DivisionRing.toRing",
   "SeminormedAddGroup.toNorm",
   "StrictOrderedRing.toStrictOrderedSemiring",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Preorder.toLT",
   "instHPow",
   "Ring.toSub",
   "MulZeroClass.toZero",
   "Linarith.mul_neg",
   "Rat.rawCast",
   "Real.strictOrderedRing",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "AddCommMonoid.toAddCommSemigroup",
   "DivisionRing.toDiv",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.2",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Real.semiring",
   "SubNegMonoid.toAddMonoid",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero"],
  "name": "EisensteinSeries.closedBall_in_slice",
  "constType":
  "∀ (z : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }),\n  ∃ A B ε, 0 < ε ∧ 0 < B ∧ Metric.closedBall z ε ⊆ EisensteinSeries.upperHalfSpaceSlice A B ∧ 0 ≤ A ∧ ε < B",
  "constCategory": "Theorem"},
 {"references":
  ["LT.lt", "Decidable", "Nat", "instLTNat", "Nat.succ", "Nat.decLe"],
  "name": "Nat.decLt",
  "constType": "(n m : ℕ) → Decidable (n < m)",
  "constCategory": "Definition"},
 {"references": [],
  "name": "HEq",
  "constType": "{α : Sort u} → α → {β : Sort u} → β → Prop",
  "constCategory": "Other"},
 {"references":
  ["instHSub",
   "AddGroupWithOne.toAddMonoidWithOne",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "AddGroupWithOne.toSub",
   "AddGroupWithOne.toIntCast",
   "Int.cast",
   "HSub.hSub",
   "AddGroupWithOne",
   "Nat",
   "Eq.symm",
   "Int.subNatNat",
   "Eq",
   "Int.cast_subNatNat"],
  "name": "Mathlib.Data.Int.Cast.Basic._auxLemma.5",
  "constType":
  "∀ {R : Type u} [inst : AddGroupWithOne R] (m n : ℕ), ↑m - ↑n = ↑(Int.subNatNat m n)",
  "constCategory": "Theorem"},
 {"references":
  ["AddGroupWithOne.mk",
   "AddCommGroupWithOne.toIntCast",
   "AddCommGroupWithOne.natCast_succ",
   "SubNegMonoid.toNeg",
   "AddCommGroupWithOne.toAddCommGroup",
   "SubNegMonoid.zsmul_neg'",
   "AddCommGroupWithOne",
   "AddCommGroupWithOne.intCast_ofNat",
   "AddCommGroupWithOne.toNatCast",
   "SubNegMonoid.sub_eq_add_neg",
   "AddCommGroupWithOne.toOne",
   "AddGroup.toSubNegMonoid",
   "AddGroup.add_left_neg",
   "SubNegMonoid.zsmul_succ'",
   "SubNegMonoid.toSub",
   "AddCommGroupWithOne.intCast_negSucc",
   "SubNegMonoid.toAddMonoid",
   "SubNegMonoid.zsmul",
   "AddGroupWithOne",
   "AddCommGroup.toAddGroup",
   "AddCommGroupWithOne.natCast_zero",
   "AddMonoidWithOne.mk",
   "SubNegMonoid.zsmul_zero'"],
  "name": "AddCommGroupWithOne.toAddGroupWithOne",
  "constType":
  "{R : Type u} → [self : AddCommGroupWithOne R] → AddGroupWithOne R",
  "constCategory": "Definition"},
 {"references":
  ["UpperHalfPlane.im",
   "Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Subtype.property",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Real",
   "LT.lt",
   "Complex",
   "UpperHalfPlane"],
  "name": "UpperHalfPlane.im_pos",
  "constType": "∀ (z : UpperHalfPlane), 0 < UpperHalfPlane.im z",
  "constCategory": "Theorem"},
 {"references":
  ["PartialEquiv.right_inv'",
   "PartialEquiv.source",
   "PartialEquiv.mk",
   "PartialEquiv.target",
   "PartialEquiv.invFun",
   "PartialEquiv.toFun",
   "PartialEquiv.map_target'",
   "PartialEquiv.left_inv'",
   "PartialEquiv.map_source'",
   "PartialEquiv"],
  "name": "PartialEquiv.symm",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → PartialEquiv α β → PartialEquiv β α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "pow_one",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "HPow.hPow",
   "instHAdd",
   "Nat.rawCast",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "congr",
   "mul_one",
   "add_zero",
   "congrArg",
   "congrFun",
   "Nat.semiring"],
  "name": "Mathlib.Tactic.Ring.atom_pf'",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a a' : R}, a = a' → a = a' ^ Nat.rawCast 1 * Nat.rawCast 1 + 0",
  "constCategory": "Theorem"},
 {"references": ["Lean.Name"],
  "name": "Lean.SyntaxNodeKind",
  "constType": "Type",
  "constCategory": "Definition"},
 {"references": [],
  "name": "PartialOrder",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["Membership.mem",
   "Set.instHasSubsetSet",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "Set",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "HasSubset.Subset",
   "DifferentiableWithinAt.mono",
   "NormedSpace",
   "Set.instMembershipSet"],
  "name": "DifferentiableOn.mono",
  "constType":
  "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\n  {s t : Set E}, DifferentiableOn 𝕜 f t → s ⊆ t → DifferentiableOn 𝕜 f s",
  "constCategory": "Theorem"},
 {"references":
  ["AddCommGroup.add_comm",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalNonAssocCommSemiring.mk",
   "NonUnitalNonAssocCommSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalNonAssocSemiring.mk",
   "AddGroup.toSubNegMonoid",
   "NonUnitalNonAssocRing.left_distrib",
   "NonUnitalNonAssocCommRing.mul_comm",
   "AddCommMonoid.mk",
   "NonUnitalNonAssocRing.zero_mul",
   "SubNegMonoid.toAddMonoid",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.right_distrib",
   "NonUnitalNonAssocCommRing",
   "NonUnitalNonAssocRing.mul_zero",
   "NonUnitalNonAssocRing.toAddCommGroup"],
  "name": "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
  "constType":
  "{α : Type u} → [self : NonUnitalNonAssocCommRing α] → NonUnitalNonAssocCommSemiring α",
  "constCategory": "Definition"},
 {"references":
  ["NatCast", "Nat.AtLeastTwo", "Nat.cast", "OfNat", "OfNat.mk", "Nat"],
  "name": "instOfNat",
  "constType":
  "{R : Type u_1} → {n : ℕ} → [inst : NatCast R] → [inst : Nat.AtLeastTwo n] → OfNat R n",
  "constCategory": "Definition"},
 {"references": ["propext", "GE.ge", "ge_iff_le", "LE", "LE.le", "Eq"],
  "name": "Std.Classes.Order._auxLemma.3",
  "constType": "∀ {α : Type u_1} [inst : LE α] {x y : α}, (x ≥ y) = (y ≤ x)",
  "constCategory": "Theorem"},
 {"references":
  ["RingHom",
   "NonAssocRing",
   "MulZeroOneClass.toMulOneClass",
   "MulOneClass.toOne",
   "Int.castRingHom.proof_2",
   "NonAssocSemiring.toMulZeroOneClass",
   "RingHom.mk",
   "Int.castRingHom.proof_1",
   "Semiring.toNonAssocSemiring",
   "NonAssocRing.toIntCast",
   "Int.cast",
   "Int.instSemiringInt",
   "OneHom.mk",
   "Int.cast_mul",
   "MonoidHom.mk",
   "NonAssocRing.toNonAssocSemiring",
   "Int",
   "Int.castRingHom.proof_3"],
  "name": "Int.castRingHom",
  "constType": "(α : Type u_5) → [inst : NonAssocRing α] → ℤ →+* α",
  "constCategory": "Definition"},
 {"references": ["NatCast", "Semiring"],
  "name": "Semiring.toNatCast",
  "constType": "{α : Type u} → [self : Semiring α] → NatCast α",
  "constCategory": "Definition"},
 {"references":
  ["UpperHalfPlane.IsBoundedAtImInfty",
   "Complex.instNormedFieldComplex",
   "NormedAlgebra.toAlgebra",
   "OfNat.ofNat",
   "Complex.instNormComplex",
   "NontriviallyNormedField.toNormedField",
   "SlashAction.map",
   "SlashInvariantFormClass.toFunLike",
   "instDecidableEqFin",
   "UpperHalfPlane.instChartedSpaceComplexToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexUpperHalfPlaneInstTopologicalSpaceUpperHalfPlane",
   "SeminormedRing.toPseudoMetricSpace",
   "ModularForm",
   "Complex.Complex.addGroupWithOne",
   "Complex.instSemiringComplex",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "SeminormedCommRing.toSeminormedRing",
   "SlashInvariantFormClass.slashInvariantForm",
   "SlashInvariantForm",
   "NormedField.toNormedSpace",
   "UpperHalfPlane.instTopologicalSpaceUpperHalfPlane",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "UniformSpace.toTopologicalSpace",
   "Algebra.toSMul",
   "Int.instCommRingInt",
   "MDifferentiable",
   "Complex.instCommSemiringComplex",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Pi.instSMul",
   "Complex.instDenselyNormedFieldComplex",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "ModularForm.SLAction",
   "AddMonoidWithOne.toAddMonoid",
   "PseudoMetricSpace.toUniformSpace",
   "Fin.fintype",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "chartedSpaceSelf",
   "Pi.addMonoid",
   "NormedCommRing.toSeminormedCommRing",
   "Matrix.SpecialLinearGroup",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Complex",
   "Complex.instNormedAddCommGroupComplex",
   "Int",
   "DenselyNormedField.toNontriviallyNormedField",
   "Fin",
   "modelWithCornersSelf",
   "NormedAlgebra.id"],
  "name": "ModularForm.mk",
  "constType":
  "{Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)} →\n  {k : ℤ} →\n    (toSlashInvariantForm : SlashInvariantForm Γ k) →\n      MDifferentiable (modelWithCornersSelf ℂ ℂ) (modelWithCornersSelf ℂ ℂ) ⇑toSlashInvariantForm →\n        (∀ (A : Matrix.SpecialLinearGroup (Fin 2) ℤ),\n            UpperHalfPlane.IsBoundedAtImInfty (SlashAction.map ℂ k A ⇑toSlashInvariantForm)) →\n          ModularForm Γ k",
  "constCategory": "Other"},
 {"references":
  ["EStateM",
   "Lean.Macro.Context",
   "Monad.toApplicative",
   "Lean.Macro.Context.currMacroScope",
   "Lean.MacroM",
   "Lean.MonadQuotation.mk",
   "Pure.pure",
   "Lean.Macro.withFreshMacroScope",
   "Lean.Macro.instMonadRefMacroM",
   "Lean.MacroScope",
   "EStateM.instMonadEStateM",
   "Lean.Macro.State",
   "Lean.Macro.Context.mainModule",
   "Lean.Macro.Exception",
   "Lean.Name",
   "Lean.MonadQuotation",
   "Applicative.toPure"],
  "name": "Lean.Macro.instMonadQuotationMacroM",
  "constType": "Lean.MonadQuotation Lean.MacroM",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "AddMonoid.toAddZeroClass",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "HPow.hPow",
   "instHAdd",
   "Nat.rawCast",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "pow_zero",
   "NonUnitalNonAssocSemiring.toDistrib",
   "of_eq_true",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "add_zero",
   "congrArg",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.pow_zero",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (a : R), a ^ 0 = Nat.rawCast 1 + 0",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "instHDiv",
   "inv_eq_one_div",
   "Monoid.toOne",
   "DivInvMonoid",
   "One.toOfNat1",
   "HDiv.hDiv",
   "DivInvMonoid.toMonoid",
   "Eq.symm",
   "Eq",
   "DivInvMonoid.toDiv",
   "DivInvMonoid.toInv",
   "Inv.inv"],
  "name": "one_div",
  "constType": "∀ {G : Type u_3} [inst : DivInvMonoid G] (a : G), 1 / a = a⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "LinearOrderedRing.toStrictOrderedRing",
   "PartialOrder.toPreorder",
   "instOfNatInt",
   "HAdd.hAdd",
   "Int.lt_add_one_iff",
   "Int.linearOrderedCommRing",
   "le_of_eq",
   "rfl",
   "Eq",
   "Or.rec",
   "Iff",
   "Iff.mp",
   "Nat.cast",
   "Preorder.toLT",
   "le_trans",
   "instOfNatNat",
   "Int.le.intro",
   "Nat",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Or",
   "Or.inr",
   "instHAdd",
   "EisensteinSeries.Int.le_add_one_iff.match_1",
   "LE.le",
   "Int.instLTInt",
   "Int.instAddInt",
   "Iff.intro",
   "Or.inl",
   "instNatCastInt",
   "LT.lt",
   "Int",
   "Int.instLEInt",
   "eq_or_lt_of_le"],
  "name": "EisensteinSeries.Int.le_add_one_iff",
  "constType": "∀ {m n : ℤ}, m ≤ n + 1 ↔ m ≤ n ∨ m = n + 1",
  "constCategory": "Theorem"},
 {"references":
  ["RingHom.instRingHomClass",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "RingHom",
   "CommSemiring.toSemiring",
   "Semifield.toCommSemiring",
   "IsROrC.toStarRing",
   "DenselyNormedField.toNormedField",
   "IsROrC",
   "NonUnitalRingHomClass.toMulHomClass",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "IsROrC.innerProductSpace.proof_3",
   "NormedField.toField",
   "RingHomClass.toNonUnitalRingHomClass",
   "Semiring.toNonAssocSemiring",
   "starRingEnd",
   "NormedField.toNormedSpace",
   "NonUnitalNonAssocRing.toMul",
   "IsROrC.toDenselyNormedField",
   "Inner.mk",
   "Field.toSemifield",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "NonUnitalNonAssocSemiring.toMul",
   "IsROrC.innerProductSpace.proof_4",
   "instHMul",
   "InnerProductSpace.mk",
   "NormedCommRing.toSeminormedCommRing",
   "IsROrC.innerProductSpace.proof_2",
   "InnerProductSpace",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "IsROrC.innerProductSpace.proof_1",
   "NonUnitalNormedRing.toNormedAddCommGroup"],
  "name": "IsROrC.innerProductSpace",
  "constType": "{𝕜 : Type u_1} → [inst : IsROrC 𝕜] → InnerProductSpace 𝕜 𝕜",
  "constCategory": "Definition"},
 {"references":
  ["FloorRing",
   "Archimedean.floorRing",
   "Real.instLinearOrderedRingReal",
   "Real",
   "Real.instArchimedean"],
  "name": "Real.instFloorRingRealInstLinearOrderedRingReal",
  "constType": "FloorRing ℝ",
  "constCategory": "Definition"},
 {"references": ["outParam", "HMul"],
  "name": "HMul.hMul",
  "constType":
  "{α : Type u} → {β : Type v} → {γ : outParam (Type w)} → [self : HMul α β γ] → α → β → γ",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "Complex.instNormedFieldComplex",
   "NormedAlgebra.toAlgebra",
   "OfNat.ofNat",
   "instHSMul",
   "HAdd.hAdd",
   "ModularForm.slash_action_eq'_iff",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "UpperHalfPlane.SLAction",
   "SetLike.instMembership",
   "Eq",
   "Matrix.SpecialLinearGroup.monoid",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "SeminormedCommRing.toSeminormedRing",
   "MonoidWithZero.toMonoid",
   "NormedDivisionRing.toDivisionRing",
   "Subgroup.toSubmonoid",
   "Ring.toIntCast",
   "HSMul.hSMul",
   "Subgroup",
   "UpperHalfPlane",
   "Nat",
   "Algebra.toSMul",
   "DivisionRing.toDivInvMonoid",
   "Int.instCommRingInt",
   "Subtype",
   "HPow.hPow",
   "Pi.instSMul",
   "Matrix.semiring",
   "UpperHalfPlane.coe",
   "Fin.fintype",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "Set.instMembershipSet",
   "Pi.addMonoid",
   "ModularForm.subgroupAction",
   "instHMul",
   "Subgroup.toGroup",
   "Matrix.SpecialLinearGroup",
   "MulAction.toSMul",
   "propext",
   "Int.cast",
   "Fin.instOfNatFin",
   "Submonoid.smul",
   "Int",
   "NormedField.toNormedDivisionRing",
   "Fin",
   "SetLike.coe",
   "NormedAlgebra.id",
   "Subtype.val",
   "Set",
   "SlashAction.map",
   "Real",
   "Semiring.toMonoidWithZero",
   "algebraInt",
   "Complex.instSemiringComplex",
   "instHPow",
   "Matrix",
   "instOfNatNat",
   "NeZero.succ",
   "Membership.mem",
   "Complex.instCommSemiringComplex",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Complex.instRingComplex",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Matrix.SpecialLinearGroup.coeToGL",
   "CommRing.toCommSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Units.val",
   "HMul.hMul",
   "Complex",
   "Group.toDivInvMonoid",
   "Complex.instMulComplex",
   "Subgroup.instSetLikeSubgroup"],
  "name": "Modformsported.ForMathlib.EisensteinSeries.basic._auxLemma.1",
  "constType":
  "∀ (k : ℤ) (Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) (f : UpperHalfPlane → ℂ) (γ : ↥Γ) (z : UpperHalfPlane),\n  (SlashAction.map ℂ k γ f z = f z) = (f (γ • z) = (↑(↑↑↑γ 1 0) * ↑z + ↑(↑↑↑γ 1 1)) ^ k * f z)",
  "constCategory": "Theorem"},
 {"references":
  ["EisensteinSeries.ein",
   "EisensteinSeries.powfun",
   "Function.comp",
   "Eq.refl",
   "Complex",
   "EisensteinSeries.trans",
   "Int",
   "Eq"],
  "name": "EisensteinSeries.com",
  "constType":
  "∀ (a b k : ℤ), EisensteinSeries.ein a b k = EisensteinSeries.powfun k ∘ EisensteinSeries.trans a b",
  "constCategory": "Theorem"},
 {"references":
  ["Finset.empty_subset",
   "Finset.instEmptyCollectionFinset",
   "EmptyCollection.emptyCollection",
   "PartialOrder.toPreorder",
   "Finset",
   "Bot.mk",
   "Finset.partialOrder",
   "OrderBot",
   "OrderBot.mk",
   "Preorder.toLE"],
  "name": "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
  "constType": "{α : Type u_1} → OrderBot (Finset α)",
  "constCategory": "Definition"},
 {"references": ["Semiring", "DivisionSemiring"],
  "name": "DivisionSemiring.toSemiring",
  "constType": "{α : Type u_4} → [self : DivisionSemiring α] → Semiring α",
  "constCategory": "Definition"},
 {"references":
  ["Zero", "Real", "Zero.mk", "_private.Mathlib.Data.Real.Basic.0.Real.zero"],
  "name": "Real.instZeroReal",
  "constType": "Zero ℝ",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "OfNat.ofNat",
   "Iff.rfl",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Eq.refl",
   "sub_eq_add_neg",
   "AddMonoid.toAddZeroClass",
   "AddGroup.covconv_swap",
   "Eq",
   "Zero.toOfNat0",
   "Function.swap",
   "SubNegMonoid.toSub",
   "AddZeroClass.toZero",
   "zero_add",
   "Eq.mpr",
   "Iff",
   "AddGroup",
   "LE",
   "add_le_add_iff_right",
   "Eq.symm",
   "neg_add_cancel_right",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "instHSub",
   "instHAdd",
   "HSub.hSub",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "Eq.ndrec",
   "propext",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "NegZeroClass.toZero"],
  "name": "sub_nonneg",
  "constType":
  "∀ {α : Type u} [inst : AddGroup α] [inst_1 : LE α]\n  [inst_2 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] {a b : α}, 0 ≤ a - b ↔ b ≤ a",
  "constCategory": "Theorem"},
 {"references":
  ["CommMonoidWithZero.toZero",
   "LinearOrderedSemifield.toSemifield",
   "OfNat.ofNat",
   "LinearOrderedSemifield",
   "PartialOrder.toPreorder",
   "LinearOrderedSemifield.toInv",
   "Semifield.toCommGroupWithZero",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Eq",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Zero.toOfNat0",
   "StrictOrderedSemiring.toPartialOrder",
   "propext",
   "Preorder.toLT",
   "LT.lt",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "inv_pos",
   "Inv.inv"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.2",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a : α}, (0 < a⁻¹) = (0 < a)",
  "constCategory": "Theorem"},
 {"references":
  ["funext", "FunLike", "FunLike.coe", "FunLike.coe_injective'", "Eq"],
  "name": "FunLike.ext",
  "constType":
  "∀ {F : Sort u_1} {α : Sort u_2} {β : α → Sort u_3} [i : FunLike F α β] (f g : F), (∀ (x : α), f x = g x) → f = g",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "instHAdd",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "Neg.neg",
   "Exists.intro",
   "AddMonoid.toAddZeroClass",
   "AddGroup.toSubNegMonoid",
   "LE.le",
   "ExistsAddOfLE",
   "Eq",
   "add_neg_cancel_left",
   "AddGroup",
   "SubNegMonoid.toAddMonoid",
   "LE",
   "ExistsAddOfLE.mk",
   "Eq.symm"],
  "name": "AddGroup.existsAddOfLE",
  "constType":
  "∀ (α : Type u) [inst : AddGroup α] [inst_1 : LE α], ExistsAddOfLE α",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "Monoid",
   "Real.instMonoidWithZeroReal",
   "MonoidWithZero.toMonoid",
   "Real"],
  "name": "Real.instMonoidReal",
  "constType": "Monoid ℝ",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "OfNat.ofNat",
   "Trans.trans",
   "instHAdd",
   "HAdd.hAdd",
   "Preorder",
   "add_lt_add_right",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "zero_add",
   "instTransEq_1",
   "Function.swap",
   "AddZeroClass.toZero",
   "Preorder.toLT",
   "LT.lt",
   "CovariantClass",
   "instTransLtToLTLeToLE",
   "AddZeroClass"],
  "name": "add_lt_of_neg_of_le",
  "constType":
  "∀ {α : Type u_1} [inst : AddZeroClass α] [inst_1 : Preorder α]\n  [inst_2 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x < x_1] {a b c : α},\n  a < 0 → b ≤ c → a + b < c",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "Set",
   "PseudoMetricSpace.toUniformSpace",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "UniformSpace.toTopologicalSpace",
   "DifferentiableWithinAt.continuousWithinAt",
   "ContinuousOn",
   "NormedSpace",
   "Set.instMembershipSet"],
  "name": "DifferentiableOn.continuousOn",
  "constType":
  "∀ {𝕜 : Type u_1} [inst : NontriviallyNormedField 𝕜] {E : Type u_2} [inst_1 : NormedAddCommGroup E]\n  [inst_2 : NormedSpace 𝕜 E] {F : Type u_3} [inst_3 : NormedAddCommGroup F] [inst_4 : NormedSpace 𝕜 F] {f : E → F}\n  {s : Set E}, DifferentiableOn 𝕜 f s → ContinuousOn f s",
  "constCategory": "Theorem"},
 {"references":
  ["EStateM",
   "OfNat.ofNat",
   "Lean.Name.mkStr",
   "String.toSubstring'",
   "Lean.MacroM",
   "String",
   "Lean.Syntax.Preresolved.decl",
   "Lean.Name.mkStr1",
   "Lean.Macro.instMonadQuotationMacroM",
   "Lean.Syntax.Preresolved",
   "Lean.addMacroScope",
   "Pure.pure",
   "Lean.Syntax.Preresolved.namespace",
   "Monad.toBind",
   "Lean.Macro.instMonadRefMacroM",
   "Eq",
   "ite",
   "instMonadExcept",
   "Lean.MonadQuotation.getCurrMacroScope",
   "ReaderT.instMonadExceptOfReaderT",
   "Lean.Macro.State",
   "Bool.true",
   "PUnit",
   "Lean.Macro.Exception",
   "instOfNatNat",
   "Lean.Syntax.ident",
   "List.nil",
   "Bind.bind",
   "Nat",
   "Lean.Name.anonymous",
   "Applicative.toPure",
   "instDecidableEqBool",
   "List.cons",
   "Lean.Syntax.isOfKind",
   "Lean.Macro.Context",
   "ReaderT.instMonadReaderT",
   "Lean.TSyntax.raw",
   "Lean.Macro",
   "Lean.TSyntax.mk",
   "ReaderT.instApplicativeReaderT",
   "Lean.Syntax.getArg",
   "Lean.Syntax",
   "Lean.Macro.Exception.unsupportedSyntax",
   "Lean.MacroScope",
   "EStateM.instMonadEStateM",
   "Lean.MonadRef.mkInfoFromRefPos",
   "Lean.Name.mkStr2",
   "Lean.MonadQuotation.getMainModule",
   "Lean.SyntaxNodeKind",
   "Lean.Name.mkNum",
   "letFun",
   "EStateM.nonBacktrackable",
   "MonadExcept.throw",
   "Lean.SourceInfo",
   "Bool",
   "EStateM.instMonadExceptOfEStateM",
   "Lean.Name"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»",
  "constType": "Lean.Macro",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Real.sqrt_one",
   "MulZeroOneClass.toMulOneClass",
   "Real",
   "AbsoluteValue",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Preorder.toLE",
   "True",
   "Eq",
   "Real.instOneReal",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Complex.normSq_I",
   "Complex.normSq",
   "MonoidWithZeroHom",
   "Eq.trans",
   "Complex.I",
   "eq_self",
   "Complex.abs",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MonoidHomClass.toMulHomClass",
   "MulHomClass.toFunLike",
   "One.toOfNat1",
   "FunLike.coe",
   "Real.sqrt",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Complex",
   "congrArg",
   "OrderedSemiring.toPartialOrder",
   "congrFun"],
  "name": "Complex.abs_I",
  "constType": "Complex.abs Complex.I = 1",
  "constCategory": "Theorem"},
 {"references": ["Zero", "outParam", "FunLike", "ZeroHomClass"],
  "name": "ZeroHomClass.toFunLike",
  "constType":
  "{F : Type u_9} →\n  {M : outParam (Type u_10)} →\n    {N : outParam (Type u_11)} →\n      [inst : Zero M] → [inst_1 : Zero N] → [self : ZeroHomClass F M N] → FunLike F M fun x => N",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toRing",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "LinearOrderedRing.toStrictOrderedRing",
   "PartialOrder.toPreorder",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Preorder.toLE",
   "pow_bit0",
   "AddGroupWithOne.toAddGroup",
   "Eq",
   "Zero.toOfNat0",
   "Eq.mpr",
   "LinearOrderedRing",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "Nat",
   "id",
   "HPow.hPow",
   "StrictOrderedRing.toPartialOrder",
   "bit0",
   "Ring.toAddGroupWithOne",
   "instAddNat",
   "AddGroup.existsAddOfLE",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "Monoid.toMulOneClass",
   "instHMul",
   "mul_self_nonneg",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "HMul.hMul",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "MonoidWithZero.toZero"],
  "name": "pow_bit0_nonneg",
  "constType":
  "∀ {R : Type u_2} [inst : LinearOrderedRing R] (a : R) (n : ℕ), 0 ≤ a ^ bit0 n",
  "constCategory": "Theorem"},
 {"references":
  ["Eq.rec", "le_refl", "Preorder", "LE.le", "Preorder.toLE", "Eq"],
  "name": "le_of_eq",
  "constType": "∀ {α : Type u} [inst : Preorder α] {a b : α}, a = b → a ≤ b",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Lean.Syntax.Preresolved",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["Finset.card",
   "Finset.instEmptyCollectionFinset",
   "OfNat.ofNat",
   "EmptyCollection.emptyCollection",
   "propext",
   "Finset",
   "Finset.card_eq_zero",
   "instOfNatNat",
   "Nat",
   "Eq"],
  "name": "Mathlib.Data.Finset.Card._auxLemma.1",
  "constType": "∀ {α : Type u_1} {s : Finset α}, (Finset.card s = 0) = (s = ∅)",
  "constCategory": "Theorem"},
 {"references":
  ["CauSeq.const",
   "CauchySeq",
   "Metric.mem_nhds_iff",
   "CompleteSpace",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Real.instSupReal",
   "Mathlib.Topology.Instances.Real._auxLemma.4",
   "Exists.casesOn",
   "Preorder.toLE",
   "Eq",
   "Dist.dist",
   "Eq.mpr",
   "Iff.mp",
   "Filter.Tendsto",
   "Filter",
   "Metric.ball",
   "Nat",
   "And.casesOn",
   "Eq.trans",
   "SemilatticeSup.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "instHSub",
   "StrictOrderedRing.toPartialOrder",
   "CauSeq.instSubCauSeq",
   "PseudoMetricSpace.toUniformSpace",
   "HasSubset.Subset",
   "Nat.instLatticeNat",
   "Real.instRingReal",
   "Set.instMembershipSet",
   "And",
   "CauSeq.equiv_lim",
   "IsAbsoluteValue.abs_isAbsoluteValue",
   "LT.lt",
   "instInhabitedNat",
   "Filter.atTop",
   "Exists",
   "Real.instLinearOrderedFieldReal",
   "LinearOrderedRing.toStrictOrderedRing",
   "Subtype.val",
   "IsCauSeq",
   "Real",
   "Set",
   "GE.ge",
   "LinearOrderedField.toLinearOrderedCommRing",
   "Exists.imp",
   "Exists.intro",
   "Abs.abs",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Metric.cauchySeq_iff'",
   "instLENat",
   "Preorder.toLT",
   "Filter.map",
   "Lattice.toSemilatticeSup",
   "UniformSpace.toTopologicalSpace",
   "instNonempty",
   "id",
   "instMembershipSetFilter",
   "Neg.toHasAbs",
   "Membership.mem",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "CauSeq.lim",
   "Real.instLinearOrderedRingReal",
   "Set.preimage",
   "Real.instLTReal",
   "nhds",
   "HSub.hSub",
   "Metric.complete_of_cauchySeq_tendsto",
   "Real.pseudoMetricSpace",
   "CauSeq",
   "GT.gt",
   "Real.instZeroReal",
   "Real.instIsCompleteRealInstLinearOrderedFieldRealInstRingRealAbsToHasAbsInstNegRealInstSupRealAbs_isAbsoluteValueInstLinearOrderedRingReal",
   "PseudoMetricSpace.toDist",
   "Set.instHasSubsetSet",
   "StrictOrderedSemiring.toPartialOrder",
   "letFun",
   "Mathlib.Topology.Instances.Real._auxLemma.3",
   "Subtype.mk"],
  "name": "instCompleteSpaceRealToUniformSpacePseudoMetricSpace",
  "constType": "CompleteSpace ℝ",
  "constCategory": "Definition"},
 {"references":
  ["EisensteinSeries.eis_bound_by_real_eis",
   "Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "UpperHalfPlane.IsBoundedAtImInfty",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "upper_half_plane_isOpen",
   "Real.instAddMonoidReal",
   "instDecidableEqFin",
   "DivInvMonoid.Pow",
   "And.left",
   "Nat.cast_zero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Complex.abs_ofReal",
   "Real.instOneReal",
   "Semiring.toNatCast",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Real.linearOrder",
   "IsROrC.charZero_isROrC",
   "EisensteinSeries.upp_half_translation",
   "Mathlib.Tactic.Ring.neg_congr",
   "HSMul.hSMul",
   "Subgroup",
   "UpperHalfPlane.upperHalfSpace",
   "HDiv.hDiv",
   "instOfNat",
   "Subtype",
   "Complex.instOneComplex",
   "Int.instCommRingInt",
   "instHSub",
   "HPow.hPow",
   "Complex.instSubComplex",
   "Complex.abs",
   "instHDiv",
   "PseudoMetricSpace.toUniformSpace",
   "UpperHalfPlane.coe",
   "UpperHalfPlane.modular_T_zpow_smul",
   "Real.instRingReal",
   "instHVAdd",
   "SubadditiveHomClass.toFunLike",
   "le_abs_self",
   "Complex.im",
   "And",
   "Mathlib.Tactic.Ring.neg_zero",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.6",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "eq_true",
   "UpperHalfPlane.instAddActionRealUpperHalfPlaneInstAddMonoidReal",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "LinearOrder.toPartialOrder",
   "And.intro",
   "Int",
   "Fin",
   "congrFun",
   "AddZeroClass.toAdd",
   "Exists",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "Complex.instNormComplex",
   "instOfNatInt",
   "Subtype.val",
   "Set",
   "Real",
   "SlashInvariantFormClass.toFunLike",
   "GE.ge",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Exists.intro",
   "EisensteinSeries.rfunct",
   "AddMonoid.toAddZeroClass",
   "algebraInt",
   "TopologicalSpace.Opens.mk",
   "IsCancelAdd.toIsRightCancelAdd",
   "EisensteinSeries.Eisenstein_SIF",
   "Abs.abs",
   "AbsoluteValue.subadditiveHomClass",
   "UpperHalfPlane.im",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Eq.rec",
   "AddGroup.toAddCancelMonoid",
   "zero_lt_one",
   "HVAdd.hVAdd",
   "UniformSpace.toTopologicalSpace",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "UpperHalfPlane.vadd_im",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Top.top",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "Neg.neg",
   "EisensteinSeries.AbsEisenstein_bound_unifomly_on_stip",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "EisensteinSeries.mod_form_periodic",
   "Real.instDivisionRingReal",
   "ModularGroup.T",
   "NormedCommRing.toSeminormedCommRing",
   "le_zero_of_zero_ge",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Bool.false",
   "letFun",
   "Real.instPreorderReal",
   "Complex.instNeZeroRealInstZeroRealOfNatToOfNat1InstOneReal",
   "Mathlib.Tactic.Ring.add_mul",
   "NegZeroClass.toNeg",
   "Subtype.mk",
   "Real.orderedAddCommGroup",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Mathlib.Tactic.Ring.mul_congr",
   "instHSMul",
   "Real.instMulReal",
   "Real.instLEReal",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.isROrC",
   "Subgroup.instTopSubgroup",
   "Real.instSupReal",
   "UpperHalfPlane.SLAction",
   "Exists.casesOn",
   "SetLike.instMembership",
   "Preorder.toLE",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "AbsEisenstein_tsum",
   "SeminormedCommRing.toSeminormedRing",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Real.instCommSemiringReal",
   "Ring.toIntCast",
   "SlashInvariantForm",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "le_trans",
   "UpperHalfPlane",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.5",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "neg_neg_of_pos",
   "Real.partialOrder",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Fin.fintype",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.intCast",
   "Real.orderedSemiring",
   "lt_of_not_ge",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "Int.cast",
   "Eq.mp",
   "Real.instAddGroupReal",
   "AddAction.toVAdd",
   "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.4",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "TopologicalSpace.Opens",
   "Real.instLinearOrderedFieldReal",
   "Linarith.lt_irrefl",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Real.natCast",
   "SeminormedRing.toPseudoMetricSpace",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "LinearOrderedField.toDiv",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Eisenstein_tsum",
   "instHPow",
   "SlashInvariantFormClass.slashInvariantForm",
   "Preorder.toLT",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "Linarith.mul_neg",
   "instOfNatNat",
   "add_lt_of_neg_of_le",
   "Real.strictOrderedRing",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Complex.re",
   "GT.gt",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Real.instZeroReal",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "EisensteinSeries.lbpoint",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "riemannZeta",
   "HMul.hMul",
   "Complex",
   "Group.toDivInvMonoid",
   "Bool",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.Eisenstein_is_bounded'",
  "constType":
  "∀ (k : ℤ), 3 ≤ k → UpperHalfPlane.IsBoundedAtImInfty ⇑(EisensteinSeries.Eisenstein_SIF ⊤ k)",
  "constCategory": "Theorem"},
 {"references":
  ["Int.ofNat",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "instSubNat",
   "AddGroupWithOne.toSub",
   "SubNegMonoid.toNeg",
   "Nat.lt_of_sub_eq_succ",
   "AddGroupWithOne.toIntCast",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Eq.refl",
   "AddGroupWithOne.toAddGroup",
   "True",
   "Eq",
   "Nat.linearOrder",
   "SubNegMonoid.toSub",
   "Eq.mpr",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "instLENat",
   "AddGroupWithOne",
   "instOfNatNat",
   "le_of_lt",
   "Int.cast_negSucc",
   "Nat",
   "Eq.symm",
   "Nat.le_of_sub_eq_zero",
   "Nat.succ",
   "Eq.trans",
   "Nat.add_one",
   "id",
   "eq_self",
   "instHSub",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instAddNat",
   "instHAdd",
   "Unit",
   "HSub.hSub",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "LE.le",
   "Int.cast_ofNat",
   "eq_true",
   "Nat.zero",
   "Eq.ndrec",
   "of_eq_true",
   "instNatCastInt",
   "Nat.cast_sub",
   "SubtractionMonoid.toSubNegMonoid",
   "Int.cast",
   "Int.negSucc",
   "Int.negOfNat.match_1",
   "LinearOrder.toPartialOrder",
   "congrArg",
   "neg_sub",
   "Int",
   "Nat.casesOn",
   "Int.subNatNat",
   "congrFun"],
  "name": "Int.cast_subNatNat",
  "constType":
  "∀ {R : Type u} [inst : AddGroupWithOne R] (m n : ℕ), ↑(Int.subNatNat m n) = ↑m - ↑n",
  "constCategory": "Theorem"},
 {"references": ["EStateM", "ReaderT", "Unit", "Lean.Syntax"],
  "name": "Lean.PrettyPrinter.UnexpandM",
  "constType": "Type → Type",
  "constCategory": "Definition"},
 {"references": ["HEq", "HEq.refl", "HEq.rec"],
  "name": "HEq.casesOn",
  "constType":
  "{α : Sort u} →\n  {a : α} →\n    {motive : {β : Sort u} → (a_1 : β) → HEq a a_1 → Sort u_1} →\n      {β : Sort u} → {a_1 : β} → (t : HEq a a_1) → motive a (_ : HEq a a) → motive a_1 t",
  "constCategory": "Definition"},
 {"references":
  ["ContravariantClass.elim",
   "PartialOrder.toPreorder",
   "Contravariant",
   "instHAdd",
   "HAdd.hAdd",
   "contravariant_le_iff_contravariant_lt_and_eq",
   "LE.le",
   "Preorder.toLE",
   "Iff.mpr",
   "PartialOrder",
   "Eq",
   "add_left_cancel",
   "And",
   "Preorder.toLT",
   "LT.lt",
   "And.intro",
   "Add",
   "IsLeftCancelAdd",
   "ContravariantClass",
   "ContravariantClass.mk"],
  "name": "IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt",
  "constType":
  "∀ (N : Type u_2) [inst : Add N] [inst_1 : IsLeftCancelAdd N] [inst_2 : PartialOrder N]\n  [inst_3 : ContravariantClass N N (fun x x_1 => x + x_1) fun x x_1 => x < x_1],\n  ContravariantClass N N (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedSemiring.toMax",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "Int.coe_natAbs",
   "Nat.cast_max",
   "Finset.instSProd",
   "Finset.Icc",
   "Eq.refl",
   "Int.linearOrderedCommRing",
   "Int.instMaxInt",
   "instSubsingletonForAll",
   "True",
   "Abs.abs",
   "Semiring.toNatCast",
   "Subsingleton.elim",
   "Eq",
   "DecidablePred",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "SemilatticeSup.toSup",
   "Int.instDecidableEqInt",
   "Eq.rec",
   "SProd.sprod",
   "Decidable",
   "Finset",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Finset.filter",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "Nat",
   "Lattice.toSemilatticeSup",
   "EisensteinSeries.square",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Eq.trans",
   "eq_self",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Neg.toHasAbs",
   "funext",
   "Prod.snd",
   "instDistribLattice",
   "Neg.neg",
   "Prod.fst",
   "Nat.instMaxNat",
   "StrictOrderedSemiring.toSemiring",
   "DistribLattice.toLattice",
   "Eq.ndrec",
   "instNatCastInt",
   "of_eq_true",
   "Max.max",
   "congr",
   "Prod",
   "congrArg",
   "Int",
   "instSubsingletonDecidable",
   "congrFun",
   "Int.natAbs"],
  "name": "EisensteinSeries.square_eq",
  "constType":
  "∀ (m : ℤ),\n  EisensteinSeries.square m = Finset.filter (fun x => max |x.1| |x.2| = m) (Finset.Icc (-m) m ×ˢ Finset.Icc (-m) m)",
  "constCategory": "Theorem"},
 {"references":
  ["instHDiv",
   "DivisionRing",
   "Eq.ndrec",
   "Eq.refl",
   "HDiv.hDiv",
   "Eq.symm",
   "DivisionRing.toDiv",
   "Eq"],
  "name": "Mathlib.Tactic.Ring.div_congr",
  "constType":
  "∀ {R : Type u_1} [inst : DivisionRing R] {a a' b b' c : R}, a = a' → b = b' → a' / b' = c → a / b = c",
  "constCategory": "Theorem"},
 {"references":
  ["Neg.toHasAbs",
   "Membership.mem",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "Prod.snd",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "Finset.instSProd",
   "instDistribLattice",
   "Finset.Icc",
   "Int.instMaxInt",
   "Finset.instMembershipFinset",
   "Int.linearOrderedCommRing",
   "Neg.neg",
   "Prod.fst",
   "LE.le",
   "Abs.abs",
   "Eq",
   "DistribLattice.toLattice",
   "EisensteinSeries.mem_square_aux",
   "SemilatticeSup.toSup",
   "propext",
   "SProd.sprod",
   "Max.max",
   "Finset",
   "Prod",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "Lattice.toSemilatticeSup",
   "Int",
   "Int.instLEInt"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.4",
  "constType":
  "∀ {m : ℤ} {i : ℤ × ℤ}, (i ∈ Finset.Icc (-m) m ×ˢ Finset.Icc (-m) m) = (max |i.1| |i.2| ≤ m)",
  "constCategory": "Theorem"},
 {"references": ["forall_eq'", "propext", "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.12",
  "constType":
  "∀ {α : Sort u_1} {p : α → Prop} {a' : α}, (∀ (a : α), a' = a → p a) = p a'",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Int.ofNat",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "AddGroupWithOne.toIntCast",
   "True",
   "Int.cast_ofNat",
   "Eq",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Mathlib.Meta.NormNum.IsNat",
   "of_eq_true",
   "instNatCastInt",
   "Int.cast",
   "Mathlib.Meta.NormNum.IsInt.to_isNat.match_1",
   "Ring.toIntCast",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "Nat",
   "congrArg",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.trans",
   "Int",
   "congrFun"],
  "name": "Mathlib.Meta.NormNum.IsInt.to_isNat",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {a : α} {n : ℕ},\n  Mathlib.Meta.NormNum.IsInt a (Int.ofNat n) → Mathlib.Meta.NormNum.IsNat a n",
  "constCategory": "Theorem"},
 {"references": ["Lean.Name"],
  "name": "Lean.Name.anonymous",
  "constType": "Lean.Name",
  "constCategory": "Other"},
 {"references": ["TopologicalSpace"],
  "name": "Continuous",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → [inst : TopologicalSpace α] → [inst : TopologicalSpace β] → (α → β) → Prop",
  "constCategory": "Other"},
 {"references":
  ["Membership.mem",
   "SetLike",
   "Set",
   "Membership.mk",
   "Membership",
   "SetLike.coe",
   "Set.instMembershipSet"],
  "name": "SetLike.instMembership",
  "constType":
  "{A : Type u_1} → {B : Type u_2} → [i : SetLike A B] → Membership B A",
  "constCategory": "Definition"},
 {"references": ["Exists.rec", "Exists", "Exists.intro"],
  "name": "Exists.casesOn",
  "constType":
  "∀ {α : Sort u} {p : α → Prop} {motive : Exists p → Prop} (t : Exists p),\n  (∀ (w : α) (h : p w), motive (_ : Exists p)) → motive t",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "instHMul",
   "OfNat.ofNat",
   "MulZeroClass.toZero",
   "HMul.hMul",
   "MulZeroClass",
   "MulZeroClass.toMul",
   "Eq"],
  "name": "MulZeroClass.mul_zero",
  "constType": "∀ {M₀ : Type u} [self : MulZeroClass M₀] (a : M₀), a * 0 = 0",
  "constCategory": "Definition"},
 {"references":
  ["Mathlib.Tactic.Ring.one_pow",
   "Distrib.toAdd",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "Real.instAddMonoidReal",
   "div_self_mul_self'",
   "mul_div_assoc'",
   "one_div",
   "Mathlib.Tactic.Ring.pow_zero",
   "Semifield.toCommGroupWithZero",
   "Nat.cast_zero",
   "MulZeroClass.toMul",
   "Real.instOneReal",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Mathlib.Tactic.Ring.pow_bit0",
   "Mathlib.Tactic.Ring.pow_one",
   "Real.strictOrderedSemiring",
   "LinearOrderedField.toLinearOrderedSemifield",
   "HDiv.hDiv",
   "Mathlib.Tactic.Ring.pow_add",
   "GroupWithZero.toInv",
   "HPow.hPow",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "MulOneClass.toOne",
   "Real.instRingReal",
   "Mathlib.Meta.Positivity.nonneg_of_isNat",
   "MonoidWithZero.toMulZeroOneClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "congr",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Tactic.Ring.add_overlap_pf",
   "Inv.inv",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "AddGroup.toAddCancelMonoid",
   "Monoid.toNatPow",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "div_div_eq_mul_div",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Real.instLinearOrderedRingReal",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Real.instLTReal",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "pow_pos",
   "One.toOfNat1",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "GroupWithZero.toMonoidWithZero",
   "GroupWithZero.toDiv",
   "Real.instDivisionRingReal",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.one_mul",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "Semifield.toDivisionSemiring",
   "div_add'",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Real.orderedAddCommGroup",
   "Mathlib.Tactic.Ring.mul_congr",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Real.instAddReal",
   "HAdd.hAdd",
   "Real.instMulReal",
   "Mathlib.Tactic.Ring.pow_one_cast",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "Real.instCommSemiringReal",
   "Mathlib.Tactic.Ring.pow_nat",
   "DivisionCommMonoid.toDivisionMonoid",
   "mul_div_assoc",
   "Nat",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "DivisionSemiring.toGroupWithZero",
   "Real.partialOrder",
   "Nat.rawCast",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "DivisionSemiring.toDiv",
   "Mathlib.Tactic.Ring.coeff_one",
   "Real.orderedSemiring",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "MulZeroOneClass.toMulZeroClass",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DivInvMonoid.toInv",
   "instHMul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "AddCancelMonoid.toIsCancelAdd",
   "of_eq_true",
   "Real.instAddGroupReal",
   "mul_one",
   "congrArg",
   "Mathlib.Tactic.Ring.mul_one",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.isNat_add",
   "lt_add_of_le_of_pos",
   "div_mul_eq_mul_div",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "LinearOrderedField.toDiv",
   "mul_div_cancel",
   "pow_bit0_nonneg",
   "Zero.toOfNat0",
   "ne_of_gt",
   "one_mul",
   "instHPow",
   "instOfNatNat",
   "Mathlib.Tactic.Ring.pow_congr",
   "CommSemiring.toCommMonoidWithZero",
   "id",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "IsCancelAdd.toIsLeftCancelAdd",
   "Real.instMonoidReal",
   "lt_of_le_of_lt",
   "instHAdd",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "Real.instZeroReal",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "DivisionSemiring.toSemiring",
   "div_pow",
   "inv_eq_one_div",
   "Real.semiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Mathlib.Algebra.GroupWithZero.Units.Lemmas._auxLemma.2",
   "Nat.semiring"],
  "name": "EisensteinSeries.aux4",
  "constType":
  "∀ (a b : ℝ), 0 < b → (b ^ 4 + (a * b) ^ 2) / (a ^ 2 + b ^ 2) ^ 2 = 1 / ((a / b) ^ 2 + 1)",
  "constCategory": "Theorem"},
 {"references":
  ["Real", "_private.Mathlib.Data.Real.Basic.0.Real.mul", "Mul", "Mul.mk"],
  "name": "Real.instMulReal",
  "constType": "Mul ℝ",
  "constCategory": "Definition"},
 {"references":
  ["tsum_eq_zero_of_not_summable",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Classical.propDecidable",
   "Eq.refl",
   "OrderClosedTopology",
   "AddCommMonoid.toAddMonoid",
   "dite",
   "tsum",
   "HasSum.nonneg",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "OrderedAddCommMonoid",
   "Zero.toOfNat0",
   "Eq.mpr",
   "Eq.ndrec",
   "AddMonoid.toZero",
   "le_refl",
   "TopologicalSpace",
   "Not",
   "Summable.hasSum",
   "OrderedAddCommMonoid.toPartialOrder",
   "Summable",
   "id",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "tsum_nonneg",
  "constType":
  "∀ {ι : Type u_1} {α : Type u_3} [inst : OrderedAddCommMonoid α] [inst_1 : TopologicalSpace α]\n  [inst_2 : OrderClosedTopology α] {g : ι → α}, (∀ (i : ι), 0 ≤ g i) → 0 ≤ ∑' (i : ι), g i",
  "constCategory": "Theorem"},
 {"references":
  ["Finset.filter._at.EisensteinSeries.square._spec_2",
   "Finset.Icc._at.EisensteinSeries.square._spec_1",
   "Multiset.product._rarg",
   "_obj",
   "Int.neg"],
  "name": "EisensteinSeries.square._cstage2",
  "constType": "_obj → _obj",
  "constCategory": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring", "AddCommMonoid"],
  "name": "NonUnitalNonAssocSemiring.toAddCommMonoid",
  "constType":
  "{α : Type u} → [self : NonUnitalNonAssocSemiring α] → AddCommMonoid α",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "NormedLatticeAddCommGroup.orderClosedTopology",
   "one_div",
   "DivInvMonoid.Pow",
   "Semiring.toNatCast",
   "Real.instOneReal",
   "Complex.abs_ofReal",
   "NormedDivisionRing.toDivisionRing",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "instOfNat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Complex.instOneComplex",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "SubadditiveHomClass.toFunLike",
   "zeta_nat_eq_tsum_of_gt_one",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "instInhabitedNat",
   "instNatAtLeastTwo",
   "congr",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "Complex.ofReal_inv",
   "congrFun",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "GE.ge",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Int.rawCast",
   "Eq.refl",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "Int.add_one_le_iff",
   "AddGroup.toAddCancelMonoid",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "zero_lt_one",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Mathlib.Tactic.Ring.mul_add",
   "Neg.neg",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "Real.instLinearOrderedAddCommGroupReal",
   "LE.le",
   "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.10",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "instNatCastInt",
   "letFun",
   "NegZeroClass.toNeg",
   "Int.instAddMonoidInt",
   "Mathlib.Tactic.Ring.mul_congr",
   "OrderedAddCommGroup.toPartialOrder",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.10",
   "AbsoluteValue",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Ring.toIntCast",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Mathlib.Algebra.Order.Ring.Defs._auxLemma.1",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Std.Logic._auxLemma.32",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "Int.instLTInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.cast_ofNat",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "Int.cast",
   "Eq.mp",
   "Real.normedLatticeAddCommGroup",
   "NormedField.toNormedDivisionRing",
   "Int.ofNat",
   "StrictOrderedRing.toRing",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "SeminormedRing.toPseudoMetricSpace",
   "Complex.ofReal_tsum",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "Complex.ofReal_pow",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "instOfNatNat",
   "Mathlib.Algebra.Order.Field.Basic._auxLemma.5",
   "Int.instLinearOrderInt",
   "CommSemiring.toCommMonoidWithZero",
   "NeZero.charZero_one",
   "id",
   "eq_self",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Real.pseudoMetricSpace",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.to_charZero",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedCommSemiring.toOrderedSemiring",
   "zpow_coe_nat",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Bool",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.2",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Semifield.toCommGroupWithZero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Iff.mpr",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Complex.Complex.addGroupWithOne",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "le_of_not_gt",
   "Complex.instField",
   "HDiv.hDiv",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "instHSub",
   "HPow.hPow",
   "Complex.abs",
   "Real.instRingReal",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "LT.lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Nat.cast_pow",
   "Int",
   "Inv.inv",
   "Exists",
   "LinearOrderedSemifield.toInv",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Algebra.Order.Group.Abs._auxLemma.9",
   "AddMonoid.toAddZeroClass",
   "Complex.instInvComplex",
   "True",
   "Abs.abs",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "UniformSpace.toTopologicalSpace",
   "instNonempty",
   "DivInvMonoid.toDiv",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "DivInvMonoid.toMonoid",
   "Bool.false",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Mathlib.Tactic.Ring.add_mul",
   "Real.instAddCommMonoidReal",
   "Mathlib.Tactic.Ring.atom_pf",
   "Monoid.toOne",
   "tsum_nonneg",
   "Exists.casesOn",
   "instLTNat",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "Nat",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Nat.rawCast",
   "OrderedSemiring.zeroLEOneClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instAddInt",
   "DivInvMonoid.toInv",
   "instHMul",
   "Int.instAddGroupInt",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.orderedAddCommMonoid",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Mathlib.Meta.NormNum.isNat_add",
   "CanLift.prf",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "forall_congr",
   "instHPow",
   "Preorder.toLT",
   "Nat.monoid",
   "Linarith.mul_neg",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "funext",
   "Real.instMonoidReal",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HSub.hSub",
   "tsum",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Real.semiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Int.instSemiringInt",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "riemannZeta",
   "Complex",
   "NegZeroClass.toZero"],
  "name": "EisensteinSeries.riemannZeta_abs_int",
  "constType":
  "∀ (k : ℤ), 1 < k → Complex.abs (riemannZeta ↑k) = ∑' (n : ℕ), 1 / ↑n ^ k",
  "constCategory": "Theorem"},
 {"references":
  ["instHSub",
   "Int.instSubInt",
   "AddGroupWithOne.toSub",
   "AddGroupWithOne.toIntCast",
   "Int.cast",
   "HSub.hSub",
   "AddGroupWithOne",
   "Int.cast_sub",
   "Eq.symm",
   "Int",
   "Eq"],
  "name": "Mathlib.Data.Int.Cast.Basic._auxLemma.8",
  "constType":
  "∀ {R : Type u} [inst : AddGroupWithOne R] (m n : ℤ), ↑m - ↑n = ↑(m - n)",
  "constCategory": "Theorem"},
 {"references":
  ["CanLift",
   "OfNat.ofNat",
   "Nat.cast",
   "instOfNatInt",
   "instNatCastInt",
   "Int.natAbs_of_nonneg",
   "CanLift.mk",
   "Exists.intro",
   "Nat",
   "LE.le",
   "Int",
   "Int.instLEInt",
   "Int.natAbs",
   "Eq"],
  "name": "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
  "constType": "CanLift ℤ ℕ (fun n => ↑n) fun x => 0 ≤ x",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "eq_false",
   "OfNat.ofNat",
   "NeZero",
   "False",
   "One",
   "one_ne_zero",
   "One.toOfNat1",
   "Eq"],
  "name": "Mathlib.Algebra.NeZero._auxLemma.4",
  "constType":
  "∀ {α : Type u_2} [inst : Zero α] [inst_1 : One α] [inst_2 : NeZero 1], (1 = 0) = False",
  "constCategory": "Theorem"},
 {"references": ["OfNat.ofNat", "Matrix", "instOfNatNat", "Nat", "Int", "Fin"],
  "name": "Matrix.adjugate._at.EisensteinSeries.MoebiusEquiv._spec_1",
  "constType": "Matrix (Fin 2) (Fin 2) ℤ → Fin 2 → Fin 2 → ℤ",
  "constCategory": "Axiom"},
 {"references":
  ["_obj",
   "Lean.Name.str._override",
   "«termSL(_,_)».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.7._closed_5",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_4"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_5._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["SubNegZeroMonoid.neg_zero",
   "SubNegZeroMonoid.toSubNegMonoid",
   "NegZeroClass.mk",
   "SubNegMonoid.toNeg",
   "AddMonoid.toZero",
   "SubNegMonoid.toAddMonoid",
   "SubNegZeroMonoid",
   "NegZeroClass"],
  "name": "SubNegZeroMonoid.toNegZeroClass",
  "constType": "{G : Type u_2} → [self : SubNegZeroMonoid G] → NegZeroClass G",
  "constCategory": "Definition"},
 {"references":
  ["EmbeddingLike.toFunLike",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "prod_properSpace",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "Prod.instAddCommMonoid",
   "Real.normedField",
   "Real",
   "Homeomorph.instEquivLikeHomeomorph",
   "SeminormedRing.toPseudoMetricSpace",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "RingHom.id",
   "SeminormedCommRing.toSeminormedRing",
   "Semiring.toNonAssocSemiring",
   "NormedField.toNormedSpace",
   "EquivLike.toEmbeddingLike",
   "Homeomorph",
   "UniformSpace.toTopologicalSpace",
   "Complex.equivRealProdClm",
   "NNReal",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "id",
   "RingHomInvPair.ids",
   "MetricSpace.toEMetricSpace",
   "LipschitzWith.properSpace",
   "Prod.instModule",
   "Complex.instModule",
   "Complex.lipschitz_equivRealProd",
   "NormedField.toMetricSpace",
   "instTopologicalSpaceProd",
   "LipschitzWith",
   "PseudoMetricSpace.toUniformSpace",
   "MetricSpace.toPseudoMetricSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.pseudoMetricSpace",
   "One.toOfNat1",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "Real.normedCommRing",
   "instNNRealOne",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "instProperSpaceRealPseudoMetricSpace",
   "Prod.metricSpaceMax",
   "EMetricSpace.toPseudoEMetricSpace",
   "NormedCommRing.toSeminormedCommRing",
   "ContinuousLinearEquiv.toHomeomorph",
   "Real.metricSpace",
   "Real.semiring",
   "Prod.pseudoEMetricSpaceMax",
   "Prod",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "ProperSpace",
   "NormedSpace.toModule",
   "Real.instAddCommMonoidReal"],
  "name":
  "Complex.instProperSpaceComplexToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
  "constType": "ProperSpace ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_neg",
   "AddGroupWithOne.toIntCast",
   "Int.cast",
   "AddGroupWithOne.toNeg",
   "AddGroupWithOne",
   "Int.instNegInt",
   "Neg.neg",
   "Eq.symm",
   "Int",
   "Eq"],
  "name": "Mathlib.Data.Int.Cast.Basic._auxLemma.4",
  "constType": "∀ {R : Type u} [inst : AddGroupWithOne R] (n : ℤ), -↑n = ↑(-n)",
  "constCategory": "Theorem"},
 {"references":
  ["EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_4",
   "_obj",
   "Lean.Syntax.Preresolved.decl",
   "List.nil",
   "_neutral"],
  "name":
  "EisensteinSeries.«_aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___macroRules_EisensteinSeries_term↑ₕ_1»._closed_5._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["Finset.card",
   "OfNat.ofNat",
   "HEq",
   "instSubNat",
   "instOfNatInt",
   "HAdd.hAdd",
   "Eq.refl",
   "Int.linearOrderedCommRing",
   "rfl",
   "Nat.eq_add_of_sub_eq",
   "Eq",
   "outParam",
   "Int.instRingInt",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Eq.mpr",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "instLENat",
   "AddMonoid.toAddSemigroup",
   "Finset",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "instOfNatNat",
   "Mathlib.Data.Nat.Cast.Defs._auxLemma.3",
   "Nat",
   "EisensteinSeries.square",
   "Eq.symm",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Eq.trans",
   "Nat.cast_one",
   "id",
   "instHSub",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "instAddNat",
   "AddSemigroup.toAdd",
   "instHAdd",
   "eq_of_heq",
   "AddMonoidWithOne.toAddMonoid",
   "HSub.hSub",
   "EisensteinSeries.square_size",
   "One.toOfNat1",
   "LE.le",
   "Int.instAddInt",
   "instHMul",
   "StrictOrderedSemiring.to_charZero",
   "Eq.ndrec",
   "AddMonoidWithOne.toOne",
   "instNatCastInt",
   "HEq.refl",
   "letFun",
   "HMul.hMul",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "Prod",
   "Eq.casesOn",
   "instMulNat",
   "congrArg",
   "Int",
   "HMul"],
  "name": "EisensteinSeries.square_size'",
  "constType":
  "∀ (n : ℕ), 1 ≤ n → Finset.card (EisensteinSeries.square ↑n) = 8 * n",
  "constCategory": "Theorem"},
 {"references":
  ["Semigroup.toMul",
   "Semiring.toNonUnitalSemiring",
   "Mathlib.Meta.NormNum.IsRat.casesOn",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "Nat.cast_commute",
   "Invertible",
   "Semiring.toNatCast",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "Ring",
   "Commute.invOf_right",
   "Int.cast_mul",
   "invertibleMul",
   "Nat",
   "Eq.trans",
   "Mathlib.Meta.NormNum.invertibleOfMul'",
   "Invertible.invOf",
   "congr_arg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Commute.right_comm",
   "Int.cast_ofNat",
   "SemigroupWithZero.toSemigroup",
   "instHMul",
   "NonAssocRing.toIntCast",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Int.cast",
   "Eq.mp",
   "congr",
   "congrArg",
   "Int",
   "congrFun",
   "Commute.invOf_left",
   "AddGroupWithOne.toIntCast",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "mul_mul_invOf_self_cancel'",
   "True",
   "Ring.toNonAssocRing",
   "Nat.cast_mul",
   "mul_mul_invOf_self_cancel",
   "AddMonoidWithOne.toNatCast",
   "Eq.symm",
   "id",
   "eq_self",
   "NonUnitalNonAssocRing.toMul",
   "Int.instMulInt",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.NormNum.Basic._auxLemma.1",
   "Mathlib.Meta.NormNum.IsRat",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.IsRat.mk",
   "Ring.toSemiring",
   "Monoid.toMulOneClass",
   "Semiring.toOne",
   "Int.mul",
   "Eq.ndrec",
   "instNatCastInt",
   "letFun",
   "NonAssocSemiring.toNatCast",
   "HMul.hMul",
   "NonUnitalSemiring.toSemigroupWithZero",
   "instMulNat",
   "Nat.mul"],
  "name": "Mathlib.Meta.NormNum.isRat_mul",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {f : α → α → α} {a b : α} {na nb nc : ℤ} {da db dc k : ℕ},\n  f = HMul.hMul →\n    Mathlib.Meta.NormNum.IsRat a na da →\n      Mathlib.Meta.NormNum.IsRat b nb db →\n        Int.mul na nb = Int.mul (↑k) nc → Nat.mul da db = Nat.mul k dc → Mathlib.Meta.NormNum.IsRat (f a b) nc dc",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "instHDiv",
   "MulOneClass.toMul",
   "div_eq_mul_inv",
   "inv_inv",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "True",
   "Eq",
   "DivInvMonoid.toInv",
   "DivisionMonoid",
   "instHMul",
   "mul_assoc",
   "of_eq_true",
   "DivisionMonoid.toDivInvMonoid",
   "congr",
   "HMul.hMul",
   "HDiv.hDiv",
   "InvolutiveInv.toInv",
   "DivisionMonoid.toInvolutiveInv",
   "mul_inv_rev",
   "congrArg",
   "Eq.trans",
   "congrFun",
   "DivInvMonoid.toDiv",
   "Inv.inv"],
  "name": "div_div_eq_mul_div",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionMonoid α] (a b c : α), a / (b / c) = a * c / b",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "eq_self",
   "AddZeroClass.toAdd",
   "DivisionRing.toDivisionSemiring",
   "DivisionRing",
   "AddGroupWithOne.toAddMonoidWithOne",
   "OfNat.ofNat",
   "Ring.toAddGroupWithOne",
   "DivisionRing.toRing",
   "instHAdd",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "AddMonoidWithOne.toAddMonoid",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddMonoid.toAddZeroClass",
   "Ring.toNonAssocRing",
   "True",
   "DivisionRing.toInv",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq",
   "Zero.toOfNat0",
   "DivisionSemiring.toSemiring",
   "AddZeroClass.toZero",
   "of_eq_true",
   "congr",
   "MonoidWithZero.toZero",
   "add_zero",
   "congrArg",
   "Eq.trans",
   "Inv.inv"],
  "name": "Mathlib.Tactic.Ring.inv_single",
  "constType":
  "∀ {R : Type u_1} [inst : DivisionRing R] {a b : R}, a⁻¹ = b → (a + 0)⁻¹ = b + 0",
  "constCategory": "Theorem"},
 {"references":
  ["DecidablePred",
   "Finset",
   "Finset.val",
   "Multiset.filter",
   "Finset.filter.proof_1",
   "Finset.mk"],
  "name": "Finset.filter",
  "constType":
  "{α : Type u_1} → (p : α → Prop) → [inst : DecidablePred p] → Finset α → Finset α",
  "constCategory": "Definition"},
 {"references":
  ["Lean.withRef",
   "EStateM",
   "Lean.Syntax.getArgs",
   "OfNat.ofNat",
   "Lean.Name.mkStr",
   "cond",
   "Array.mkArray0",
   "Lean.Name.mkStr1",
   "Pure.pure",
   "Monad.toBind",
   "Eq",
   "ite",
   "instMonadExcept",
   "Lean.TSyntax",
   "Lean.MonadQuotation.getCurrMacroScope",
   "ReaderT.instMonadExceptOfReaderT",
   "Lean.Syntax.node1",
   "Array.append",
   "Bool.true",
   "Unit.unit",
   "PUnit",
   "instOfNatNat",
   "List.nil",
   "Nat",
   "Lean.Name.anonymous",
   "Bind.bind",
   "Applicative.toPure",
   "instDecidableEqBool",
   "Lean.Syntax.node2",
   "Lean.PrettyPrinter.instMonadQuotationUnexpandM",
   "List.cons",
   "Lean.Syntax.isOfKind",
   "Lean.TSyntaxArray",
   "ReaderT.instMonadReaderT",
   "Lean.Name.mkStr4",
   "Unit",
   "Lean.TSyntax.raw",
   "Lean.TSyntax.mk",
   "Lean.MonadQuotation.toMonadRef",
   "Lean.Syntax.atom",
   "Lean.TSyntaxArray.raw",
   "Lean.TSyntaxArray.mk",
   "Lean.Syntax.getArg",
   "ReaderT.instApplicativeReaderT",
   "Lean.Syntax",
   "Lean.Syntax.node",
   "Lean.MacroScope",
   "or",
   "EStateM.instMonadEStateM",
   "Lean.MonadRef.mkInfoFromRefPos",
   "Bool.false",
   "Lean.MonadQuotation.getMainModule",
   "Lean.Name.mkNum",
   "Lean.SyntaxNodeKind",
   "Lean.PrettyPrinter.UnexpandM",
   "letFun",
   "EStateM.nonBacktrackable",
   "MonadExcept.throw",
   "Lean.SourceInfo",
   "Bool",
   "EStateM.instMonadExceptOfEStateM",
   "Lean.Name",
   "Lean.PrettyPrinter.Unexpander"],
  "name":
  "EisensteinSeries._aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___unexpand_EisensteinSeries_holExtn_1",
  "constType": "Lean.PrettyPrinter.Unexpander",
  "constCategory": "Definition"},
 {"references": ["AddSemigroup", "AddMonoid"],
  "name": "AddMonoid.toAddSemigroup",
  "constType": "{M : Type u} → [self : AddMonoid M] → AddSemigroup M",
  "constCategory": "Definition"},
 {"references": ["NatCast", "AddMonoidWithOne"],
  "name": "AddMonoidWithOne.toNatCast",
  "constType": "{R : Type u} → [self : AddMonoidWithOne R] → NatCast R",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "PseudoMetricSpace.toDist",
   "Metric.closedBall",
   "propext",
   "Real.instLEReal",
   "Set",
   "Real",
   "Metric.mem_closedBall",
   "LE.le",
   "PseudoMetricSpace",
   "Eq",
   "Dist.dist",
   "Set.instMembershipSet"],
  "name": "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.10",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {x y : α} {ε : ℝ}, (y ∈ Metric.closedBall x ε) = (dist y x ≤ ε)",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Norm",
  "constType": "Type u_9 → Type u_9",
  "constCategory": "Other"},
 {"references":
  ["inferInstance",
   "Real",
   "Ring.toAddCommGroup",
   "Real.instRingReal",
   "AddCommGroup"],
  "name": "Real.instAddCommGroupReal",
  "constType": "AddCommGroup ℝ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedAddCommGroup",
   "OrderedCancelAddCommMonoid",
   "LinearOrderedAddCommGroup.compare_eq_compareOfLessAndEq",
   "LinearOrderedAddCommGroup.decidableLT",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "OrderedCancelAddCommMonoid.le_of_add_le_add_left",
   "LinearOrderedAddCommGroup.le_total",
   "LinearOrderedAddCommGroup.min_def",
   "OrderedAddCommGroup.toOrderedCancelAddCommMonoid",
   "LinearOrderedAddCommGroup.decidableLE",
   "LinearOrderedCancelAddCommMonoid",
   "LinearOrderedCancelAddCommMonoid.mk",
   "LinearOrderedAddCommGroup.decidableEq",
   "LinearOrderedAddCommGroup.toOrd",
   "LinearOrderedAddCommGroup.max_def",
   "LinearOrderedAddCommGroup.toMin",
   "OrderedCancelAddCommMonoid.mk",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
   "LinearOrderedAddCommGroup.toMax"],
  "name": "LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid",
  "constType":
  "{α : Type u} → [inst : LinearOrderedAddCommGroup α] → LinearOrderedCancelAddCommMonoid α",
  "constCategory": "Definition"},
 {"references":
  ["Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "OfNat.ofNat",
   "Matrix.SpecialLinearGroup",
   "instDecidableEqFin",
   "Subgroup",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "ModularForm",
  "constType": "Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ) → ℤ → Type",
  "constCategory": "Other"},
 {"references": ["TopologicalSpace.Opens", "Set", "TopologicalSpace", "IsOpen"],
  "name": "TopologicalSpace.Opens.mk",
  "constType":
  "{α : Type u_2} → [inst : TopologicalSpace α] → (carrier : Set α) → IsOpen carrier → TopologicalSpace.Opens α",
  "constCategory": "Other"},
 {"references":
  ["EisensteinSeries.Eisenstein_SIF.proof_1",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "OfNat.ofNat",
   "Eisenstein_tsum",
   "Matrix.SpecialLinearGroup",
   "SlashInvariantForm",
   "SlashInvariantForm.mk",
   "instDecidableEqFin",
   "Subgroup",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin"],
  "name": "EisensteinSeries.Eisenstein_SIF",
  "constType":
  "(Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)) → (k : ℤ) → SlashInvariantForm Γ k",
  "constCategory": "Definition"},
 {"references": ["HEq", "HEq.refl", "Eq.subst", "Eq"],
  "name": "heq_of_eq",
  "constType": "∀ {α : Sort u} {a a' : α}, a = a' → HEq a a'",
  "constCategory": "Theorem"},
 {"references":
  ["Exists",
   "Ne",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "False",
   "Trans.trans",
   "MulZeroOneClass.toMulOneClass",
   "MulOneClass.toOne",
   "exists_pair_ne",
   "MulZeroClass.zero_mul",
   "Eq.refl",
   "One.toOfNat1",
   "MulZeroOneClass.toZero",
   "Exists.casesOn",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "MulZeroOneClass",
   "Eq",
   "Zero.toOfNat0",
   "instHMul",
   "NeZero",
   "Eq.mpr",
   "NeZero.mk",
   "one_mul",
   "Eq.ndrec",
   "MulZeroClass.toZero",
   "HMul.hMul",
   "instTransEq",
   "Nontrivial",
   "id"],
  "name": "NeZero.one",
  "constType":
  "∀ {M₀ : Type u_1} [inst : MulZeroOneClass M₀] [inst_1 : Nontrivial M₀], NeZero 1",
  "constCategory": "Definition"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "Monoid.mk",
   "NonUnitalSemiring.mul_assoc",
   "Semiring",
   "Semiring.mul_one",
   "Semiring.npow_succ",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "Semiring.npow_zero",
   "Semiring.one_mul",
   "Semiring.toOne",
   "MonoidWithZero.mk",
   "Semiring.npow",
   "NonUnitalNonAssocSemiring.zero_mul",
   "AddMonoid.toZero",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.mul_zero",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semigroup.mk",
   "MonoidWithZero"],
  "name": "Semiring.toMonoidWithZero",
  "constType": "{α : Type u} → [self : Semiring α] → MonoidWithZero α",
  "constCategory": "Definition"},
 {"references":
  ["Min.min",
   "HPow.hPow",
   "OfNat.ofNat",
   "Real.instLinearOrderedRingReal",
   "Real.instMonoidReal",
   "Real.instLTReal",
   "Subtype.val",
   "Real",
   "Eq.refl",
   "EisensteinSeries.rfunct",
   "Real.sqrt",
   "EisensteinSeries.lb",
   "Eq",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "Complex.im",
   "instHPow",
   "LT.lt",
   "Monoid.toNatPow",
   "instOfNatNat",
   "UpperHalfPlane",
   "Complex",
   "LinearOrderedRing.toMin",
   "Nat"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.EisensteinSeries.rfunct._eq_1",
  "constType":
  "∀ (z : UpperHalfPlane), EisensteinSeries.rfunct z = min (Real.sqrt ((↑z).im ^ 2)) (Real.sqrt (EisensteinSeries.lb z))",
  "constCategory": "Theorem"},
 {"references":
  ["StrictOrderedRing.toRing",
   "AddZeroClass.toAdd",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "OfNat.ofNat",
   "LinearOrderedRing.toStrictOrderedRing",
   "PartialOrder.toPreorder",
   "AddMonoid.toAddZeroClass",
   "Int.floor",
   "AddGroupWithOne.toAddGroup",
   "Int.fract",
   "SubNegMonoid.toSub",
   "Iff.mp",
   "LinearOrderedRing",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Preorder.toLT",
   "Ring.toIntCast",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "AddCommGroup.toAddGroup",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "instHSub",
   "StrictOrderedRing.toPartialOrder",
   "Int.sub_one_lt_floor",
   "FloorRing",
   "Ring.toAddGroupWithOne",
   "IsCancelAdd.toIsLeftCancelAdd",
   "HSub.hSub",
   "One.toOfNat1",
   "AddGroup.toSubNegMonoid",
   "StrictOrderedSemiring.toSemiring",
   "Semiring.toOne",
   "AddCancelMonoid.toIsCancelAdd",
   "Int.cast",
   "LT.lt",
   "SubNegMonoid.toAddMonoid",
   "sub_lt_comm",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name": "Int.fract_lt_one",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedRing α] [inst_1 : FloorRing α] (a : α), Int.fract a < 1",
  "constCategory": "Theorem"},
 {"references":
  ["LinearOrderedSemifield.toSemifield",
   "CommMonoidWithZero.toZero",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "LinearOrderedSemifield.toInv",
   "Semifield.toCommGroupWithZero",
   "Preorder.toLE",
   "True",
   "iff_self",
   "Eq",
   "Zero.toOfNat0",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Mathlib.Algebra.Order.Field.Basic._auxLemma.2",
   "Iff",
   "Mathlib.Algebra.Order.Field.Basic._auxLemma.4",
   "Preorder.toLT",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Eq.trans",
   "GroupWithZero.toInv",
   "Or",
   "LinearOrderedSemifield",
   "DivisionSemiring.toGroupWithZero",
   "Mathlib.Algebra.Order.Field.Basic._auxLemma.3",
   "CommGroupWithZero.toCommMonoidWithZero",
   "LE.le",
   "GroupWithZero.toMonoidWithZero",
   "StrictOrderedSemiring.toPartialOrder",
   "of_eq_true",
   "LT.lt",
   "congr",
   "Semifield.toDivisionSemiring",
   "MonoidWithZero.toZero",
   "congrArg",
   "Inv.inv"],
  "name": "inv_nonneg",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a : α}, 0 ≤ a⁻¹ ↔ 0 ≤ a",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "AddCommGroup.toDivisionAddCommMonoid",
   "OfNat.ofNat",
   "neg_zero",
   "Semiring.toMonoidWithZero",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Ring.toSemiring",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Ring.toNeg",
   "of_eq_true",
   "Ring",
   "Ring.toAddCommGroup",
   "MonoidWithZero.toZero",
   "congrArg",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "Eq.trans",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.neg_zero",
  "constType": "∀ {R : Type u_1} [inst : Ring R], -0 = 0",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "OfNat.ofNat",
   "LinearOrderedCommMonoid.toOrderedCommMonoid",
   "PartialOrder.toPreorder",
   "propext",
   "LinearOrderedCommMonoidWithZero.toZero",
   "OrderedCommMonoid.toPartialOrder",
   "LinearOrderedCommMonoidWithZero",
   "le_zero_iff",
   "LinearOrderedCommMonoidWithZero.toLinearOrderedCommMonoid",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Modformsported.ForMathlib.EisensteinSeries.summable._auxLemma.2",
  "constType":
  "∀ {α : Type u_1} {a : α} [inst : LinearOrderedCommMonoidWithZero α], (a ≤ 0) = (a = 0)",
  "constCategory": "Theorem"},
 {"references":
  ["ModularForm.instZero",
   "ModularFormClass.modularForm",
   "ModularForm.coe_add",
   "OfNat.ofNat",
   "SlashInvariantFormClass.toFunLike",
   "instDecidableEqFin",
   "ModularFormClass.toSlashInvariantFormClass",
   "ModularForm.instAddCommGroupModularForm.proof_1",
   "ModularForm.add",
   "ModularForm.instSub",
   "ModularForm.instAddCommGroupModularForm.proof_5",
   "ModularForm",
   "Complex.Complex.addGroupWithOne",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "NormedAddGroup.toAddGroup",
   "ModularForm.instAddCommGroupModularForm.proof_2",
   "ModularForm.instAddCommGroupModularForm.proof_3",
   "Subgroup",
   "UpperHalfPlane",
   "instOfNatNat",
   "ModularForm.instNeg",
   "ModularForm.coe_sub",
   "Nat",
   "Int.instCommRingInt",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Complex.addCommGroup",
   "Function.Injective.addCommGroup",
   "AddMonoidWithOne.toAddMonoid",
   "Fin.fintype",
   "FunLike.coe",
   "ModularForm.instAddCommGroupModularForm.proof_6",
   "ModularForm.coe_neg",
   "SubNegMonoid.SMulInt",
   "AddGroup.toSubNegMonoid",
   "ModularForm.instSMul",
   "AddMonoid.toNatSMul",
   "Matrix.SpecialLinearGroup",
   "ModularForm.instAddCommGroupModularForm.proof_4",
   "Complex",
   "NormedAddCommGroup.toNormedAddGroup",
   "AddCommGroup",
   "Complex.instNormedAddCommGroupComplex",
   "Pi.addCommGroup",
   "Int",
   "Fin"],
  "name": "ModularForm.instAddCommGroupModularForm",
  "constType":
  "{Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)} → {k : ℤ} → AddCommGroup (ModularForm Γ k)",
  "constCategory": "Definition"},
 {"references": ["CompleteAtomicBooleanAlgebra", "CompletelyDistribLattice"],
  "name": "CompleteAtomicBooleanAlgebra.toCompletelyDistribLattice",
  "constType":
  "{α : Type u} → [self : CompleteAtomicBooleanAlgebra α] → CompletelyDistribLattice α",
  "constCategory": "Definition"},
 {"references":
  ["«termSL(_,_)».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.7._closed_9",
   "_obj",
   "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_6",
   "Lean.Name.str._override"],
  "name":
  "EisensteinSeries.«term↑ₕ».«_@».Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._hyg.1929._closed_7._cstage2",
  "constType": "_obj",
  "constCategory": "Definition"},
 {"references":
  ["StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Or",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "instOfNatInt",
   "Or.inr",
   "instHAdd",
   "HAdd.hAdd",
   "Int.linearOrderedCommRing",
   "Or.casesOn",
   "Eq",
   "Int.instAddInt",
   "Or.inl",
   "Preorder.toLT",
   "LT.lt",
   "Int"],
  "name": "EisensteinSeries.Int.le_add_one_iff.match_1",
  "constType":
  "∀ {m n : ℤ} (motive : m = n + 1 ∨ m < n + 1 → Prop) (x : m = n + 1 ∨ m < n + 1),\n  (∀ (h : m = n + 1), motive (_ : m = n + 1 ∨ m < n + 1)) →\n    (∀ (h : m < n + 1), motive (_ : m = n + 1 ∨ m < n + 1)) → motive x",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup.toMetricSpace",
   "NormedAddCommGroup",
   "NormedCommRing",
   "Real.normedCommRing.proof_1",
   "Real",
   "Real.commRing",
   "CommRing.toRing",
   "NormedRing.mk",
   "CommRing.mul_comm",
   "NormedAddCommGroup.dist_eq",
   "NormedAddCommGroup.toNorm",
   "NormedCommRing.mk",
   "CommRing",
   "Real.normedAddCommGroup"],
  "name": "Real.normedCommRing",
  "constType": "NormedCommRing ℝ",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance", "Real", "Real.commRing", "Ring", "CommRing.toRing"],
  "name": "Real.instRingReal",
  "constType": "Ring ℝ",
  "constCategory": "Definition"},
 {"references":
  ["if_pos.match_1",
   "Decidable.isFalse",
   "Decidable",
   "Decidable.isTrue",
   "dite",
   "Not",
   "absurd",
   "rfl",
   "Eq"],
  "name": "dif_pos",
  "constType":
  "∀ {c : Prop} {h : Decidable c} (hc : c) {α : Sort u} {t : c → α} {e : ¬c → α}, dite c t e = t hc",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "HAdd.hAdd",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "Complex.instInvComplex",
   "Eq",
   "Complex.instField",
   "instHPow",
   "DivisionCommMonoid.toDivisionMonoid",
   "NormedDivisionRing.toDivisionRing",
   "Ring.toIntCast",
   "Int.instNegInt",
   "Eq.symm",
   "InvOneClass.toInv",
   "DivisionRing.toDivInvMonoid",
   "CommGroupWithZero.toDivisionCommMonoid",
   "HPow.hPow",
   "instHAdd",
   "Field.toSemifield",
   "Complex.instRingComplex",
   "Neg.neg",
   "Complex.instAddComplex",
   "instHMul",
   "DivInvOneMonoid.toInvOneClass",
   "Int.cast",
   "DivisionMonoid.toDivInvMonoid",
   "letFun",
   "HMul.hMul",
   "zpow_neg",
   "Complex",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "Complex.instMulComplex",
   "NormedField.toNormedDivisionRing",
   "Inv.inv"],
  "name": "EisensteinSeries.aux8",
  "constType":
  "∀ (a b k : ℤ) (x : ℂ), ((↑a * x + ↑b) ^ k)⁻¹ = (↑a * x + ↑b) ^ (-k)",
  "constCategory": "Theorem"},
 {"references": ["Norm", "NormedAddCommGroup"],
  "name": "NormedAddCommGroup.toNorm",
  "constType": "{E : Type u_9} → [self : NormedAddCommGroup E] → Norm E",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedAddCommGroup",
   "LinearOrderedAddCommGroup.compare_eq_compareOfLessAndEq",
   "LinearOrderedAddCommGroup.max_def",
   "LinearOrderedAddCommGroup.decidableLT",
   "LinearOrder",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "OrderedAddCommGroup.toPartialOrder",
   "LinearOrderedAddCommGroup.toMin",
   "LinearOrder.mk",
   "LinearOrderedAddCommGroup.min_def",
   "LinearOrderedAddCommGroup.le_total",
   "LinearOrderedAddCommGroup.toMax",
   "LinearOrderedAddCommGroup.decidableLE",
   "LinearOrderedAddCommGroup.decidableEq",
   "LinearOrderedAddCommGroup.toOrd"],
  "name": "LinearOrderedAddCommGroup.toLinearOrder",
  "constType":
  "{α : Type u} → [self : LinearOrderedAddCommGroup α] → LinearOrder α",
  "constCategory": "Definition"},
 {"references":
  ["Multiset.nodup_range", "Multiset.range", "Finset", "Finset.mk", "Nat"],
  "name": "Finset.range",
  "constType": "ℕ → Finset ℕ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "HAdd.hAdd",
   "Real",
   "AbsoluteValue",
   "DivInvMonoid.Pow",
   "Preorder.toLE",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Complex.instField",
   "instHPow",
   "NormedDivisionRing.toDivisionRing",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "HDiv.hDiv",
   "DivisionRing.toDivInvMonoid",
   "Complex.instOneComplex",
   "HPow.hPow",
   "Complex.abs",
   "instHDiv",
   "Prod.snd",
   "Real.instLTReal",
   "instHAdd",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "Prod.fst",
   "Complex.instAddComplex",
   "FunLike.coe",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Complex.im",
   "Real.instZeroReal",
   "instHMul",
   "Int.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Complex",
   "Prod",
   "Field.toDiv",
   "Complex.instMulComplex",
   "Int",
   "NormedField.toNormedDivisionRing",
   "OrderedSemiring.toPartialOrder"],
  "name": "AbsEise",
  "constType": "ℤ → UpperHalfPlane → ℤ × ℤ → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "Prod.snd",
   "Finset.Icc",
   "Int.linearOrderedCommRing",
   "Prod.fst",
   "Preorder",
   "Int.decEq",
   "Nat.instMaxNat",
   "LE.le",
   "PartialOrder",
   "Eq",
   "Decidable.casesOn",
   "Nat.cast",
   "instLENat",
   "instNatCastInt",
   "LinearOrderedRing",
   "StrictOrderedRing",
   "Max.max",
   "Finset",
   "Decidable",
   "Finset.filter",
   "Finset.product",
   "Prod",
   "Not",
   "Nat",
   "Int",
   "Int.neg",
   "Nat.decLe",
   "Int.natAbs"],
  "name": "EisensteinSeries.square._cstage1",
  "constType": "ℤ → Finset (ℤ × ℤ)",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Semigroup.toMul",
   "Semiring.toNonUnitalSemiring",
   "Mathlib.Meta.NormNum.IsRat.casesOn",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "Distrib.rightDistribClass",
   "HAdd.hAdd",
   "Nat.cast_commute",
   "Int.cast_add",
   "Invertible",
   "Semiring.toNatCast",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "Ring.toIntCast",
   "Ring",
   "Commute.invOf_right",
   "Int.cast_mul",
   "invertibleMul",
   "Nat",
   "Int.add",
   "Eq.trans",
   "Mathlib.Meta.NormNum.invertibleOfMul'",
   "Invertible.invOf",
   "congr_arg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Commute.right_comm",
   "Int.cast_ofNat",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.instAddInt",
   "SemigroupWithZero.toSemigroup",
   "instHMul",
   "NonAssocRing.toIntCast",
   "of_eq_true",
   "Int.cast",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Eq.mp",
   "congr",
   "congrArg",
   "Int",
   "congrFun",
   "Commute.invOf_left",
   "AddGroupWithOne.toIntCast",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "mul_mul_invOf_self_cancel'",
   "True",
   "Ring.toNonAssocRing",
   "add_mul",
   "Nat.cast_mul",
   "mul_mul_invOf_self_cancel",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "Eq.symm",
   "id",
   "eq_self",
   "NonUnitalNonAssocRing.toMul",
   "Int.instMulInt",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.NormNum.Basic._auxLemma.1",
   "Ring.toAddGroupWithOne",
   "instHAdd",
   "AddSemigroup.toAdd",
   "Mathlib.Meta.NormNum.IsRat",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.IsRat.mk",
   "Ring.toSemiring",
   "Monoid.toMulOneClass",
   "Semiring.toOne",
   "Int.mul",
   "Eq.ndrec",
   "instNatCastInt",
   "letFun",
   "HMul.hMul",
   "NonAssocSemiring.toNatCast",
   "NonUnitalSemiring.toSemigroupWithZero",
   "instMulNat",
   "Nat.mul"],
  "name": "Mathlib.Meta.NormNum.isRat_add",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {f : α → α → α} {a b : α} {na nb nc : ℤ} {da db dc k : ℕ},\n  f = HAdd.hAdd →\n    Mathlib.Meta.NormNum.IsRat a na da →\n      Mathlib.Meta.NormNum.IsRat b nb db →\n        Int.add (Int.mul na ↑db) (Int.mul nb ↑da) = Int.mul (↑k) nc →\n          Nat.mul da db = Nat.mul k dc → Mathlib.Meta.NormNum.IsRat (f a b) nc dc",
  "constCategory": "Theorem"},
 {"references":
  ["trivial",
   "Iff.intro",
   "Nonempty.intro",
   "Exists",
   "Iff",
   "exists_true_iff_nonempty.match_2",
   "Exists.intro",
   "Nonempty",
   "True",
   "exists_true_iff_nonempty.match_1"],
  "name": "exists_true_iff_nonempty",
  "constType": "∀ {α : Sort u_2}, (∃ x, True) ↔ Nonempty α",
  "constCategory": "Theorem"},
 {"references":
  ["AddCommGroup.add_comm",
   "AddCommMonoid.mk",
   "SubNegMonoid.toAddMonoid",
   "AddCommGroup.toAddGroup",
   "AddCommGroup",
   "AddGroup.toSubNegMonoid",
   "AddCommMonoid"],
  "name": "AddCommGroup.toAddCommMonoid",
  "constType": "{G : Type u} → [self : AddCommGroup G] → AddCommMonoid G",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "OrderedAddCommMonoid",
   "Function.swap",
   "PartialOrder.toPreorder",
   "covariant_swap_add_of_covariant_add",
   "instHAdd",
   "HAdd.hAdd",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "CovariantClass",
   "AddCommMonoid.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddCommSemigroup",
   "LE.le",
   "OrderedAddCommMonoid.toPartialOrder",
   "Preorder.toLE",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "OrderedAddCommMonoid.toCovariantClassRight",
  "constType":
  "∀ (M : Type u_3) [inst : OrderedAddCommMonoid M],\n  CovariantClass M M (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1",
  "constCategory": "Definition"},
 {"references":
  ["Finset.mem_product",
   "Membership.mem",
   "And",
   "Prod.snd",
   "Finset.instSProd",
   "propext",
   "SProd.sprod",
   "Finset",
   "Finset.instMembershipFinset",
   "Prod",
   "Prod.fst",
   "Eq"],
  "name": "Mathlib.Data.Finset.Prod._auxLemma.1",
  "constType":
  "∀ {α : Type u_1} {β : Type u_2} {s : Finset α} {t : Finset β} {p : α × β}, (p ∈ s ×ˢ t) = (p.1 ∈ s ∧ p.2 ∈ t)",
  "constCategory": "Theorem"},
 {"references": ["DivInvMonoid", "Group"],
  "name": "Group.toDivInvMonoid",
  "constType": "{G : Type u} → [self : Group G] → DivInvMonoid G",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Subtype.val",
   "Set",
   "upper_half_plane_isOpen",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "Set.instMembershipSet",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Eisenstein_tsum",
   "Set.Elem",
   "UpperHalfPlane.upperHalfSpace",
   "Complex",
   "UniformSpace.toTopologicalSpace",
   "Int",
   "Subtype"],
  "name": "EisensteinSeries.eisensteinSeriesRestrict",
  "constType":
  "ℤ → (A B : ℝ) → ↑(EisensteinSeries.upperHalfSpaceSlice A B) → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "instHAdd",
   "Semiring",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocSemiring.toMul",
   "LE.le",
   "Preorder.toLE",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq",
   "OrderedSemiring",
   "MulHom",
   "Zero.toOfNat0",
   "MulHom.toFun",
   "Semiring.toNonAssocSemiring",
   "Iff",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name": "AbsoluteValue.mk",
  "constType":
  "{R : Type u_1} →\n  {S : Type u_2} →\n    [inst : Semiring R] →\n      [inst_1 : OrderedSemiring S] →\n        (toMulHom : R →ₙ* S) →\n          (∀ (x : R), 0 ≤ MulHom.toFun toMulHom x) →\n            (∀ (x : R), MulHom.toFun toMulHom x = 0 ↔ x = 0) →\n              (∀ (x y : R), MulHom.toFun toMulHom (x + y) ≤ MulHom.toFun toMulHom x + MulHom.toFun toMulHom y) →\n                AbsoluteValue R S",
  "constCategory": "Other"},
 {"references":
  ["NormedAddCommGroup.toAddCommGroup",
   "IsROrC.innerProductSpace",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "instOfNatInt",
   "Real",
   "Real.isROrC",
   "Eq.refl",
   "AddCommGroup.toAddCommMonoid",
   "SeminormedRing.toPseudoMetricSpace",
   "summable_norm_iff",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Eq",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "AbsEise",
   "Complex.instIsROrCComplex",
   "UpperHalfPlane",
   "NormedAddCommGroup.toNorm",
   "Complex.instFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModule",
   "UniformSpace.toTopologicalSpace",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Summable",
   "EisensteinSeries.real_eise_is_summable",
   "id",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.pseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "LE.le",
   "Iff.symm",
   "InnerProductSpace.toNormedSpace",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "propext",
   "letFun",
   "InnerProductSpace.complexToReal",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "eise",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Prod",
   "Complex",
   "Norm.norm",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Complex.instNormedAddCommGroupComplex",
   "Real.instAddCommMonoidReal",
   "Int",
   "Int.instLEInt"],
  "name": "EisensteinSeries.Eisenstein_tsum_summable",
  "constType": "∀ (k : ℤ) (z : UpperHalfPlane), 3 ≤ k → Summable (eise k z)",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "HAdd.hAdd",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Eq.refl",
   "NeZero.one",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Eq",
   "Nat.linearOrder",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "StrictOrderedSemiring",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Preorder.toLT",
   "AddMonoid.toAddSemigroup",
   "Nat.cast_succ",
   "AddCancelCommMonoid.toAddCancelMonoid",
   "instOfNatNat",
   "Nat",
   "CharZero.mk",
   "Nat.succ",
   "id",
   "IsCancelAdd.toIsLeftCancelAdd",
   "lt_add_one",
   "instAddNat",
   "instHAdd",
   "AddSemigroup.toAdd",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.zeroLEOneClass",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "StrictOrderedSemiring.toSemiring",
   "Eq.ndrec",
   "CharZero",
   "AddCancelMonoid.toIsCancelAdd",
   "StrictOrderedSemiring.toPartialOrder",
   "AddMonoidWithOne.toOne",
   "StrictOrderedSemiring.toNontrivial",
   "StrictOrderedSemiring.toOrderedSemiring",
   "LT.lt",
   "strictMono_nat_of_lt_succ",
   "StrictMono.injective"],
  "name": "StrictOrderedSemiring.to_charZero",
  "constType": "∀ {α : Type u_1} [inst : StrictOrderedSemiring α], CharZero α",
  "constCategory": "Definition"},
 {"references": ["Nat"],
  "name": "Lean.MacroScope",
  "constType": "Type",
  "constCategory": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring", "Mul"],
  "name": "NonUnitalNonAssocSemiring.toMul",
  "constType": "{α : Type u} → [self : NonUnitalNonAssocSemiring α] → Mul α",
  "constCategory": "Definition"},
 {"references": ["SemilatticeInf", "PartialOrder"],
  "name": "SemilatticeInf.toPartialOrder",
  "constType": "{α : Type u} → [self : SemilatticeInf α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references": ["AddMonoidWithOne", "AddMonoid"],
  "name": "AddMonoidWithOne.toAddMonoid",
  "constType": "{R : Type u} → [self : AddMonoidWithOne R] → AddMonoid R",
  "constCategory": "Definition"},
 {"references": ["AddMonoidWithOne", "AddGroupWithOne"],
  "name": "AddGroupWithOne.toAddMonoidWithOne",
  "constType": "{R : Type u} → [self : AddGroupWithOne R] → AddMonoidWithOne R",
  "constCategory": "Definition"},
 {"references": ["Lean.Name._impl"],
  "name": "Lean.Name.anonymous._impl",
  "constType": "Lean.Name._impl",
  "constCategory": "Other"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Eq.refl",
   "inv_one",
   "Eq",
   "DivisionMonoid",
   "PProd",
   "Eq.mpr",
   "instHPow",
   "PUnit",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "mul_inv_rev",
   "InvOneClass.toInv",
   "Nat.succ",
   "id",
   "HPow.hPow",
   "Nat.below",
   "Nat.brecOn",
   "instAddNat",
   "instHAdd",
   "Unit",
   "One.toOfNat1",
   "pow_succ'",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "pow_zero",
   "DivInvMonoid.toInv",
   "InvOneClass.toOne",
   "instHMul",
   "Nat.rec",
   "PProd.fst",
   "Eq.ndrec",
   "DivInvOneMonoid.toInvOneClass",
   "inv_pow.match_1",
   "DivisionMonoid.toDivInvMonoid",
   "HMul.hMul",
   "pow_succ",
   "DivisionMonoid.toDivInvOneMonoid",
   "Inv.inv"],
  "name": "inv_pow",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionMonoid α] (a : α) (n : ℕ), a⁻¹ ^ n = (a ^ n)⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Monoid",
   "Function.Injective.monoid",
   "Submonoid.instSetLikeSubmonoid",
   "Submonoid.toMonoid.proof_2",
   "Subtype.val",
   "Submonoid.toMonoid.proof_4",
   "Set",
   "Submonoid.toMonoid.proof_3",
   "Submonoid.one",
   "Monoid.toMulOneClass",
   "SetLike.instMembership",
   "Set.instMembershipSet",
   "Submonoid",
   "Submonoid.toMonoid.proof_1",
   "Submonoid.mul",
   "Submonoid.toMonoid.proof_5",
   "SubmonoidClass.nPow",
   "Subtype",
   "SetLike.coe"],
  "name": "Submonoid.toMonoid",
  "constType":
  "{M : Type u_5} → [inst : Monoid M] → (S : Submonoid M) → Monoid ↥S",
  "constCategory": "Definition"},
 {"references":
  ["Subtype.pseudoMetricSpace",
   "PseudoMetricSpace.toDist",
   "Subtype.val",
   "Real",
   "rfl",
   "Subtype",
   "PseudoMetricSpace",
   "Eq",
   "Dist.dist"],
  "name": "Subtype.dist_eq",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {p : α → Prop} (x y : Subtype p), dist x y = dist ↑x ↑y",
  "constCategory": "Theorem"},
 {"references":
  ["NonAssocSemiring.toAddCommMonoidWithOne",
   "PartialOrder.toPreorder",
   "Nat.cast_lt",
   "OrderedSemiring.zeroLEOneClass",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "instLTNat",
   "Iff.mpr",
   "Eq",
   "OrderedSemiring",
   "Semiring.toNonAssocSemiring",
   "Nat.ble",
   "Iff.mp",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Mathlib.Meta.NormNum.isNat_lt_true.match_1",
   "CharZero",
   "Mathlib.Meta.NormNum.IsNat",
   "Bool.false",
   "Preorder.toLT",
   "LT.lt",
   "OrderedSemiring.toSemiring",
   "Bool",
   "Nat",
   "Mathlib.Meta.NormNum.ble_eq_false",
   "OrderedSemiring.toPartialOrder"],
  "name": "Mathlib.Meta.NormNum.isNat_lt_true",
  "constType":
  "∀ {α : Type u_1} [inst : OrderedSemiring α] [inst_1 : CharZero α] {a b : α} {a' b' : ℕ},\n  Mathlib.Meta.NormNum.IsNat a a' → Mathlib.Meta.NormNum.IsNat b b' → Nat.ble b' a' = false → a < b",
  "constCategory": "Theorem"},
 {"references": ["AddGroup", "NormedAddGroup"],
  "name": "NormedAddGroup.toAddGroup",
  "constType": "{E : Type u_9} → [self : NormedAddGroup E] → AddGroup E",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "False",
   "Preorder.toLT",
   "Eq.rec",
   "LT.lt",
   "lt_irrefl",
   "Not",
   "Preorder",
   "absurd",
   "Eq"],
  "name": "ne_of_gt",
  "constType": "∀ {α : Type u} [inst : Preorder α] {a b : α}, b < a → a ≠ b",
  "constCategory": "Theorem"},
 {"references":
  ["StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.decidableLE",
   "LinearOrder",
   "LinearOrderedRing.toOrd",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedRing",
   "LinearOrder.mk",
   "LinearOrderedRing.decidableEq",
   "LinearOrderedRing.toMin",
   "LinearOrderedRing.min_def",
   "LinearOrderedRing.le_total",
   "LinearOrderedRing.toMax",
   "LinearOrderedRing.compare_eq_compareOfLessAndEq",
   "LinearOrderedRing.max_def",
   "LinearOrderedRing.decidableLT"],
  "name": "LinearOrderedRing.toLinearOrder",
  "constType": "{α : Type u} → [self : LinearOrderedRing α] → LinearOrder α",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "Real",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "True",
   "Eq",
   "Complex.instSemiringComplex",
   "Complex.ofReal_mul",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "Eq.trans",
   "Complex.instOneComplex",
   "HPow.hPow",
   "Complex.ofReal'",
   "eq_self",
   "Real.instMonoidReal",
   "instAddNat",
   "instHAdd",
   "One.toOfNat1",
   "pow_zero",
   "Monoid.toMulOneClass",
   "instHMul",
   "Nat.rec",
   "of_eq_true",
   "congr",
   "HMul.hMul",
   "pow_succ",
   "Complex",
   "congrArg",
   "Complex.instMulComplex"],
  "name": "Complex.ofReal_pow",
  "constType": "∀ (r : ℝ) (n : ℕ), ↑(r ^ n) = ↑r ^ n",
  "constCategory": "Theorem"},
 {"references":
  ["DistribLattice.toLattice",
   "And",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "propext",
   "instDistribLattice",
   "LinearOrder.toMax",
   "Max.max",
   "SemilatticeInf.toPartialOrder",
   "max_le_iff",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Mathlib.Order.MinMax._auxLemma.4",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b c : α}, (max a b ≤ c) = (a ≤ c ∧ b ≤ c)",
  "constCategory": "Theorem"},
 {"references":
  ["AddCommSemigroup.toAddCommMagma",
   "ZeroLEOneClass",
   "PartialOrder.toPreorder",
   "Nat.cast_lt",
   "instHAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMagma.toAdd",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "instLTNat",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "PartialOrder",
   "AddCommMonoidWithOne.toAddCommMonoid",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "CharZero",
   "AddMonoidWithOne.toOne",
   "Preorder.toLT",
   "propext",
   "LT.lt",
   "AddMonoid.toZero",
   "CovariantClass",
   "Nat",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCommMonoidWithOne"],
  "name": "Mathlib.Data.Nat.Cast.Order._auxLemma.9",
  "constType":
  "∀ {α : Type u_1} [inst : AddCommMonoidWithOne α] [inst_1 : PartialOrder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] [inst_3 : ZeroLEOneClass α]\n  [inst_4 : CharZero α] {m n : ℕ}, (↑m < ↑n) = (m < n)",
  "constCategory": "Theorem"},
 {"references": ["NormedField", "SeminormedAddCommGroup"],
  "name": "NormedSpace",
  "constType":
  "(α : Type u_5) → (β : Type u_6) → [inst : NormedField α] → [inst : SeminormedAddCommGroup β] → Type (max u_5 u_6)",
  "constCategory": "Other"},
 {"references":
  ["Complex.ofReal'",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "Real.pseudoMetricSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "tsum",
   "NormedField.toNormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Eq",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Complex.instIsROrCComplex",
   "IsROrC.ofReal_tsum",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "UniformSpace.toTopologicalSpace",
   "Real.instAddCommMonoidReal",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring"],
  "name": "Complex.ofReal_tsum",
  "constType":
  "∀ {α : Type u_1} (f : α → ℝ), ↑(∑' (a : α), f a) = ∑' (a : α), ↑(f a)",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "Iff",
   "instOfNatInt",
   "Int.add_le_add_iff_right",
   "instHAdd",
   "HAdd.hAdd",
   "LT.lt",
   "LE.le",
   "Int",
   "Int.instLEInt",
   "Int.instLTInt",
   "Int.instAddInt"],
  "name": "Int.lt_add_one_iff",
  "constType": "∀ {a b : ℤ}, a < b + 1 ↔ a ≤ b",
  "constCategory": "Theorem"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedAddCommMonoid.mk",
   "OrderedCancelAddCommMonoid.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "StrictOrderedSemiring.add_le_add_left",
   "StrictOrderedSemiring.toSemiring",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "StrictOrderedSemiring.le_of_add_le_add_left"],
  "name": "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
  "constType":
  "{α : Type u} → [self : StrictOrderedSemiring α] → OrderedCancelAddCommMonoid α",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalRing.mk",
   "Semiring.toNonUnitalSemiring",
   "NonUnitalCommRing",
   "CommRing.toNonUnitalCommRing.proof_4",
   "CommRing.toNonUnitalCommRing.proof_11",
   "CommRing.toNonUnitalCommRing.proof_8",
   "CommRing.toNonUnitalCommRing.proof_2",
   "AddGroup.mk",
   "CommRing.toNonUnitalCommRing.proof_9",
   "CommRing.toNonUnitalCommRing.proof_1",
   "CommRing.mul_comm",
   "CommRing.toNonUnitalCommRing.proof_7",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalNonAssocRing.mk",
   "Ring.toSemiring",
   "SubNegMonoid.mk",
   "CommRing.toNonUnitalCommRing.proof_5",
   "CommRing",
   "CommRing.toNonUnitalCommRing.proof_10",
   "Ring.zsmul",
   "Ring.toNeg",
   "NonUnitalCommRing.mk",
   "Ring.toSub",
   "CommRing.toRing",
   "CommRing.toNonUnitalCommRing.proof_6",
   "CommRing.toNonUnitalCommRing.proof_3",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "AddCommGroup.mk"],
  "name": "CommRing.toNonUnitalCommRing",
  "constType": "{α : Type u} → [s : CommRing α] → NonUnitalCommRing α",
  "constCategory": "Definition"},
 {"references": ["LinearOrderedRing", "StrictOrderedRing"],
  "name": "LinearOrderedRing.toStrictOrderedRing",
  "constType":
  "{α : Type u} → [self : LinearOrderedRing α] → StrictOrderedRing α",
  "constCategory": "Definition"},
 {"references": ["Nat", "Int"],
  "name": "Int.ofNat",
  "constType": "ℕ → ℤ",
  "constCategory": "Other"},
 {"references":
  ["if_pos.match_1",
   "Subsingleton.intro",
   "Decidable.isFalse",
   "Subsingleton",
   "Decidable",
   "Not",
   "Decidable.isTrue",
   "absurd",
   "rfl",
   "Eq"],
  "name": "instSubsingletonDecidable",
  "constType": "∀ (p : Prop), Subsingleton (Decidable p)",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "instHMul",
   "OfNat.ofNat",
   "Preorder.toLT",
   "LT.lt",
   "HMul.hMul",
   "MulZeroClass.toZero",
   "PosMulStrictMono",
   "MulZeroClass",
   "Preorder",
   "MulZeroClass.toMul",
   "Left.mul_pos"],
  "name": "mul_pos",
  "constType":
  "∀ {α : Type u_1} {a b : α} [inst : MulZeroClass α] [inst_1 : Preorder α] [inst_2 : PosMulStrictMono α],\n  0 < a → 0 < b → 0 < a * b",
  "constCategory": "Theorem"},
 {"references":
  ["instHMul",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "MulOneClass.mul_one",
   "MulOneClass",
   "MulOneClass.toOne",
   "HMul.hMul",
   "One.toOfNat1",
   "Eq"],
  "name": "mul_one",
  "constType": "∀ {M : Type u} [inst : MulOneClass M] (a : M), a * 1 = a",
  "constCategory": "Theorem"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "LinearOrderedRing.toStrictOrderedRing",
   "instOfNatInt",
   "Iff.rfl",
   "Finset.instSProd",
   "EisensteinSeries.Int.le_add_one_iff",
   "HAdd.hAdd",
   "Finset.Icc",
   "Eq.refl",
   "Int.instMaxInt",
   "Int.linearOrderedCommRing",
   "le_of_eq",
   "Preorder.toLE",
   "Abs.abs",
   "Eq",
   "Eq.mpr",
   "EisensteinSeries.mem_square_aux",
   "SemilatticeSup.toSup",
   "Iff",
   "Int.instDecidableEqInt",
   "Finset.ext",
   "SProd.sprod",
   "instDecidableEqProd",
   "Finset",
   "Finset.filter",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "Lattice.toSemilatticeSup",
   "EisensteinSeries.square",
   "or_comm",
   "Finset.instUnionFinset",
   "id",
   "Neg.toHasAbs",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Membership.mem",
   "Or",
   "Prod.snd",
   "Finset.mem_union",
   "instHAdd",
   "instDistribLattice",
   "Union.union",
   "and_iff_right_of_imp",
   "Neg.neg",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "LE.le",
   "Int.instAddInt",
   "DistribLattice.toLattice",
   "And",
   "EisensteinSeries.square_eq",
   "Eq.ndrec",
   "propext",
   "Max.max",
   "Finset.mem_filter",
   "Prod",
   "Int",
   "Int.instLEInt"],
  "name": "EisensteinSeries.square_union",
  "constType":
  "∀ {n : ℤ},\n  EisensteinSeries.square (n + 1) ∪ Finset.Icc (-n) n ×ˢ Finset.Icc (-n) n =\n    Finset.Icc (-(n + 1)) (n + 1) ×ˢ Finset.Icc (-(n + 1)) (n + 1)",
  "constCategory": "Theorem"},
 {"references":
  ["Zero",
   "Complex.instZeroComplex",
   "OfNat.ofNat",
   "SlashInvariantForm.mk",
   "instDecidableEqFin",
   "Fin.fintype",
   "Pi.instZero",
   "Zero.toOfNat0",
   "outParam",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Matrix.SpecialLinearGroup",
   "SlashInvariantForm",
   "Subgroup",
   "Zero.mk",
   "SlashInvariantForm.instZero.proof_1",
   "instOfNatNat",
   "UpperHalfPlane",
   "Complex",
   "Nat",
   "Int",
   "Fin",
   "Int.instCommRingInt"],
  "name": "SlashInvariantForm.instZero",
  "constType":
  "{Γ : outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ))} → {k : outParam ℤ} → Zero (SlashInvariantForm Γ k)",
  "constCategory": "Definition"},
 {"references": ["LinearOrder", "Max"],
  "name": "LinearOrder.toMax",
  "constType": "{α : Type u} → [self : LinearOrder α] → Max α",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "Eq"],
  "name": "Eq.mp",
  "constType": "{α β : Sort u} → α = β → α → β",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedSemifield.toSemifield",
   "DivisionRing.toDivisionSemiring",
   "Real.instLinearOrderedFieldReal",
   "DivisionSemiring.toGroupWithZero",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "normHom",
   "Real",
   "NormedDivisionRing.toNorm",
   "map_inv₀",
   "NonAssocSemiring.toMulZeroOneClass",
   "DivisionRing.toInv",
   "Eq",
   "DivisionSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "NormedDivisionRing.toDivisionRing",
   "Real.semiring",
   "Norm.norm",
   "Semifield.toDivisionSemiring",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Real.instInvReal",
   "NormedDivisionRing",
   "MonoidWithZeroHom",
   "Inv.inv"],
  "name": "norm_inv",
  "constType":
  "∀ {α : Type u_1} [inst : NormedDivisionRing α] (a : α), ‖a⁻¹‖ = ‖a‖⁻¹",
  "constCategory": "Theorem"},
 {"references": ["gt_iff_lt", "propext", "LT.lt", "LT", "Eq", "GT.gt"],
  "name": "Std.Classes.Order._auxLemma.4",
  "constType": "∀ {α : Type u_1} [inst : LT α] {x y : α}, (x > y) = (y < x)",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "tsum",
   "NormedField.toNormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Eq",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Eisenstein_tsum",
   "eise",
   "Prod",
   "UpperHalfPlane",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "UniformSpace.toTopologicalSpace",
   "Int",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.Eisenstein_tsum._eq_1",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane), Eisenstein_tsum k z = ∑' (x : ℤ × ℤ), eise k z x",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Subtype.val",
   "Matrix.semiring",
   "Semiring.toMonoidWithZero",
   "instDecidableEqFin",
   "Eq.refl",
   "One.toOfNat1",
   "Fin.fintype",
   "Eq",
   "Semiring.toOne",
   "Matrix.det",
   "Matrix.SpecialLinearGroup.coeToGL",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup",
   "MonoidWithZero.toMonoid",
   "Units.val",
   "Matrix",
   "instOfNatNat",
   "Nat",
   "Int",
   "Fin",
   "Int.instCommRingInt"],
  "name": "EisensteinSeries.coeGLl",
  "constType":
  "∀ {i j : Fin 2} (A : Matrix.SpecialLinearGroup (Fin 2) ℤ), ↑↑A i j = ↑A i j",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "CompactSpace",
   "Subtype.val",
   "Set",
   "Function.comp",
   "tendstoLocallyUniformlyOn_iff_tendstoLocallyUniformly_comp_coe",
   "isCompact_iff_compactSpace",
   "Eq.refl",
   "TendstoUniformlyOn",
   "TendstoLocallyUniformlyOn",
   "Set.instMembershipSet",
   "Eq",
   "Iff.intro",
   "TendstoUniformly",
   "Iff",
   "TendstoUniformlyOn.tendstoLocallyUniformlyOn",
   "Iff.mp",
   "UniformSpace",
   "Eq.ndrec",
   "Set.Elem",
   "TendstoLocallyUniformly",
   "propext",
   "Eq.mp",
   "TopologicalSpace",
   "instTopologicalSpaceSubtype",
   "Filter",
   "tendstoUniformlyOn_iff_tendstoUniformly_comp_coe",
   "Eq.symm",
   "IsCompact",
   "tendstoLocallyUniformly_iff_tendstoUniformly_of_compactSpace"],
  "name": "tendstoLocallyUniformlyOn_iff_tendstoUniformlyOn_of_compact",
  "constType":
  "∀ {α : Type u} {β : Type v} {ι : Type x} [inst : UniformSpace β] {F : ι → α → β} {f : α → β} {s : Set α} {p : Filter ι}\n  [inst_1 : TopologicalSpace α], IsCompact s → (TendstoLocallyUniformlyOn F f p s ↔ TendstoUniformlyOn F f p s)",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "AddZeroClass.toAdd",
   "AddZeroClass.toZero",
   "OfNat.ofNat",
   "Preorder.toLT",
   "instHAdd",
   "LT.lt",
   "HAdd.hAdd",
   "CovariantClass",
   "Left.add_pos_of_nonneg_of_pos",
   "Preorder",
   "LE.le",
   "AddZeroClass",
   "Preorder.toLE"],
  "name": "add_pos_of_nonneg_of_pos",
  "constType":
  "∀ {α : Type u_1} [inst : AddZeroClass α] [inst_1 : Preorder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x < x_1] {a b : α}, 0 ≤ a → 0 < b → 0 < a + b",
  "constCategory": "Theorem"},
 {"references": ["forall_const", "propext", "Nonempty", "Eq"],
  "name": "Std.Logic._auxLemma.32",
  "constType": "∀ {b : Prop} (α : Sort u_1) [i : Nonempty α], (α → b) = b",
  "constCategory": "Theorem"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "Distrib.toAdd",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "PartialOrder.toPreorder",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Finset.instSProd",
   "Finset.Icc",
   "Int.toNat_sub_of_le",
   "pow_one",
   "Iff.mpr",
   "Mathlib.Meta.NormNum.isInt_add",
   "Semiring.toNatCast",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Linarith.nat_cast_nonneg",
   "Nat.cast",
   "le_of_not_gt",
   "Mathlib.Tactic.Ring.neg_congr",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "instHSub",
   "HPow.hPow",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Nat.cast_add",
   "Int.orderedRing",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Mathlib.Tactic.Ring.neg_zero",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "Nat.cast_inj",
   "LT.lt",
   "congr",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "Int",
   "Mathlib.Tactic.Ring.add_overlap_pf",
   "congrFun",
   "eq_sub_iff_add_eq",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Semiring.toMonoidWithZero",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "AddMonoid.toAddZeroClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "True",
   "Nat.cast_mul",
   "Mathlib.Tactic.Ring.sub_pf",
   "AddMonoidWithOne.toNatCast",
   "Int.add_one_le_iff",
   "AddMonoid.toAddSemigroup",
   "SProd.sprod",
   "Finset",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "OrderedRing.toOrderedSemiring",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "neg_nonpos_of_nonneg",
   "NonUnitalNonAssocRing.toMul",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Tactic.Ring.mul_add",
   "Neg.neg",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "Mathlib.Meta.NormNum.isNat_mul",
   "Nat.commSemiring",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "instNatCastInt",
   "Bool.false",
   "Mathlib.Tactic.Ring.one_mul",
   "Prod",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Finset.card_product",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Mathlib.Tactic.Ring.mul_congr",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Nat.cast_add_one",
   "Eq",
   "OrderedRing.toRing",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "EisensteinSeries.square_disjunion",
   "Int.toNat",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Nat",
   "EisensteinSeries.square",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Eq.trans",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "neg_neg_of_pos",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Int.instCommSemiringInt",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instLTInt",
   "Int.instAddInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "Finset.card_disjUnion",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Int.instAddGroupInt",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "AddCancelMonoid.toIsCancelAdd",
   "Eq.mp",
   "Nat.cast_ofNat",
   "add_zero",
   "congrArg",
   "Mathlib.Tactic.Ring.mul_one",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Finset.disjUnion",
   "Finset.card",
   "StrictOrderedRing.toRing",
   "Int.ofNat",
   "Linarith.lt_irrefl",
   "Int.instSubInt",
   "LinearOrderedRing.toStrictOrderedRing",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Mathlib.Meta.NormNum.isNat_add",
   "EisensteinSeries.square_disj",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Int.linearOrderedCommRing",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "Linarith.mul_nonpos",
   "Preorder.toLT",
   "instHPow",
   "Ring.toSub",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "Linarith.mul_neg",
   "Int.instNegInt",
   "instOfNatNat",
   "Int.instLinearOrderInt",
   "NeZero.charZero_one",
   "add_lt_of_neg_of_le",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "instAddNat",
   "AddSemigroup.toAdd",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "HSub.hSub",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Int.card_Icc",
   "StrictOrderedSemiring.to_charZero",
   "OrderedCommSemiring.toOrderedSemiring",
   "SubNegMonoid.toAddMonoid",
   "Int.instSemiringInt",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "NonAssocSemiring.toNatCast",
   "HMul.hMul",
   "Bool",
   "instMulNat",
   "NegZeroClass.toZero"],
  "name": "EisensteinSeries.square_size",
  "constType":
  "∀ (n : ℕ), Finset.card (EisensteinSeries.square (↑n + 1)) = 8 * (n + 1)",
  "constCategory": "Theorem"},
 {"references":
  ["Lattice.toInf",
   "Lattice",
   "Lattice.le_inf",
   "Lattice.toSemilatticeSup",
   "Lattice.inf_le_right",
   "Lattice.inf_le_left",
   "SemilatticeInf",
   "SemilatticeSup.toPartialOrder",
   "SemilatticeInf.mk"],
  "name": "Lattice.toSemilatticeInf",
  "constType": "{α : Type u} → [self : Lattice α] → SemilatticeInf α",
  "constCategory": "Definition"},
 {"references":
  ["SecondCountableTopology",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "secondCountable_of_proper",
   "Real.pseudoMetricSpace",
   "UniformSpace.toTopologicalSpace",
   "instProperSpaceRealPseudoMetricSpace"],
  "name":
  "instSecondCountableTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpace",
  "constType": "SecondCountableTopology ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_one",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "SubNegMonoid.toNeg",
   "neg_zero",
   "Distrib.rightDistribClass",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Int.cast_add",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Exists.casesOn",
   "AddGroupWithOne.toAddGroup",
   "Nat.cast_zero",
   "Eq",
   "Int.instInhabitedInt",
   "Int.eq_nat_or_neg",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "Int.cast_neg",
   "HasDistribNeg.toInvolutiveNeg",
   "Nat",
   "NonAssocRing.toNonAssocSemiring",
   "Eq.trans",
   "Int.instCommRingInt",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Or",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "MulOneClass.toOne",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Std.Logic._auxLemma.32",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Or.casesOn",
   "Int.cast_ofNat",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.cast_zero",
   "instHMul",
   "Nat.rec",
   "NonAssocRing.toIntCast",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "Int.cast",
   "Eq.mp",
   "CommRing.toRing",
   "congr",
   "congrArg",
   "Int",
   "AddCommGroupWithOne.toAddGroupWithOne",
   "congrFun",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Exists",
   "NonAssocRing",
   "NonAssocRing.toAddCommGroupWithOne",
   "instOfNatInt",
   "AddGroupWithOne.toIntCast",
   "CommRing.toNonUnitalCommRing",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "MulZeroClass.zero_mul",
   "AddMonoid.toAddZeroClass",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "add_mul",
   "Zero.toOfNat0",
   "one_mul",
   "AddMonoidWithOne.toNatCast",
   "InvolutiveNeg.toNeg",
   "forall_congr",
   "AddMonoid.toAddSemigroup",
   "Nat.cast_succ",
   "AddMonoid.toZero",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "Int.instNegInt",
   "neg_mul",
   "Eq.symm",
   "Nat.succ",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "instNonempty",
   "id",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Int.instMulInt",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toNeg",
   "One.toOfNat1",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "CommRing.toCommSemiring",
   "Eq.ndrec",
   "instNatCastInt",
   "SubtractionMonoid.toSubNegMonoid",
   "Mathlib.Algebra.Group.Basic._auxLemma.14",
   "SubNegMonoid.toAddMonoid",
   "HMul.hMul",
   "Ring.toAddCommGroup",
   "NegZeroClass.toZero",
   "neg_add_rev"],
  "name": "Int.cast_mul",
  "constType":
  "∀ {α : Type u_1} [inst : NonAssocRing α] (m n : ℤ), ↑(m * n) = ↑m * ↑n",
  "constCategory": "Theorem"},
 {"references": ["Rat", "RatCast.ratCast", "RatCast"],
  "name": "Rat.cast",
  "constType": "{K : Type u} → [inst : RatCast K] → ℚ → K",
  "constCategory": "Definition"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Invertible.congr",
   "Semiring.toMonoidWithZero",
   "NonAssocSemiring.toMulZeroOneClass",
   "Invertible",
   "Ring.toNonAssocRing",
   "True",
   "Semiring.toNatCast",
   "invertibleOne",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Ring.toIntCast",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "Mathlib.Meta.NormNum.IsRat.to_isInt.match_1",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocRing.toMul",
   "Invertible.invOf",
   "Ring.toAddGroupWithOne",
   "Mathlib.Meta.NormNum.IsRat",
   "One.toOfNat1",
   "invOf_one'",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toSemiring",
   "Monoid.toMulOneClass",
   "Semiring.toOne",
   "instHMul",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "Int.cast",
   "letFun",
   "HMul.hMul",
   "mul_one",
   "congrArg",
   "Int",
   "congrFun"],
  "name": "Mathlib.Meta.NormNum.IsRat.to_isInt",
  "constType":
  "∀ {α : Type u_1} [inst : Ring α] {a : α} {n : ℤ}, Mathlib.Meta.NormNum.IsRat a n 1 → Mathlib.Meta.NormNum.IsInt a n",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Membership.mem",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.12",
   "Prod.snd",
   "Eq.refl",
   "Finset.instMembershipFinset",
   "Exists.intro",
   "Prod.fst",
   "Nat.instMaxNat",
   "implies_congr",
   "True",
   "Eq",
   "And",
   "Nat.cast",
   "of_eq_true",
   "instNatCastInt",
   "forall_congr",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.10",
   "Finset",
   "Max.max",
   "congr",
   "Prod",
   "ExistsUnique",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.11",
   "Nat",
   "congrArg",
   "EisensteinSeries.square",
   "Eq.trans",
   "Int",
   "Int.natAbs"],
  "name": "EisensteinSeries.squares_cover_all",
  "constType": "∀ (y : ℤ × ℤ), ∃! i, y ∈ EisensteinSeries.square ↑i",
  "constCategory": "Theorem"},
 {"references":
  ["NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "NontriviallyNormedField.toNormedField",
   "Set",
   "PseudoMetricSpace.toUniformSpace",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "SeminormedRing.toPseudoMetricSpace",
   "HasDerivAtFilter",
   "NormedField.toNormedCommRing",
   "UniformSpace.toTopologicalSpace",
   "nhdsWithin",
   "NormedSpace"],
  "name": "HasDerivWithinAt",
  "constType":
  "{𝕜 : Type u} →\n  [inst : NontriviallyNormedField 𝕜] →\n    {F : Type v} → [inst_1 : NormedAddCommGroup F] → [inst : NormedSpace 𝕜 F] → (𝕜 → F) → F → Set 𝕜 → 𝕜 → Prop",
  "constCategory": "Definition"},
 {"references":
  ["DistribMulAction.mk",
   "Semiring.toMonoidWithZero",
   "AddCommGroup.toAddCommMonoid",
   "AddCommMonoid.toAddMonoid",
   "AddCommGroup.intModule.proof_3",
   "AddCommGroup.intModule.proof_6",
   "AddCommGroup.intModule.proof_1",
   "SubNegMonoid.SMulInt",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.intModule.proof_2",
   "MonoidWithZero.toMonoid",
   "MulAction.mk",
   "AddCommGroup.intModule.proof_5",
   "Int.instSemiringInt",
   "AddCommGroup.toAddGroup",
   "Module",
   "AddCommGroup",
   "Int",
   "Module.mk",
   "AddCommGroup.intModule.proof_4"],
  "name": "AddCommGroup.intModule",
  "constType": "(M : Type u_5) → [inst : AddCommGroup M] → Module ℤ M",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "Nat.le",
   "Fin.ofNat'",
   "instDecidableEqFin",
   "Nat.canonicallyOrderedCommSemiring",
   "AddCommMonoid.toAddMonoid",
   "Fin.fintype",
   "Zero.toOfNat0",
   "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
   "Int.mul",
   "Matrix.SpecialLinearGroup",
   "Prod.mk",
   "lcProof",
   "Matrix",
   "AddMonoid.toZero",
   "instOfNatNat",
   "Prod",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Nat",
   "Int.add",
   "Int",
   "Nat.succ",
   "Fin",
   "Int.instCommRingInt",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "EisensteinSeries.MoebiusPerm._cstage1",
  "constType": "Matrix.SpecialLinearGroup (Fin 2) ℤ → ℤ × ℤ → ℤ × ℤ",
  "constCategory": "Definition"},
 {"references":
  ["CommSemiring.toSemiring",
   "Monoid",
   "OfNat.ofNat",
   "Matrix.SpecialLinearGroup.instPowSpecialLinearGroupNat",
   "Function.Injective.monoid",
   "Subtype.val",
   "Matrix.semiring",
   "Semiring.toMonoidWithZero",
   "Matrix.SpecialLinearGroup.hasMul",
   "One.toOfNat1",
   "Matrix.SpecialLinearGroup.monoid.proof_1",
   "CommRing",
   "Matrix.SpecialLinearGroup.hasOne",
   "Eq",
   "Semiring.toOne",
   "Matrix.det",
   "CommRing.toCommSemiring",
   "Fintype",
   "Matrix.SpecialLinearGroup",
   "Matrix.SpecialLinearGroup.monoid.proof_2",
   "DecidableEq",
   "MonoidWithZero.toMonoid",
   "Matrix.SpecialLinearGroup.monoid.proof_4",
   "Matrix",
   "Matrix.SpecialLinearGroup.monoid.proof_3"],
  "name": "Matrix.SpecialLinearGroup.monoid",
  "constType":
  "{n : Type u} →\n  [inst : DecidableEq n] →\n    [inst_1 : Fintype n] → {R : Type v} → [inst_2 : CommRing R] → Monoid (Matrix.SpecialLinearGroup n R)",
  "constCategory": "Definition"},
 {"references":
  ["RingHom.instRingHomClass",
   "CommSemiring.toSemiring",
   "RingHom",
   "OfNat.ofNat",
   "instHSMul",
   "Real",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "instDecidableEqFin",
   "NonUnitalRingHomClass.toMulHomClass",
   "UpperHalfPlane.SLAction",
   "rfl",
   "CommRing",
   "Matrix.SpecialLinearGroup.monoid",
   "Eq",
   "Zero.toOfNat0",
   "Subtype.property",
   "RingHomClass.toNonUnitalRingHomClass",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Complex.instField",
   "UpperHalfPlane.mk",
   "Matrix",
   "HSMul.hSMul",
   "Algebra",
   "UpperHalfPlane",
   "instOfNatNat",
   "HDiv.hDiv",
   "Nat",
   "NeZero.succ",
   "Complex.ofReal'",
   "instHDiv",
   "Real.instLTReal",
   "instHAdd",
   "Matrix.semiring",
   "algebraMap",
   "UpperHalfPlane.coe",
   "MulHomClass.toFunLike",
   "Fin.fintype",
   "FunLike.coe",
   "Complex.instAddComplex",
   "NonUnitalNonAssocSemiring.toMul",
   "Complex.im",
   "Real.instZeroReal",
   "Matrix.SpecialLinearGroup.coeToGL",
   "CommRing.toCommSemiring",
   "instHMul",
   "MulAction.toSMul",
   "Matrix.SpecialLinearGroup",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Units.val",
   "Real.semiring",
   "Fin.instOfNatFin",
   "HMul.hMul",
   "Complex",
   "Field.toDiv",
   "Complex.instMulComplex",
   "Fin"],
  "name": "UpperHalfPlane.specialLinearGroup_apply",
  "constType":
  "∀ {R : Type u_1} [inst : CommRing R] [inst_1 : Algebra R ℝ] (g : Matrix.SpecialLinearGroup (Fin 2) R)\n  (z : UpperHalfPlane),\n  g • z =\n    UpperHalfPlane.mk\n      ((↑((algebraMap R ℝ) (↑↑g 0 0)) * ↑z + ↑((algebraMap R ℝ) (↑↑g 0 1))) /\n        (↑((algebraMap R ℝ) (↑↑g 1 0)) * ↑z + ↑((algebraMap R ℝ) (↑↑g 1 1))))\n      (_ : 0 < (↑(g • z)).im)",
  "constCategory": "Theorem"},
 {"references":
  ["instHMul",
   "NonUnitalNonAssocRing.toMul",
   "NormedDivisionRing.toNormedRing",
   "Real.instMulReal",
   "Real",
   "NormedDivisionRing.toNorm",
   "HMul.hMul",
   "Norm.norm",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "NormedDivisionRing.norm_mul'",
   "NormedDivisionRing",
   "NormedRing.toRing",
   "Ring.toNonAssocRing",
   "Eq"],
  "name": "norm_mul",
  "constType":
  "∀ {α : Type u_1} [inst : NormedDivisionRing α] (a b : α), ‖a * b‖ = ‖a‖ * ‖b‖",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "UpperHalfPlane.instMulActionSubtypeGeneralLinearGroupFinOfNatNatInstOfNatNatRealInstDecidableEqFinFintypeToCommRingToStrictOrderedCommRingLinearOrderedCommRingMemSubgroupInstGroupUnitsMatrixToMonoidToMonoidWithZeroSemiringToSemiringToCommSemiringInstMembershipInstSetLikeSubgroupGLPosUpperHalfPlaneToMonoidToMonoidToDivInvMonoidToSubmonoid",
   "Real",
   "Semiring.toMonoidWithZero",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "instDecidableEqFin",
   "Matrix.GeneralLinearGroup",
   "CommRing",
   "SetLike.instMembership",
   "Matrix.SpecialLinearGroup.monoid",
   "MonoidWithZero.toMonoid",
   "Subgroup.toSubmonoid",
   "Matrix",
   "Algebra",
   "Subgroup",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "MulAction",
   "Subtype",
   "Submonoid.toMulOneClass",
   "MulAction.compHom",
   "Submonoid.toMonoid",
   "Membership.mem",
   "Matrix.SpecialLinearGroup.map",
   "algebraMap",
   "Matrix.semiring",
   "MonoidHom.comp",
   "Fin.fintype",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "CommRing.toCommSemiring",
   "Units.instGroupUnits",
   "Matrix.SpecialLinearGroup",
   "StrictOrderedCommRing.toCommRing",
   "Real.linearOrderedCommRing",
   "Real.semiring",
   "Matrix.SpecialLinearGroup.toGLPos",
   "Matrix.GLPos",
   "Group.toDivInvMonoid",
   "Fin",
   "Subgroup.instSetLikeSubgroup"],
  "name": "UpperHalfPlane.SLAction",
  "constType":
  "{R : Type u_1} →\n  [inst : CommRing R] → [inst_1 : Algebra R ℝ] → MulAction (Matrix.SpecialLinearGroup (Fin 2) R) UpperHalfPlane",
  "constCategory": "Definition"},
 {"references":
  ["_private.Mathlib.Data.Real.Basic.0.Real.add", "Real", "Add", "Add.mk"],
  "name": "Real.instAddReal",
  "constType": "Add ℝ",
  "constCategory": "Definition"},
 {"references":
  ["AddCommSemigroup.toAddCommMagma",
   "ZeroLEOneClass",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "instHAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "AddCommMagma.toAdd",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "instLTNat",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "Nat.one_lt_cast",
   "PartialOrder",
   "AddCommMonoidWithOne.toAddCommMonoid",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "CharZero",
   "AddMonoidWithOne.toOne",
   "Preorder.toLT",
   "propext",
   "LT.lt",
   "AddMonoid.toZero",
   "CovariantClass",
   "instOfNatNat",
   "Nat",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCommMonoidWithOne"],
  "name": "Mathlib.Data.Nat.Cast.Order._auxLemma.10",
  "constType":
  "∀ {α : Type u_1} [inst : AddCommMonoidWithOne α] [inst_1 : PartialOrder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] [inst_3 : ZeroLEOneClass α]\n  [inst_4 : CharZero α] {n : ℕ}, (1 < ↑n) = (1 < n)",
  "constCategory": "Theorem"},
 {"references":
  ["PseudoMetricSpace.toDist",
   "setOf",
   "Metric.closedBall",
   "Real.instLEReal",
   "Set",
   "Real",
   "Eq.refl",
   "LE.le",
   "PseudoMetricSpace",
   "Dist.dist",
   "Eq"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.Metric.closedBall._eq_1",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] (x : α) (ε : ℝ), Metric.closedBall x ε = {y | dist y x ≤ ε}",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "AddMonoidWithOne.toAddMonoid",
   "CommRing.toRing",
   "Int",
   "Int.instCommRingInt",
   "AddMonoid"],
  "name": "Int.instAddMonoidInt",
  "constType": "AddMonoid ℤ",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup.toMetricSpace",
   "NormedAddCommGroup.toAddCommGroup",
   "NormedAddCommGroup",
   "NormedAddCommGroup.dist_eq",
   "AddCommGroup.toAddGroup",
   "NormedAddGroup",
   "NormedAddCommGroup.toNorm",
   "NormedAddGroup.mk"],
  "name": "NormedAddCommGroup.toNormedAddGroup",
  "constType":
  "{E : Type u_6} → [inst : NormedAddCommGroup E] → NormedAddGroup E",
  "constCategory": "Definition"},
 {"references": [],
  "name": "letFun",
  "constType":
  "{α : Sort u} → {β : α → Sort v} → (v : α) → ((x : α) → β x) → β v",
  "constCategory": "Definition"},
 {"references":
  ["Real.instDivisionRingReal",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "inferInstance",
   "Real.instLinearOrderedFieldReal",
   "CommRing.toNonUnitalCommRing",
   "Real",
   "LinearOrderedField.toTopologicalDivisionRing",
   "Real.commRing",
   "PseudoMetricSpace.toUniformSpace",
   "TopologicalDivisionRing.toTopologicalRing",
   "Real.pseudoMetricSpace",
   "TopologicalRing",
   "UniformSpace.toTopologicalSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "instOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderReal"],
  "name":
  "instTopologicalRingRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceToNonUnitalNonAssocRingToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
  "constType": "TopologicalRing ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "DecidablePred",
   "And",
   "propext",
   "Finset",
   "Finset.mem_filter",
   "Finset.filter",
   "Finset.instMembershipFinset",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.3",
  "constType":
  "∀ {α : Type u_1} {p : α → Prop} [inst : DecidablePred p] {s : Finset α} {a : α}, (a ∈ Finset.filter p s) = (a ∈ s ∧ p a)",
  "constCategory": "Theorem"},
 {"references":
  ["NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Nat.cast_mul",
   "Eq",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonAssocSemiring.toNatCast",
   "HMul.hMul",
   "instMulNat",
   "Nat",
   "Mathlib.Meta.NormNum.isNat_mul.match_1",
   "Nat.mul",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.symm"],
  "name": "Mathlib.Meta.NormNum.isNat_mul",
  "constType":
  "∀ {α : Type u_1} [inst : Semiring α] {f : α → α → α} {a b : α} {a' b' c : ℕ},\n  f = HMul.hMul →\n    Mathlib.Meta.NormNum.IsNat a a' →\n      Mathlib.Meta.NormNum.IsNat b b' → Nat.mul a' b' = c → Mathlib.Meta.NormNum.IsNat (a * b) c",
  "constCategory": "Theorem"},
 {"references": ["OrderedRing", "PartialOrder"],
  "name": "OrderedRing.toPartialOrder",
  "constType": "{α : Type u} → [self : OrderedRing α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "instHMul",
   "OfNat.ofNat",
   "Subtype.val",
   "HMul.hMul",
   "Preorder",
   "Mul",
   "LE.le",
   "Subtype.mk",
   "Subtype",
   "Preorder.toLE",
   "MulPosMono",
   "CovariantClass.elim"],
  "name": "mul_le_mul_of_nonneg_right",
  "constType":
  "∀ {α : Type u_1} {a b c : α} [inst : Mul α] [inst_1 : Zero α] [inst_2 : Preorder α] [inst_3 : MulPosMono α],\n  b ≤ c → 0 ≤ a → b * a ≤ c * a",
  "constCategory": "Theorem"},
 {"references":
  ["Int.cast_one",
   "Distrib.toAdd",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "EisensteinSeries.AbsEisenstein_bound",
   "upper_half_plane_isOpen",
   "DivInvMonoid.Pow",
   "Iff.mpr",
   "Mathlib.Meta.NormNum.isInt_add",
   "Semiring.toNatCast",
   "Complex.Complex.addGroupWithOne",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "Set.Elem",
   "le_of_not_gt",
   "UpperHalfPlane.upperHalfSpace",
   "HDiv.hDiv",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "instOfNat",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Subtype",
   "Complex.instOneComplex",
   "HPow.hPow",
   "instHSub",
   "Complex.abs",
   "Complex.instSubComplex",
   "instHDiv",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "eq_of_heq",
   "PseudoMetricSpace.toUniformSpace",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "SubadditiveHomClass.toFunLike",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "eq_true",
   "AddMonoidWithOne.toOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "LinearOrder.toPartialOrder",
   "Int",
   "congrFun",
   "AddZeroClass.toAdd",
   "Exists",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "HEq",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Subtype.val",
   "Set",
   "Real",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Int.rawCast",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "EisensteinSeries.rfunct",
   "AddMonoid.toAddZeroClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "TopologicalSpace.Opens.mk",
   "True",
   "Mathlib.Tactic.Ring.sub_pf",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "FunLike",
   "Int.add_one_le_iff",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "UniformSpace.toTopologicalSpace",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Real.instLTReal",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "Neg.neg",
   "Int.cast_sub",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "Real.instDivisionRingReal",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "EisensteinSeries.rfunctbound",
   "instNatCastInt",
   "Bool.false",
   "Real.instPreorderReal",
   "letFun",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.mul_congr",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "AddGroupWithOne.toSub",
   "AbsoluteValue",
   "Real.instLEReal",
   "Real.instMulReal",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Exists.casesOn",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "AbsEisenstein_tsum",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Ring.toIntCast",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "le_trans",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "neg_neg_of_pos",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Int.instCommSemiringInt",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Real.orderedSemiring",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.instLTInt",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Set.instMembershipSet",
   "Int.instAddInt",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.mul_zero",
   "Int.instAddGroupInt",
   "Mathlib.Tactic.Ring.of_eq",
   "HEq.refl",
   "of_eq_true",
   "AddCancelMonoid.toIsCancelAdd",
   "Int.cast",
   "Eq.mp",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "StrictOrderedRing.toRing",
   "TopologicalSpace.Opens",
   "Real.instLinearOrderedFieldReal",
   "Int.instSubInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "CanLift.prf",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "SeminormedRing.toPseudoMetricSpace",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Int.linearOrderedCommRing",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "LinearOrderedField.toDiv",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "outParam",
   "Int.instRingInt",
   "instHPow",
   "Preorder.toLT",
   "LE",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "Linarith.mul_neg",
   "instOfNatNat",
   "Int.instLinearOrderInt",
   "NeZero.charZero_one",
   "add_lt_of_neg_of_le",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "eq_self",
   "Membership.mem",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "Real.instZeroReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "StrictOrderedSemiring.to_charZero",
   "EisensteinSeries.lbpoint",
   "OrderedCommSemiring.toOrderedSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "HMul.hMul",
   "riemannZeta",
   "Complex",
   "Eq.casesOn",
   "Bool",
   "NegZeroClass.toZero",
   "HMul",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.AbsEisenstein_bound_unifomly_on_stip",
  "constType":
  "∀ (k : ℤ),\n  3 ≤ k →\n    ∀ (A B : ℝ) (hb : 0 < B) (z : ↑(EisensteinSeries.upperHalfSpaceSlice A B)),\n      AbsEisenstein_tsum k ↑z ≤\n        8 / EisensteinSeries.rfunct (EisensteinSeries.lbpoint A B hb) ^ k * Complex.abs (riemannZeta (↑k - 1))",
  "constCategory": "Theorem"},
 {"references": ["String", "Lean.SourceInfo", "Lean.Syntax"],
  "name": "Lean.Syntax.atom",
  "constType": "Lean.SourceInfo → String → Lean.Syntax",
  "constCategory": "Other"},
 {"references":
  ["MulHomClass",
   "MonoidHomClass",
   "outParam",
   "MulOneClass.toMul",
   "MulOneClass"],
  "name": "MonoidHomClass.toMulHomClass",
  "constType":
  "{F : Type u_9} →\n  {M : outParam (Type u_10)} →\n    {N : outParam (Type u_11)} →\n      [inst : MulOneClass M] → [inst_1 : MulOneClass N] → [self : MonoidHomClass F M N] → MulHomClass F M N",
  "constCategory": "Definition"},
 {"references":
  ["Decidable.decide",
   "Bool.false",
   "decide_eq_true",
   "Decidable",
   "of_decide_eq_true.match_1",
   "Not",
   "Bool",
   "absurd",
   "ne_false_of_eq_true",
   "Eq"],
  "name": "of_decide_eq_false",
  "constType": "∀ {p : Prop} [inst : Decidable p], decide p = false → ¬p",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "PartialOrder.toPreorder",
   "Nat.linearOrderedCommMonoidWithZero.proof_3",
   "LinearOrderedCommSemiring.toMin",
   "Nat.linearOrderedCommMonoidWithZero.proof_1",
   "AddCommMonoid.toAddMonoid",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.max_def",
   "Preorder.toLE",
   "OrderedCommMonoid.mk",
   "inferInstance",
   "LinearOrderedCommSemiring.le_total",
   "LinearOrderedCommSemiring.min_def",
   "Nat.mul_le_mul_left",
   "AddMonoid.toZero",
   "LinearOrderedCommSemiring.compare_eq_compareOfLessAndEq",
   "CommSemiring.toCommMonoidWithZero",
   "Nat",
   "LinearOrderedCommSemiring.toMax",
   "CommMonoidWithZero.toCommMonoid",
   "LinearOrderedCommMonoidWithZero",
   "Nat.linearOrderedCommMonoidWithZero.proof_2",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedCommSemiring.toOrd",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "CommMonoidWithZero",
   "LinearOrderedCommSemiring.decidableEq",
   "LinearOrderedCommSemiring.decidableLE",
   "LinearOrderedCommSemiring",
   "LinearOrderedCommMonoidWithZero.mk",
   "Nat.commSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "LinearOrderedCommMonoid.mk",
   "LinearOrderedCommSemiring.decidableLT",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Nat.linearOrderedCommSemiring"],
  "name": "Nat.linearOrderedCommMonoidWithZero",
  "constType": "LinearOrderedCommMonoidWithZero ℕ",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "Monoid",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "instAddNat",
   "instHAdd",
   "HAdd.hAdd",
   "Eq.refl",
   "Monoid.toMulOneClass",
   "pow_one",
   "Eq",
   "instHMul",
   "Eq.mpr",
   "Eq.ndrec",
   "instHPow",
   "Monoid.toNatPow",
   "HMul.hMul",
   "pow_succ",
   "instOfNatNat",
   "Nat",
   "id"],
  "name": "pow_two",
  "constType": "∀ {M : Type u} [inst : Monoid M] (a : M), a ^ 2 = a * a",
  "constCategory": "Theorem"},
 {"references": ["Or", "Iff", "Or.comm"],
  "name": "or_comm",
  "constType": "∀ {a b : Prop}, a ∨ b ↔ b ∨ a",
  "constCategory": "Theorem"},
 {"references":
  ["False.elim", "False", "Decidable", "Not", "Decidable.byCases", "id"],
  "name": "Decidable.byContradiction",
  "constType": "∀ {p : Prop} [dec : Decidable p], (¬p → False) → p",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Set",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "TendstoUniformlyOn",
   "Filter.Eventually",
   "Eq",
   "GT.gt",
   "Set.instMembershipSet",
   "Dist.dist",
   "Zero.toOfNat0",
   "Real.instZeroReal",
   "Metric.tendstoUniformlyOn_iff",
   "PseudoMetricSpace.toDist",
   "propext",
   "LT.lt",
   "Filter",
   "PseudoMetricSpace"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.22",
  "constType":
  "∀ {α : Type u} {β : Type v} {ι : Type u_2} [inst : PseudoMetricSpace α] {F : ι → β → α} {f : β → α} {p : Filter ι}\n  {s : Set β}, TendstoUniformlyOn F f p s = ∀ ε > 0, ∀ᶠ (n : ι) in p, ∀ x ∈ s, dist (f x) (F n x) < ε",
  "constCategory": "Theorem"},
 {"references":
  ["not_lt",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Preorder.toLT",
   "propext",
   "LT.lt",
   "LinearOrder.toPartialOrder",
   "Not",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Mathlib.Init.Order.Defs._auxLemma.1",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b : α}, (¬a < b) = (b ≤ a)",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "OfNat.ofNat",
   "ZeroHomClass.toFunLike",
   "ZeroHomClass",
   "FunLike.coe",
   "ZeroHomClass.map_zero",
   "Eq"],
  "name": "map_zero",
  "constType":
  "∀ {M : Type u_3} {N : Type u_4} {F : Type u_8} [inst : Zero M] [inst_1 : Zero N] [inst_2 : ZeroHomClass F M N] (f : F),\n  f 0 = 0",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "LinearOrderedRing",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["OfNat.ofNat",
   "Iff",
   "instOfNatInt",
   "instHAdd",
   "Iff.rfl",
   "LT.lt",
   "HAdd.hAdd",
   "LE.le",
   "Int",
   "Int.instLTInt",
   "Int.instLEInt",
   "Int.instAddInt"],
  "name": "Int.add_one_le_iff",
  "constType": "∀ {a b : ℤ}, a + 1 ≤ b ↔ a < b",
  "constCategory": "Theorem"},
 {"references":
  ["EStateM.Result.ok",
   "Lean.Syntax.node2",
   "Lean.Syntax.isOfKind",
   "Lean.Syntax.getArgs",
   "Lean.Name.num",
   "Unit",
   "Lean.Name.mkStr4",
   "Lean.Syntax.atom",
   "EStateM.Result",
   "Lean.Syntax.getArg",
   "Lean.Syntax",
   "Lean.Syntax.node",
   "EStateM.Result.error",
   "Array",
   "Array.mkEmpty",
   "PUnit.unit",
   "Bool.casesOn",
   "Lean.Syntax.node1",
   "Bool.false",
   "Array.append",
   "Lean.replaceRef",
   "Lean.SourceInfo",
   "Lean.SourceInfo.fromRef",
   "Bool",
   "Lean.Name",
   "Lean.Name.anonymous",
   "Lean.PrettyPrinter.Unexpander",
   "Lean.Name.str"],
  "name":
  "EisensteinSeries._aux_Modformsported_ForMathlib_EisensteinSeries_mdifferentiable___unexpand_EisensteinSeries_holExtn_1._cstage1",
  "constType": "Lean.PrettyPrinter.Unexpander",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "AddCommGroup.toAddCommMonoid",
   "Modformsported.ModForms.WeierstrassMTest._auxLemma.4",
   "exists_true_iff_nonempty",
   "Iff.mpr",
   "Dist.dist",
   "instTopologicalAddGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstAddGroupReal",
   "SubNegMonoid.toSub",
   "Real.linearOrder",
   "OrderTopology.to_orderClosedTopology",
   "SemilatticeSup.toSup",
   "Finset.range",
   "Filter.Tendsto",
   "Real.norm_of_nonneg",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Summable",
   "sum_sub_tsum_nat_add",
   "Nat.strictOrderedSemiring",
   "instHSub",
   "summable_iff_vanishing_norm",
   "Complex.instSubComplex",
   "Complex.abs",
   "instDistribLattice",
   "SeminormedAddGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.normedCommRing",
   "SubadditiveHomClass.toFunLike",
   "eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "propext",
   "LT.lt",
   "instInhabitedNat",
   "Norm.norm",
   "Modformsported.ModForms.WeierstrassMTest._auxLemma.7",
   "congrFun",
   "abs_tsum",
   "Exists",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Real",
   "GE.ge",
   "dist_zero_right",
   "Eq.refl",
   "Exists.intro",
   "M_test_summable",
   "SeminormedAddGroup.toAddGroup",
   "True",
   "Abs.abs",
   "Metric.tendstoUniformly_iff",
   "Modformsported.ModForms.WeierstrassMTest._auxLemma.5",
   "MetricSpace.toMetrizableSpace",
   "AbsoluteValue.subadditiveHomClass",
   "Real.instAddCommGroupReal",
   "Complex.instSemiringComplex",
   "TendstoUniformly",
   "SeminormedAddCommGroup.toAddCommGroup",
   "Finset",
   "UniformSpace.toTopologicalSpace",
   "Lattice.toSemilatticeSup",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "instNonempty",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Neg.toHasAbs",
   "Real.instLTReal",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "Finset.sum",
   "Disjoint",
   "FunLike.coe",
   "dist_eq_norm",
   "NormedField.toNormedCommRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "LE.le",
   "AbsoluteValue.nonneg",
   "Modformsported.ModForms.WeierstrassMTest._auxLemma.3",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "tsum_le_tsum",
   "Real.instPreorderReal",
   "letFun",
   "Summable.of_nonneg_of_le",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Real.instAddCommMonoidReal",
   "NegZeroClass.toNeg",
   "Real.orderedAddCommGroup",
   "tsum_nonneg",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "AbsoluteValue",
   "Real.instLEReal",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "gt_of_gt_of_ge",
   "Exists.casesOn",
   "implies_congr",
   "Preorder.toLE",
   "Nonempty",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "Iff.mp",
   "HasSum",
   "norm_norm",
   "Filter",
   "le_trans",
   "Nat",
   "Eq.trans",
   "SemilatticeSup.toPartialOrder",
   "TopologicalSpace.t2Space_of_metrizableSpace",
   "Modformsported.ModForms.WeierstrassMTest._auxLemma.1",
   "Std.Logic._auxLemma.32",
   "Nat.instLatticeNat",
   "Filter.Eventually",
   "Real.orderedSemiring",
   "instOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderReal",
   "NonUnitalNonAssocSemiring.toDistrib",
   "DistribLattice.toLattice",
   "Real.orderedAddCommMonoid",
   "of_eq_true",
   "Real.metricSpace",
   "Eq.mp",
   "Real.instAddGroupReal",
   "SeminormedAddCommGroup.toSeminormedAddGroup",
   "Filter.atTop",
   "congrArg",
   "Classical.choose",
   "instCompleteSpaceRealToUniformSpacePseudoMetricSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "SeminormedAddGroup.toNorm",
   "summable_nat_add_iff",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "abs_abs",
   "instLENat",
   "forall_congr",
   "SeminormedAddCommGroup.toNorm",
   "id",
   "Modformsported.ModForms.WeierstrassMTest._auxLemma.6",
   "funext",
   "instAddNat",
   "instHAdd",
   "nhds",
   "HSub.hSub",
   "Real.pseudoMetricSpace",
   "tsum",
   "Finset.partialOrder",
   "AddGroup.toSubNegMonoid",
   "GT.gt",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "Real.instZeroReal",
   "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
   "PseudoMetricSpace.toDist",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedSemiring.toSemiring",
   "tendsto_sum_nat_add",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "NegZeroClass.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name": "M_test_uniform",
  "constType":
  "∀ {α : Type u},\n  Nonempty α →\n    ∀ (F : ℕ → α → ℂ) (M : ℕ → ℝ),\n      (∀ (n : ℕ) (a : α), Complex.abs (F n a) ≤ M n) →\n        Summable M →\n          TendstoUniformly (fun n a => Finset.sum (Finset.range n) fun i => F i a) (fun a => ∑' (n : ℕ), F n a)\n            Filter.atTop",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "AddZeroClass.toAdd",
   "Distrib.toAdd",
   "instHSub",
   "Ring.toAddGroupWithOne",
   "SubNegMonoid.toNeg",
   "instHAdd",
   "HAdd.hAdd",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "HSub.hSub",
   "sub_eq_add_neg",
   "Neg.neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddMonoid.toAddZeroClass",
   "AddGroup.toSubNegMonoid",
   "True",
   "AddGroupWithOne.toAddGroup",
   "Ring.toNonAssocRing",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "SubNegMonoid.toSub",
   "Ring.toNeg",
   "Eq.ndrec",
   "of_eq_true",
   "SubNegMonoid.toAddMonoid",
   "Ring",
   "Ring.toSub",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.sub_pf",
  "constType":
  "∀ {R : Type u_1} [inst : Ring R] {a b c d : R}, -b = c → a + c = d → a - b = d",
  "constCategory": "Theorem"},
 {"references": ["String", "Lean.Name", "Lean.Name.anonymous", "Lean.Name.str"],
  "name": "Lean.Name.mkStr1",
  "constType": "String → Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "MonoidWithZero.toMulZeroOneClass",
   "instHMul",
   "OfNat.ofNat",
   "Or",
   "CancelMonoidWithZero",
   "propext",
   "HMul.hMul",
   "MonoidWithZero.toZero",
   "CancelMonoidWithZero.toMonoidWithZero",
   "mul_eq_mul_right_iff",
   "MulZeroOneClass.toMulZeroClass",
   "MulZeroClass.toMul",
   "Eq"],
  "name": "Mathlib.Algebra.GroupWithZero.Basic._auxLemma.3",
  "constType":
  "∀ {M₀ : Type u_2} [inst : CancelMonoidWithZero M₀] {a b c : M₀}, (a * c = b * c) = (a = b ∨ c = 0)",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "add_lt_add_iff_right",
   "OfNat.ofNat",
   "Iff.rfl",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "LT",
   "AddGroup.toSubtractionMonoid",
   "Eq.refl",
   "sub_eq_add_neg",
   "AddMonoid.toAddZeroClass",
   "AddGroup.covconv_swap",
   "Eq",
   "Zero.toOfNat0",
   "Function.swap",
   "SubNegMonoid.toSub",
   "AddZeroClass.toZero",
   "zero_add",
   "Eq.mpr",
   "Iff",
   "AddGroup",
   "Eq.symm",
   "neg_add_cancel_right",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "instHSub",
   "instHAdd",
   "HSub.hSub",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "Eq.ndrec",
   "propext",
   "LT.lt",
   "SubNegMonoid.toAddMonoid",
   "CovariantClass",
   "NegZeroClass.toZero"],
  "name": "sub_pos",
  "constType":
  "∀ {α : Type u} [inst : AddGroup α] [inst_1 : LT α]\n  [inst_2 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x < x_1] {a b : α}, 0 < a - b ↔ b < a",
  "constCategory": "Theorem"},
 {"references":
  ["instHSub",
   "OfNat.ofNat",
   "Real",
   "SeminormedAddGroup.toPseudoMetricSpace",
   "HSub.hSub",
   "Eq.refl",
   "AddGroup.toSubtractionMonoid",
   "SeminormedAddGroup.toNorm",
   "SubNegZeroMonoid.toNegZeroClass",
   "SeminormedAddGroup.toAddGroup",
   "AddGroup.toSubNegMonoid",
   "Eq",
   "Dist.dist",
   "Zero.toOfNat0",
   "SubNegZeroMonoid.toSubNegMonoid",
   "SubNegMonoid.toSub",
   "SeminormedAddGroup",
   "Eq.mpr",
   "PseudoMetricSpace.toDist",
   "Eq.ndrec",
   "sub_zero",
   "Norm.norm",
   "dist_eq_norm_sub",
   "NegZeroClass.toZero",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id"],
  "name": "dist_zero_right",
  "constType":
  "∀ {E : Type u_6} [inst : SeminormedAddGroup E] (a : E), dist a 0 = ‖a‖",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "dite",
   "And.left",
   "AddGroupWithOne.toAddGroup",
   "Nat.cast_zero",
   "Eq",
   "Complex.Complex.addGroupWithOne",
   "Eq.mpr",
   "And.right",
   "Iff",
   "Nat.cast",
   "Int.instDecidableEqInt",
   "linear_ne_zero'",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "Nat",
   "Eq.trans",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Ne",
   "Complex.instZeroComplex",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "UpperHalfPlane.coe",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Complex.instAddComplex",
   "Std.Logic._auxLemma.23",
   "Int.cast_zero",
   "Iff.intro",
   "And",
   "instHMul",
   "of_eq_true",
   "Int.cast",
   "Eq.mp",
   "congr",
   "Not",
   "add_zero",
   "congrArg",
   "Int",
   "congrFun",
   "linear_ne_zero''",
   "instOfNatInt",
   "AddGroupWithOne.toIntCast",
   "MulZeroClass.zero_mul",
   "Eq.refl",
   "AddMonoid.toAddZeroClass",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "True",
   "Zero.toOfNat0",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toZero",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "Decidable.byContradiction",
   "Eq.symm",
   "absurd",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Complex.instRingComplex",
   "SubNegZeroMonoid.toNegZeroClass",
   "instDecidableAnd",
   "NormedField.toNormedCommRing",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "letFun",
   "HMul.hMul",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "linear_eq_zero_iff",
  "constType":
  "∀ (c d : ℤ) (z : UpperHalfPlane), ↑c * ↑z + ↑d = 0 ↔ c = 0 ∧ d = 0",
  "constCategory": "Theorem"},
 {"references":
  ["instHSub",
   "AddZeroClass.toAdd",
   "Iff.rfl",
   "instHAdd",
   "SubNegMonoid.toNeg",
   "HAdd.hAdd",
   "HSub.hSub",
   "AddGroup.toSubtractionMonoid",
   "Eq.refl",
   "sub_eq_add_neg",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddMonoid.toAddZeroClass",
   "AddGroup.toSubNegMonoid",
   "Eq",
   "SubNegMonoid.toSub",
   "Eq.mpr",
   "AddGroup",
   "Iff",
   "Eq.ndrec",
   "propext",
   "SubNegMonoid.toAddMonoid",
   "eq_add_neg_iff_add_eq",
   "NegZeroClass.toNeg",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id"],
  "name": "eq_sub_iff_add_eq",
  "constType":
  "∀ {G : Type u_3} [inst : AddGroup G] {a b c : G}, a = b - c ↔ a + c = b",
  "constCategory": "Theorem"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "neg_zero",
   "Real.instMulReal",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.commRing",
   "Real.instAddMonoidReal",
   "div_self_mul_self'",
   "MulZeroClass.mul_zero",
   "Iff.mpr",
   "MulZeroClass.toMul",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "Complex.inv_re",
   "Complex.inv_im",
   "Complex.normSq",
   "LinearOrderedField.toLinearOrderedSemifield",
   "HDiv.hDiv",
   "Real.instInvReal",
   "MonoidWithZeroHom",
   "Eq.trans",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "GroupWithZero.toInv",
   "zero_div",
   "instHDiv",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "DivisionSemiring.toGroupWithZero",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Complex.ext_iff",
   "Complex.im",
   "instHMul",
   "And",
   "of_eq_true",
   "congr",
   "MonoidWithZero.toZero",
   "congrArg",
   "add_zero",
   "Inv.inv",
   "AddCommGroup.toDivisionAddCommMonoid",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "CommRing.toNonUnitalCommRing",
   "Real",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Complex.instInvComplex",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "LinearOrderedField.toDiv",
   "True",
   "Real.instNegReal",
   "Real.instAddCommGroupReal",
   "Zero.toOfNat0",
   "Complex.instSemiringComplex",
   "MulZeroClass.toZero",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.ofReal'",
   "eq_self",
   "MonoidWithZeroHom.monoidWithZeroHomClass",
   "MonoidHomClass.toMulHomClass",
   "instHAdd",
   "Neg.neg",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "GroupWithZero.toMonoidWithZero",
   "Complex.re",
   "Real.instZeroReal",
   "Complex.mk",
   "Real.semiring",
   "HMul.hMul",
   "Semifield.toDivisionSemiring",
   "Complex",
   "NegZeroClass.toNeg",
   "NegZeroClass.toZero",
   "and_self"],
  "name": "Complex.ofReal_inv",
  "constType": "∀ (r : ℝ), ↑r⁻¹ = (↑r)⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "AddZeroClass.toAdd",
   "AbsoluteValue.add_le",
   "PartialOrder.toPreorder",
   "SubNegMonoid.toNeg",
   "AbsoluteValue",
   "HAdd.hAdd",
   "sub_eq_add_neg",
   "neg_add_cancel_left",
   "AddMonoid.toAddZeroClass",
   "Preorder.toLE",
   "AddGroupWithOne.toAddGroup",
   "Eq",
   "AbsoluteValue.subadditiveHomClass",
   "SubNegMonoid.toSub",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "AddMonoid.toAddSemigroup",
   "Ring",
   "Ring.toSub",
   "Eq.trans",
   "id",
   "instHSub",
   "add_assoc",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "AddSemigroup.toAdd",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "HSub.hSub",
   "Neg.neg",
   "FunLike.coe",
   "Ring.toSemiring",
   "SubadditiveHomClass.toFunLike",
   "LE.le",
   "AddGroup.toSubNegMonoid",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OrderedSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Eq.mp",
   "OrderedSemiring.toSemiring",
   "SubNegMonoid.toAddMonoid",
   "congr",
   "congrArg",
   "OrderedSemiring.toPartialOrder"],
  "name": "AbsoluteValue.sub_le",
  "constType":
  "∀ {R : Type u_1} {S : Type u_2} [inst : Ring R] [inst_1 : OrderedSemiring S] (abv : AbsoluteValue R S) (a b c : R),\n  abv (a - c) ≤ abv (a - b) + abv (b - c)",
  "constCategory": "Theorem"},
 {"references": ["Eq.rec", "rfl", "Eq"],
  "name": "congr",
  "constType":
  "∀ {α : Sort u} {β : Sort v} {f₁ f₂ : α → β} {a₁ a₂ : α}, f₁ = f₂ → a₁ = a₂ → f₁ a₁ = f₂ a₂",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Exists",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Real",
   "Set",
   "PseudoMetricSpace.toUniformSpace",
   "HasSubset.Subset",
   "Metric.isOpen_iff",
   "Iff.mpr",
   "Metric.exists_ball_subset_ball",
   "Set.instMembershipSet",
   "GT.gt",
   "Zero.toOfNat0",
   "Real.instZeroReal",
   "And",
   "Set.instHasSubsetSet",
   "Metric.ball",
   "UniformSpace.toTopologicalSpace",
   "IsOpen",
   "PseudoMetricSpace"],
  "name": "Metric.isOpen_ball",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] {x : α} {ε : ℝ}, IsOpen (Metric.ball x ε)",
  "constCategory": "Theorem"},
 {"references": ["Nat.zero", "Inhabited", "Nat", "Inhabited.mk"],
  "name": "instInhabitedNat",
  "constType": "Inhabited ℕ",
  "constCategory": "Definition"},
 {"references": ["Eq"],
  "name": "Function.Injective",
  "constType": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
  "constCategory": "Definition"},
 {"references": ["False", "False.rec"],
  "name": "False.elim",
  "constType": "{C : Sort u} → False → C",
  "constCategory": "Definition"},
 {"references": ["Set", "PartialEquiv"],
  "name": "PartialEquiv.source",
  "constType": "{α : Type u_5} → {β : Type u_6} → PartialEquiv α β → Set α",
  "constCategory": "Definition"},
 {"references":
  ["Array",
   "Lean.Syntax.missing",
   "Lean.SyntaxNodeKind",
   "Lean.Syntax.setKind.match_1",
   "Lean.SourceInfo",
   "Nat",
   "Lean.Syntax",
   "Array.getD"],
  "name": "Lean.Syntax.getArg",
  "constType": "Lean.Syntax → ℕ → Lean.Syntax",
  "constCategory": "Definition"},
 {"references": ["AddCommMagma", "Add"],
  "name": "AddCommMagma.toAdd",
  "constType": "{G : Type u} → [self : AddCommMagma G] → Add G",
  "constCategory": "Definition"},
 {"references": ["HVAdd.mk", "VAdd.vadd", "VAdd", "HVAdd"],
  "name": "instHVAdd",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → [inst : VAdd α β] → HVAdd α β β",
  "constCategory": "Definition"},
 {"references": ["trivial", "Or", "eq_true", "Or.inr", "True", "Eq"],
  "name": "or_true",
  "constType": "∀ (p : Prop), (p ∨ True) = True",
  "constCategory": "Theorem"},
 {"references":
  ["eq_self",
   "Distrib.toAdd",
   "add_assoc",
   "CommSemiring.toSemiring",
   "AddCommSemigroup.toAddCommMagma",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "AddCommMagma.toAdd",
   "add_left_comm",
   "True",
   "Eq",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "of_eq_true",
   "AddMonoid.toAddSemigroup",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "congr",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "congrArg",
   "AddCommMonoid.toAddCommSemigroup",
   "Eq.trans"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_overlap",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a₁ b₁ c₁ a₂ b₂ c₂ : R},\n  a₁ + b₁ = c₁ → a₂ + b₂ = c₂ → a₁ + a₂ + (b₁ + b₂) = c₁ + c₂",
  "constCategory": "Theorem"},
 {"references": ["Nat", "Lean.Name"],
  "name": "Lean.Name.num",
  "constType": "Lean.Name → ℕ → Lean.Name",
  "constCategory": "Other"},
 {"references":
  ["Set.range",
   "And",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "extChartAt",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableWithinAt",
   "ContinuousAt",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "ChartedSpace",
   "TopologicalSpace",
   "PartialEquiv.toFun",
   "ModelWithCorners.toFun'",
   "writtenInExtChartAt",
   "ModelWithCorners",
   "NormedSpace"],
  "name": "MDifferentiableAt",
  "constType":
  "{𝕜 : Type u_1} →\n  [inst : NontriviallyNormedField 𝕜] →\n    {E : Type u_2} →\n      [inst_1 : NormedAddCommGroup E] →\n        [inst_2 : NormedSpace 𝕜 E] →\n          {H : Type u_3} →\n            [inst_3 : TopologicalSpace H] →\n              ModelWithCorners 𝕜 E H →\n                {M : Type u_4} →\n                  [inst_4 : TopologicalSpace M] →\n                    [inst_5 : ChartedSpace H M] →\n                      {E' : Type u_5} →\n                        [inst_6 : NormedAddCommGroup E'] →\n                          [inst_7 : NormedSpace 𝕜 E'] →\n                            {H' : Type u_6} →\n                              [inst_8 : TopologicalSpace H'] →\n                                ModelWithCorners 𝕜 E' H' →\n                                  {M' : Type u_7} →\n                                    [inst : TopologicalSpace M'] → [inst : ChartedSpace H' M'] → (M → M') → M → Prop",
  "constCategory": "Definition"},
 {"references":
  ["Complex.addCommGroup",
   "DivisionRing.toDivisionSemiring",
   "OfNat.ofNat",
   "Complex.basisOneI",
   "Complex.instModule",
   "Real",
   "Fin.fintype",
   "FiniteDimensional.of_fintype_basis",
   "Real.instDivisionRingReal",
   "DivisionSemiring.toSemiring",
   "Complex",
   "instOfNatNat",
   "Nat",
   "Finite.of_fintype",
   "Semiring.toModule",
   "Fin",
   "FiniteDimensional"],
  "name":
  "Complex.instFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModule",
  "constType": "FiniteDimensional ℝ ℂ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedField.mul_inv_cancel",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "LinearOrderedSemiring.toMax",
   "StrictOrderedCommSemiring.mk",
   "LinearOrderedSemifield",
   "LinearOrderedCommSemiring.mk",
   "LinearOrderedField.toLinearOrderedSemifield.proof_1",
   "LinearOrderedSemiring.decidableEq",
   "LinearOrderedField.toLinearOrderedCommRing",
   "LinearOrderedSemiring.toOrd",
   "LinearOrderedSemiring.compare_eq_compareOfLessAndEq",
   "LinearOrderedSemiring.decidableLT",
   "LinearOrderedField.inv_zero",
   "LinearOrderedField.toDiv",
   "LinearOrderedSemiring.min_def",
   "LinearOrderedSemiring.le_total",
   "LinearOrderedField",
   "LinearOrderedField.div_eq_mul_inv",
   "LinearOrderedField.zpow_succ'",
   "LinearOrderedSemiring.decidableLE",
   "LinearOrderedField.zpow_zero'",
   "LinearOrderedSemifield.mk",
   "LinearOrderedSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedSemiring.max_def",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "LinearOrderedField.zpow_neg'",
   "LinearOrderedField.zpow",
   "LinearOrderedField.toInv",
   "LinearOrderedSemiring.toMin"],
  "name": "LinearOrderedField.toLinearOrderedSemifield",
  "constType":
  "{α : Type u_1} → [inst : LinearOrderedField α] → LinearOrderedSemifield α",
  "constCategory": "Definition"},
 {"references":
  ["IsROrC.innerProductSpace",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "OfNat.ofNat",
   "PartialHomeomorph.toPartialEquiv",
   "Filter.EventuallyEq",
   "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.3",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "upper_half_plane_isOpen",
   "AddCommGroup.toAddCommMonoid",
   "PartialHomeomorph.toFun'",
   "Metric.isOpen_iff",
   "Exists.casesOn",
   "SetLike.instMembership",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "PartialEquiv.trans_refl",
   "Eq.mpr",
   "SeminormedCommRing.toSeminormedRing",
   "And.right",
   "HasFDerivAt",
   "NormedField.toNormedSpace",
   "DifferentiableWithinAt",
   "ChartedSpace.chartAt",
   "Filter",
   "UpperHalfPlane.upperHalfSpace",
   "Metric.ball",
   "HasFDerivAt.congr_of_eventuallyEq",
   "IsOpen",
   "Eq.trans",
   "Subtype",
   "MDifferentiable",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "Function.comp",
   "PseudoMetricSpace.toUniformSpace",
   "ContinuousAt",
   "HasSubset.Subset",
   "PartialEquiv.refl",
   "PartialHomeomorph.symm",
   "PartialEquiv",
   "Set.instMembershipSet",
   "InnerProductSpace.toNormedSpace",
   "And",
   "Std.Classes.Order._auxLemma.4",
   "ContinuousLinearMap",
   "TopologicalSpace.Opens.carrier",
   "propext",
   "LT.lt",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Eq.mp",
   "congr",
   "And.intro",
   "NormedSpace.toModule",
   "congrArg",
   "PartialEquiv.symm",
   "SetLike.coe",
   "congrFun",
   "NormedAddCommGroup.toAddCommGroup",
   "Exists",
   "TopologicalSpace.Opens",
   "DifferentiableAt.differentiableWithinAt",
   "Real",
   "Set",
   "EisensteinSeries.ext_chart",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "IsHolomorphicOn",
   "Exists.intro",
   "RingHom.id",
   "TopologicalSpace.Opens.mk",
   "isHolomorphicOn_iff_differentiableOn",
   "Zero.toOfNat0",
   "NormedField.toField",
   "Set.range",
   "TopologicalSpace.Opens.instChartedSpace",
   "Complex.instIsROrCComplex",
   "forall_congr",
   "PartialEquiv.toFun",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "instMembershipSetFilter",
   "id",
   "Membership.mem",
   "funext",
   "Real.instLTReal",
   "nhds",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "extendByZero",
   "Field.toSemifield",
   "chartAt",
   "NormedField.toNormedCommRing",
   "Set.univ",
   "chartedSpaceSelf",
   "GT.gt",
   "Real.instZeroReal",
   "DivisionSemiring.toSemiring",
   "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.2",
   "NormedCommRing.toSeminormedCommRing",
   "DifferentiableAt",
   "Set.instHasSubsetSet",
   "Set.range_id",
   "Eq.ndrec",
   "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.4",
   "letFun",
   "Set.EqOn",
   "Semifield.toDivisionSemiring",
   "instTopologicalSpaceSubtype",
   "Complex",
   "Complex.instNormedAddCommGroupComplex",
   "PartialEquiv.trans",
   "modelWithCornersSelf",
   "DenselyNormedField.toNontriviallyNormedField",
   "Subtype.mk"],
  "name": "EisensteinSeries.mdiff_to_holo",
  "constType":
  "∀ (f : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ),\n  MDifferentiable (modelWithCornersSelf ℂ ℂ) (modelWithCornersSelf ℂ ℂ) f → IsHolomorphicOn f",
  "constCategory": "Theorem"},
 {"references":
  ["Exists",
   "EmptyCollection.emptyCollection",
   "Real.natCast",
   "em",
   "Metric.closedBall",
   "Set",
   "Real",
   "Exists.intro",
   "Iff.mpr",
   "Nonempty",
   "Nonempty.casesOn",
   "Eq",
   "PseudoEMetricSpace.toUniformSpace",
   "Set.iUnion",
   "Nat.cast",
   "UniformSpace.toTopologicalSpace",
   "Nat",
   "Metric.iUnion_closedBall_nat",
   "SigmaCompactSpace.mk",
   "PseudoMetricSpace",
   "PseudoMetricSpace.toPseudoEMetricSpace",
   "Membership.mem",
   "Or",
   "isCompact_empty",
   "PseudoMetricSpace.toUniformSpace",
   "ProperSpace.isCompact_closedBall",
   "Set.instEmptyCollectionSet",
   "Or.casesOn",
   "Set.univ",
   "Set.instMembershipSet",
   "Set.iUnion_eq_univ_iff",
   "Nonempty.intro",
   "And",
   "SecondCountableTopology",
   "False.elim",
   "SigmaCompactSpace",
   "letFun",
   "Not",
   "EMetric.secondCountable_of_sigmaCompact",
   "And.intro",
   "ProperSpace",
   "IsCompact"],
  "name": "secondCountable_of_proper",
  "constType":
  "∀ {α : Type u} [inst : PseudoMetricSpace α] [inst_1 : ProperSpace α], SecondCountableTopology α",
  "constCategory": "Definition"},
 {"references":
  ["instMonadExcept",
   "tryCatchThe",
   "ReaderT",
   "liftM",
   "instMonadLiftT",
   "MonadExcept.throw",
   "ReaderT.instMonadLiftReaderT",
   "MonadExceptOf.mk",
   "MonadExceptOf",
   "instMonadLiftT_1"],
  "name": "ReaderT.instMonadExceptOfReaderT",
  "constType":
  "{ρ : Type u} → {m : Type u → Type v} → (ε : Type u_1) → [inst : MonadExceptOf ε m] → MonadExceptOf ε (ReaderT ρ m)",
  "constCategory": "Definition"},
 {"references": ["Decidable.casesOn", "Decidable", "Not"],
  "name": "ite",
  "constType": "{α : Sort u} → (c : Prop) → [h : Decidable c] → α → α → α",
  "constCategory": "Definition"},
 {"references":
  ["Real.uniformContinuous_add",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "Real.instAddGroupReal",
   "Real.pseudoMetricSpace",
   "UniformAddGroup",
   "Real.uniformContinuous_neg",
   "UniformAddGroup.mk'"],
  "name":
  "instUniformAddGroupRealToUniformSpacePseudoMetricSpaceInstAddGroupReal",
  "constType": "UniformAddGroup ℝ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedCommRing.toLinearOrderedRing",
   "LinearOrderedAddCommGroup",
   "inferInstance",
   "LinearOrderedRing.toLinearOrderedAddCommGroup",
   "Int.linearOrderedCommRing",
   "Int"],
  "name": "Int.linearOrderedAddCommGroup",
  "constType": "LinearOrderedAddCommGroup ℤ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "String",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["NonUnitalCommRing",
   "NonUnitalCommRing.mul_comm",
   "NonUnitalNonAssocCommRing.mk",
   "NonUnitalNonAssocCommRing",
   "NonUnitalRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalRing"],
  "name": "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
  "constType":
  "{α : Type u} → [self : NonUnitalCommRing α] → NonUnitalNonAssocCommRing α",
  "constCategory": "Definition"},
 {"references": ["outParam"],
  "name": "HMul",
  "constType": "Type u → Type v → outParam (Type w) → Type (max (max u v) w)",
  "constCategory": "Other"},
 {"references":
  ["LinearOrderedAddCommGroup",
   "Neg.toHasAbs",
   "AddCommGroup.toDivisionAddCommMonoid",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "instDistribLattice",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "LE.le",
   "Preorder.toLE",
   "Abs.abs",
   "Eq",
   "abs_le",
   "DistribLattice.toLattice",
   "And",
   "SemilatticeSup.toSup",
   "propext",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "Lattice.toSemilatticeSup",
   "NegZeroClass.toNeg",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "OrderedAddCommGroup.toAddCommGroup"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.1",
  "constType":
  "∀ {α : Type u_1} [inst : LinearOrderedAddCommGroup α] {a b : α}, (|a| ≤ b) = (-b ≤ a ∧ a ≤ b)",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "inferInstance",
   "Real.instCommSemiringReal",
   "Semiring",
   "Real"],
  "name": "Real.semiring",
  "constType": "Semiring ℝ",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "Iff.rfl",
   "Nat.instDvdNat",
   "Eq.refl",
   "CommSemiring.toNonUnitalCommSemiring",
   "semigroupDvd",
   "SemigroupWithZero.toZero",
   "zero_dvd_iff",
   "Nat.cast_zero",
   "Eq",
   "Zero.toOfNat0",
   "CharP",
   "Eq.mpr",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "Iff",
   "AddMonoid.toZero",
   "instOfNatNat",
   "Nat",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Eq.symm",
   "id",
   "AddMonoidWithOne.toAddMonoid",
   "CharP.mk",
   "Dvd.dvd",
   "SemigroupWithZero.toSemigroup",
   "AddMonoidWithOne",
   "Nat.commSemiring",
   "Eq.ndrec",
   "CharZero",
   "propext",
   "Nat.cast_inj",
   "NonUnitalSemiring.toSemigroupWithZero"],
  "name": "CharP.ofCharZero",
  "constType":
  "∀ (R : Type u_1) [inst : AddMonoidWithOne R] [inst_1 : CharZero R], CharP R 0",
  "constCategory": "Definition"},
 {"references":
  ["trivial",
   "Iff.intro",
   "And",
   "propext",
   "And.intro",
   "And.left",
   "True",
   "Eq"],
  "name": "and_true",
  "constType": "∀ (p : Prop), (p ∧ True) = p",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Finset.sum",
   "Eq.refl",
   "Finset.instMembershipFinset",
   "AddCommMonoid.toAddMonoid",
   "Finset.sum_const_zero",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "OrderedAddCommMonoid",
   "Zero.toOfNat0",
   "Eq.mpr",
   "Eq.ndrec",
   "Finset.sum_le_sum",
   "AddMonoid.toZero",
   "le_refl",
   "Finset",
   "le_trans",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "id"],
  "name": "Finset.sum_nonneg",
  "constType":
  "∀ {ι : Type u_1} {N : Type u_5} [inst : OrderedAddCommMonoid N] {f : ι → N} {s : Finset ι},\n  (∀ i ∈ s, 0 ≤ f i) → 0 ≤ Finset.sum s fun i => f i",
  "constCategory": "Theorem"},
 {"references": ["Add.add", "HAdd.mk", "Add", "HAdd"],
  "name": "instHAdd",
  "constType": "{α : Type u_1} → [inst : Add α] → HAdd α α α",
  "constCategory": "Definition"},
 {"references": [],
  "name": "NontriviallyNormedField",
  "constType": "Type u_5 → Type u_5",
  "constCategory": "Other"},
 {"references":
  ["Semiring.toOne",
   "Matrix.det",
   "Subtype.property",
   "CommRing.toCommSemiring",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Fintype",
   "Matrix.SpecialLinearGroup",
   "DecidableEq",
   "Subtype.val",
   "Matrix",
   "One.toOfNat1",
   "CommRing",
   "Eq"],
  "name": "Matrix.SpecialLinearGroup.det_coe",
  "constType":
  "∀ {n : Type u} [inst : DecidableEq n] [inst_1 : Fintype n] {R : Type v} [inst_2 : CommRing R]\n  (A : Matrix.SpecialLinearGroup n R), Matrix.det ↑A = 1",
  "constCategory": "Theorem"},
 {"references":
  ["Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Complex.mk",
   "Real",
   "Complex",
   "One.toOfNat1",
   "Real.instOneReal"],
  "name": "Complex.I",
  "constType": "ℂ",
  "constCategory": "Definition"},
 {"references":
  ["LinearOrderedSemifield.toSemifield",
   "CommMonoidWithZero.toZero",
   "OfNat.ofNat",
   "MulOneClass.toMul",
   "LinearOrderedSemifield.toInv",
   "PartialOrder.toPreorder",
   "div_eq_mul_inv",
   "Eq.refl",
   "Semifield.toCommGroupWithZero",
   "Iff.mpr",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "HDiv.hDiv",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "id",
   "DivInvMonoid.toDiv",
   "instHDiv",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "LinearOrderedSemifield",
   "DivisionSemiring.toGroupWithZero",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "CommGroupWithZero.toCommMonoidWithZero",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toDivInvMonoid",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toInv",
   "instHMul",
   "LinearOrderedSemifield.toDiv",
   "Eq.ndrec",
   "inv_nonneg",
   "StrictOrderedSemiring.toPartialOrder",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedCommSemiring.toOrderedSemiring",
   "HMul.hMul",
   "Semifield.toDivisionSemiring",
   "OrderedSemiring.toPosMulMono",
   "mul_nonneg",
   "Inv.inv"],
  "name": "div_nonneg",
  "constType":
  "∀ {α : Type u_2} [inst : LinearOrderedSemifield α] {a b : α}, 0 ≤ a → 0 ≤ b → 0 ≤ a / b",
  "constCategory": "Theorem"},
 {"references":
  ["SemigroupWithZero.toSemigroup",
   "inferInstance",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "CommRing.toNonUnitalCommRing",
   "Real",
   "Real.commRing",
   "NonUnitalSemiring.toSemigroupWithZero",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Semigroup"],
  "name": "Real.instSemigroupReal",
  "constType": "Semigroup ℝ",
  "constCategory": "Definition"},
 {"references": ["funext", "Eq.rec", "rfl", "Eq"],
  "name": "forall_congr",
  "constType":
  "∀ {α : Sort u} {p q : α → Prop}, (∀ (a : α), p a = q a) → (∀ (a : α), p a) = ∀ (a : α), q a",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "Ring.toNonAssocRing.proof_5",
   "NonAssocRing",
   "AddCommMonoid.toAddMonoid",
   "Ring.toNonAssocRing.proof_2",
   "Ring.intCast_ofNat",
   "Ring.toNonAssocRing.proof_3",
   "Semiring.toNatCast",
   "Ring.toNeg",
   "Ring.toIntCast",
   "Ring.toSub",
   "Ring",
   "Ring.add_left_neg",
   "AddCommGroup.mk",
   "Ring.toNonAssocRing.proof_7",
   "AddGroup.mk",
   "Ring.intCast_negSucc",
   "Ring.toNonAssocRing.proof_8",
   "NonUnitalNonAssocSemiring.toMul",
   "Ring.toNonAssocRing.proof_4",
   "Ring.toSemiring",
   "NonUnitalNonAssocRing.mk",
   "SubNegMonoid.mk",
   "Ring.zsmul_neg'",
   "Ring.zsmul_zero'",
   "Semiring.toOne",
   "Ring.zsmul",
   "Ring.toNonAssocRing.proof_6",
   "Ring.zsmul_succ'",
   "NonAssocRing.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Ring.sub_eq_add_neg",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Ring.toNonAssocRing.proof_1",
   "Ring.toNonAssocRing.proof_9"],
  "name": "Ring.toNonAssocRing",
  "constType": "{α : Type u} → [inst : Ring α] → NonAssocRing α",
  "constCategory": "Definition"},
 {"references":
  ["DistribLattice.toLattice",
   "Or",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "propext",
   "instDistribLattice",
   "LinearOrder.toMax",
   "Max.max",
   "SemilatticeInf.toPartialOrder",
   "le_max_iff",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Mathlib.Order.MinMax._auxLemma.2",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b c : α}, (a ≤ max b c) = (a ≤ b ∨ a ≤ c)",
  "constCategory": "Theorem"},
 {"references":
  ["PartialOrder.toPreorder",
   "LinearOrder",
   "Preorder.toLT",
   "propext",
   "LT.lt",
   "LinearOrder.toPartialOrder",
   "Not",
   "not_le",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Mathlib.Init.Order.Defs._auxLemma.2",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b : α}, (¬a ≤ b) = (b < a)",
  "constCategory": "Theorem"},
 {"references": ["Norm", "SeminormedAddGroup"],
  "name": "SeminormedAddGroup.toNorm",
  "constType": "{E : Type u_9} → [self : SeminormedAddGroup E] → Norm E",
  "constCategory": "Definition"},
 {"references": ["AddMonoid", "AddCommMonoid"],
  "name": "AddCommMonoid.toAddMonoid",
  "constType": "{M : Type u} → [self : AddCommMonoid M] → AddMonoid M",
  "constCategory": "Definition"},
 {"references":
  ["NonAssocRing.toIntCast",
   "NonAssocRing",
   "NonAssocRing.intCast_negSucc",
   "AddCommGroupWithOne.mk",
   "NonAssocRing.natCast_succ",
   "NonAssocRing.intCast_ofNat",
   "AddCommGroupWithOne",
   "NonAssocRing.toNatCast",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "NonAssocRing.natCast_zero",
   "NonAssocRing.toOne",
   "NonUnitalNonAssocRing.toAddCommGroup"],
  "name": "NonAssocRing.toAddCommGroupWithOne",
  "constType":
  "{α : Type u_1} → [self : NonAssocRing α] → AddCommGroupWithOne α",
  "constCategory": "Definition"},
 {"references": ["Classical.decEq", "DecidableEq", "Complex"],
  "name": "Complex.instDecidableEqComplex",
  "constType": "DecidableEq ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "StrictOrderedRing.toRing",
   "Real.instLinearOrderedFieldReal.proof_12",
   "zpowRec",
   "_private.Mathlib.Data.Real.Basic.0.Real.inv'",
   "LinearOrder.decidableLE",
   "Monoid.mk",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.instLinearOrderedFieldReal.proof_5",
   "LinearOrder.max_def",
   "Real",
   "StrictOrderedRing.toNontrivial",
   "Inv.mk",
   "Real.linearOrder",
   "LinearOrderedField",
   "LinearOrderedField.mk",
   "Semiring.npow",
   "Div.mk",
   "LinearOrder.compare_eq_compareOfLessAndEq",
   "Rat.cast",
   "LinearOrder.toMin",
   "LinearOrder.decidableEq",
   "Real.instInvReal",
   "Real.strictOrderedRing",
   "Real.instLinearOrderedFieldReal.proof_11",
   "Real.instLinearOrderedFieldReal.proof_2",
   "Semigroup.mk",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "StrictOrderedRing.toPartialOrder",
   "Real.instLinearOrderedFieldReal.proof_13",
   "RatCast.mk",
   "StrictOrderedRing.mk",
   "qsmulRec",
   "LinearOrder.min_def",
   "LinearOrder.le_total",
   "Real.ratCast",
   "Real.instLinearOrderedFieldReal.proof_7",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedRing.mul_pos",
   "DivInvMonoid.div'",
   "Ring.toSemiring",
   "Real.instLinearOrderedFieldReal.proof_4",
   "StrictOrderedRing.zero_le_one",
   "Semiring.toOne",
   "LinearOrder.toOrd",
   "Real.instLinearOrderedFieldReal.proof_10",
   "LinearOrderedCommRing.mk",
   "LinearOrder.decidableLT",
   "Real.linearOrderedCommRing",
   "StrictOrderedRing.add_le_add_left",
   "LinearOrder.toMax",
   "Real.instLinearOrderedFieldReal.proof_3",
   "LinearOrderedCommRing",
   "Real.instLinearOrderedFieldReal.proof_6",
   "LinearOrderedCommRing.mul_comm",
   "Real.instLinearOrderedFieldReal.proof_9",
   "Real.instLinearOrderedFieldReal.proof_1",
   "LinearOrderedRing.mk",
   "Real.instLinearOrderedFieldReal.proof_8",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Inv.inv"],
  "name": "Real.instLinearOrderedFieldReal",
  "constType": "LinearOrderedField ℝ",
  "constCategory": "Definition"},
 {"references":
  ["inferInstance",
   "AddCommSemigroup",
   "Int.instAddCommMonoidInt",
   "AddCommMonoid.toAddCommSemigroup",
   "Int"],
  "name": "Int.instAddCommSemigroupInt",
  "constType": "AddCommSemigroup ℤ",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "rfl", "Eq"],
  "name": "congrArg",
  "constType":
  "∀ {α : Sort u} {β : Sort v} {a₁ a₂ : α} (f : α → β), a₁ = a₂ → f a₁ = f a₂",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "MulOneClass.toMul",
   "map_zpow'",
   "MulZeroOneClass.toMulOneClass",
   "MonoidHomClass.toMulHomClass",
   "MonoidWithZeroHomClass",
   "DivInvMonoid.Pow",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "GroupWithZero.toDivInvMonoid",
   "map_inv₀",
   "GroupWithZero.toMonoidWithZero",
   "Eq",
   "MonoidWithZero.toMulZeroOneClass",
   "instHPow",
   "GroupWithZero",
   "Int"],
  "name": "map_zpow₀",
  "constType":
  "∀ {F : Type u_8} {G₀ : Type u_9} {G₀' : Type u_10} [inst : GroupWithZero G₀] [inst_1 : GroupWithZero G₀']\n  [inst_2 : MonoidWithZeroHomClass F G₀ G₀'] (f : F) (x : G₀) (n : ℤ), f (x ^ n) = f x ^ n",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Lean.SourceInfo",
  "constType": "Type",
  "constCategory": "Other"},
 {"references": ["VAdd", "AddAction", "AddMonoid"],
  "name": "AddAction.toVAdd",
  "constType":
  "{G : Type u_10} → {P : Type u_11} → [inst : AddMonoid G] → [self : AddAction G P] → VAdd G P",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Set",
   "Real",
   "upper_half_plane_isOpen",
   "Real.instLEReal",
   "AbsoluteValue",
   "GE.ge",
   "SeminormedRing.toPseudoMetricSpace",
   "TopologicalSpace.Opens.mk",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Eq",
   "Zero.toOfNat0",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "UpperHalfPlane",
   "UpperHalfPlane.upperHalfSpace",
   "UniformSpace.toTopologicalSpace",
   "EisensteinSeries.slice_mem",
   "Subtype",
   "Complex.ofReal'",
   "Membership.mem",
   "Complex.abs",
   "Real.instLTReal",
   "PseudoMetricSpace.toUniformSpace",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "Real.orderedSemiring",
   "LE.le",
   "SubadditiveHomClass.toFunLike",
   "Complex.re",
   "Set.instMembershipSet",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Complex.im",
   "Real.instZeroReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "NormedCommRing.toSeminormedCommRing",
   "And",
   "propext",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "OrderedSemiring.toSemiring",
   "Complex",
   "OrderedSemiring.toPartialOrder"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.4",
  "constType":
  "∀ (A B : ℝ) (z : UpperHalfPlane),\n  (z ∈ EisensteinSeries.upperHalfSpaceSlice A B) = (Complex.abs ↑(↑z).re ≤ A ∧ Complex.abs ↑(↑z).im ≥ B)",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "AddLeftCancelSemigroup.add_left_cancel",
   "AddRightCancelMonoid.toAddRightCancelSemigroup",
   "AddCancelMonoid.toAddRightCancelMonoid",
   "AddRightCancelMonoid.toAddMonoid",
   "AddCancelMonoid",
   "AddCancelMonoid.toAddLeftCancelMonoid",
   "IsCancelAdd",
   "IsCancelAdd.mk",
   "IsRightCancelAdd.mk",
   "AddMonoid.toAddZeroClass",
   "AddRightCancelSemigroup.add_right_cancel",
   "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
   "IsLeftCancelAdd.mk"],
  "name": "AddCancelMonoid.toIsCancelAdd",
  "constType": "∀ (M : Type u) [inst : AddCancelMonoid M], IsCancelAdd M",
  "constCategory": "Definition"},
 {"references":
  ["RingHom",
   "Semiring.toNonAssocSemiring",
   "Semiring",
   "TopologicalSpace",
   "Module",
   "AddCommMonoid"],
  "name": "ContinuousLinearMap",
  "constType":
  "{R : Type u_1} →\n  {S : Type u_2} →\n    [inst : Semiring R] →\n      [inst_1 : Semiring S] →\n        (R →+* S) →\n          (M : Type u_3) →\n            [inst_2 : TopologicalSpace M] →\n              [inst_3 : AddCommMonoid M] →\n                (M₂ : Type u_4) →\n                  [inst_4 : TopologicalSpace M₂] →\n                    [inst_5 : AddCommMonoid M₂] → [inst : Module R M] → [inst : Module S M₂] → Type (max u_3 u_4)",
  "constCategory": "Other"},
 {"references": ["NonAssocRing", "IntCast"],
  "name": "NonAssocRing.toIntCast",
  "constType": "{α : Type u_1} → [self : NonAssocRing α] → IntCast α",
  "constCategory": "Definition"},
 {"references":
  ["False",
   "Preorder.toLT",
   "propext",
   "LT.lt",
   "Preorder",
   "lt_self_iff_false",
   "Eq"],
  "name": "Mathlib.Order.Basic._auxLemma.2",
  "constType": "∀ {α : Type u} [inst : Preorder α] (x : α), (x < x) = False",
  "constCategory": "Theorem"},
 {"references": ["cond.match_1", "Bool.true", "Unit", "Bool"],
  "name": "or",
  "constType": "Bool → Bool → Bool",
  "constCategory": "Definition"},
 {"references": ["AddMonoidWithOne", "AddCommMonoidWithOne"],
  "name": "AddCommMonoidWithOne.toAddMonoidWithOne",
  "constType":
  "{R : Type u_1} → [self : AddCommMonoidWithOne R] → AddMonoidWithOne R",
  "constCategory": "Definition"},
 {"references":
  ["Int.ofNat",
   "Int.decEq.proof_2",
   "Int.decEq.proof_4",
   "Int.decEq.match_1",
   "Decidable.isTrue",
   "Int.decEq.match_2",
   "Int.decEq.proof_3",
   "decEq",
   "instDecidableEqNat",
   "Eq",
   "Decidable.isFalse",
   "Int.negSucc",
   "Int.decEq.proof_6",
   "Decidable",
   "Int.decEq.proof_5",
   "Not",
   "Nat",
   "Int",
   "Int.decEq.proof_1"],
  "name": "Int.decEq",
  "constType": "(a b : ℤ) → Decidable (a = b)",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "Eq.symm", "Eq"],
  "name": "Eq.mpr_prop",
  "constType": "∀ {p q : Prop}, p = q → q → p",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toOne",
   "OrderedSemiring",
   "ZeroLEOneClass",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toSemiring",
   "Semiring.toMonoidWithZero",
   "OrderedSemiring.zero_le_one",
   "MonoidWithZero.toZero",
   "ZeroLEOneClass.mk",
   "OrderedSemiring.toPartialOrder",
   "Preorder.toLE"],
  "name": "OrderedSemiring.zeroLEOneClass",
  "constType": "∀ {α : Type u} [inst : OrderedSemiring α], ZeroLEOneClass α",
  "constCategory": "Definition"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "Monoid.mk",
   "NonUnitalSemiring.mul_assoc",
   "DivisionSemiring.mul_inv_cancel",
   "DivisionSemiring",
   "Semiring.mul_one",
   "DivisionSemiring.inv_zero",
   "Semiring.npow_succ",
   "AddCommMonoid.toAddMonoid",
   "DivisionSemiring.toDiv",
   "NonUnitalNonAssocSemiring.toMul",
   "Semiring.npow_zero",
   "Semiring.one_mul",
   "DivisionSemiring.div_eq_mul_inv",
   "DivisionSemiring.zpow_succ'",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "DivisionSemiring.zpow_zero'",
   "MonoidWithZero.mk",
   "Semiring.npow",
   "NonUnitalNonAssocSemiring.zero_mul",
   "AddMonoid.toZero",
   "GroupWithZero",
   "DivisionSemiring.toNontrivial",
   "DivisionSemiring.zpow_neg'",
   "DivisionSemiring.zpow",
   "DivisionSemiring.toInv",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "GroupWithZero.mk",
   "NonUnitalNonAssocSemiring.mul_zero",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semigroup.mk"],
  "name": "DivisionSemiring.toGroupWithZero",
  "constType": "{α : Type u_4} → [self : DivisionSemiring α] → GroupWithZero α",
  "constCategory": "Definition"},
 {"references":
  ["propext",
   "inv_inj",
   "InvolutiveInv.toInv",
   "InvolutiveInv",
   "Inv.inv",
   "Eq"],
  "name": "Mathlib.Algebra.Group.Basic._auxLemma.13",
  "constType":
  "∀ {G : Type u_3} [inst : InvolutiveInv G] {a b : G}, (a⁻¹ = b⁻¹) = (a = b)",
  "constCategory": "Theorem"},
 {"references": ["_obj", "Complex.mk", "_neutral"],
  "name": "EisensteinSeries.lbpoint._cstage2",
  "constType": "_obj → _obj → _neutral → _obj",
  "constCategory": "Definition"},
 {"references": ["SMul", "Semiring", "CommSemiring", "Algebra"],
  "name": "Algebra.toSMul",
  "constType":
  "{R : Type u} → {A : Type v} → [inst : CommSemiring R] → [inst_1 : Semiring A] → [self : Algebra R A] → SMul R A",
  "constCategory": "Definition"},
 {"references":
  ["PseudoMetricSpace.toDist",
   "setOf",
   "Real.instLTReal",
   "Set",
   "LT.lt",
   "Real",
   "PseudoMetricSpace",
   "Dist.dist"],
  "name": "Metric.ball",
  "constType": "{α : Type u} → [inst : PseudoMetricSpace α] → α → ℝ → Set α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Real",
   "LT.lt",
   "Complex",
   "Subtype"],
  "name": "UpperHalfPlane",
  "constType": "Type",
  "constCategory": "Definition"},
 {"references": ["OrderedCommMonoid", "PartialOrder"],
  "name": "OrderedCommMonoid.toPartialOrder",
  "constType": "{α : Type u_3} → [self : OrderedCommMonoid α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.im",
   "Real.instZeroReal",
   "Zero.toOfNat0",
   "OfNat.ofNat",
   "Real.instLTReal",
   "Complex.mk",
   "LT.lt",
   "Real",
   "id"],
  "name": "EisensteinSeries.lbpoint.proof_1",
  "constType": "∀ (A B : ℝ), 0 < B → 0 < { re := A, im := B }.im",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Fintype",
  "constType": "Type u_4 → Type u_4",
  "constCategory": "Other"},
 {"references":
  ["Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "outParam",
   "OfNat.ofNat",
   "ModularFormClass",
   "Matrix.SpecialLinearGroup",
   "instDecidableEqFin",
   "Subgroup",
   "Fin.fintype",
   "instOfNatNat",
   "Nat",
   "Int",
   "Int.instCommRingInt",
   "Fin",
   "SlashInvariantFormClass"],
  "name": "ModularFormClass.toSlashInvariantFormClass",
  "constType":
  "{F : Type u_2} →\n  {Γ : outParam (Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ))} →\n    {k : outParam ℤ} → [self : ModularFormClass F Γ k] → SlashInvariantFormClass F Γ k",
  "constCategory": "Definition"},
 {"references": ["Nat"],
  "name": "OfNat",
  "constType": "Type u → ℕ → Type u",
  "constCategory": "Other"},
 {"references":
  ["instHSub",
   "OrderedSub",
   "instHAdd",
   "propext",
   "HAdd.hAdd",
   "HSub.hSub",
   "tsub_le_iff_right",
   "LE",
   "Sub",
   "Add",
   "LE.le",
   "Eq"],
  "name": "Mathlib.Algebra.Order.Sub.Defs._auxLemma.1",
  "constType":
  "∀ {α : Type u_1} [inst : LE α] [inst_1 : Add α] [inst_2 : Sub α] [inst_3 : OrderedSub α] {a b c : α},\n  (a - b ≤ c) = (a ≤ c + b)",
  "constCategory": "Theorem"},
 {"references":
  ["LE.mk", "_private.Mathlib.Data.Real.Basic.0.Real.le", "Real", "LE"],
  "name": "Real.instLEReal",
  "constType": "LE ℝ",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "AbsoluteValue.mulHomClass",
   "DivInvMonoid.Pow",
   "Semiring.toNatCast",
   "Complex.abs_ofReal",
   "IsROrC.charZero_isROrC",
   "SemilatticeSup.toSup",
   "AbsoluteValue.zeroHomClass",
   "NormedDivisionRing.toDivisionRing",
   "map_mul",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Std.Classes.Order._auxLemma.3",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "Complex.instZeroComplex",
   "Complex.instNontrivialComplex",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Prod.snd",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "instDistribLattice",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "SubadditiveHomClass.toFunLike",
   "And",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "congr",
   "MonoidWithZero.toZero",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Mathlib.Meta.NormNum.isInt_mul",
   "CharP.cast_eq_zero",
   "Eq.refl",
   "Int.rawCast",
   "MonoidWithZeroHomClass.toMonoidHomClass",
   "EisensteinSeries.rfunct",
   "NonAssocSemiring.toMulZeroOneClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "Complex.instSemiringComplex",
   "AddGroup.toAddCancelMonoid",
   "map_zero",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "zero_lt_one",
   "OrderedRing.toOrderedSemiring",
   "Lattice.toSemilatticeSup",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Real.instLinearOrderedRingReal",
   "MonoidHomClass.toMulHomClass",
   "MulHomClass.toFunLike",
   "Neg.neg",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "GroupWithZero.inv_zero",
   "GroupWithZero.toMonoidWithZero",
   "LE.le",
   "Monoid.toMulOneClass",
   "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.10",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "instNatCastInt",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "Semifield.toDivisionSemiring",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "Finset.instSingletonFinset",
   "MulOneClass.toMul",
   "AbsoluteValue",
   "HAdd.hAdd",
   "Real.isROrC",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "Modformsported.ForMathlib.EisensteinSeries.summable._auxLemma.6",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Ring.toIntCast",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "mul_inv_rev",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "StrictOrderedRing.toPartialOrder",
   "neg_neg_of_pos",
   "Int.instCommSemiringInt",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Int.cast_zero",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Algebra.GroupPower.Ring._auxLemma.3",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "Int.cast",
   "Eq.mp",
   "Singleton.singleton",
   "NormedField.toNormedDivisionRing",
   "LinearOrderedSemiring.noZeroDivisors",
   "Int.ofNat",
   "StrictOrderedRing.toRing",
   "LinearOrderedSemifield.toSemifield",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "AddGroupWithOne.toIntCast",
   "MulZeroClass.zero_mul",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedRing.toLinearOrder",
   "AddMonoid.toZero",
   "instOfNatNat",
   "Mathlib.Data.Complex.Basic._auxLemma.11",
   "CommSemiring.toCommMonoidWithZero",
   "NeZero.charZero_one",
   "id",
   "eq_self",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "Real.instMonoidWithZeroReal",
   "AddMonoidWithOne.toAddMonoid",
   "NonUnitalNonAssocSemiring.toMul",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedSemiring.to_charZero",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "OrderedCommSemiring.toOrderedSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "OrderedSemiring.toPartialOrder",
   "Distrib.toAdd",
   "CommSemiring.toSemiring",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Semifield.toCommGroupWithZero",
   "AddGroupWithOne.toAddGroup",
   "Mathlib.Meta.NormNum.isInt_add",
   "Nat.cast_zero",
   "Real.orderedRing",
   "Complex.Complex.addGroupWithOne",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "Mathlib.Tactic.Ring.neg_congr",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Linarith.lt_of_lt_of_eq",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "HPow.hPow",
   "instHSub",
   "Complex.abs",
   "Mathlib.Order.Basic._auxLemma.1",
   "Real.instRingReal",
   "Complex.instAddComplex",
   "Real.normedCommRing",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Mathlib.Tactic.Ring.neg_zero",
   "LT.lt",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Nat.cast_pow",
   "Int",
   "Inv.inv",
   "true_and",
   "Exists",
   "Real",
   "Semiring.toMonoidWithZero",
   "Mathlib.Tactic.Ring.sub_congr",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "StarOrderedRing.toExistsAddOfLE",
   "AddMonoid.toAddZeroClass",
   "True",
   "Abs.abs",
   "AbsoluteValue.subadditiveHomClass",
   "AddMonoidWithOne.toNatCast",
   "map_pow",
   "AddMonoid.toAddSemigroup",
   "Finset",
   "CommGroupWithZero.toDivisionCommMonoid",
   "Complex.ofReal'",
   "Neg.toHasAbs",
   "Not.intro",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Real.nontrivial",
   "Mathlib.Tactic.Ring.cast_pos",
   "Complex.instRingComplex",
   "One.toOfNat1",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "DivInvMonoid.toMonoid",
   "Prod.mk",
   "Real.instPreorderReal",
   "instCanLiftIntNatCastInstNatCastIntLeInstLEIntOfNatInstOfNatInt",
   "Prod",
   "Mathlib.Tactic.Ring.atom_pf",
   "AbsoluteValue.monoidWithZeroHomClass",
   "Real.instLEReal",
   "Exists.casesOn",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "Ring.toNeg",
   "Mathlib.Tactic.Zify._auxLemma.1",
   "DivisionCommMonoid.toDivisionMonoid",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "Real.instLinearOrderedSemiringReal",
   "EisensteinSeries.square",
   "abs_pow",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "DivisionSemiring.toGroupWithZero",
   "Real.partialOrder",
   "Nat.rawCast",
   "OrderedSemiring.zeroLEOneClass",
   "Complex.charZero",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "DistribLattice.toLattice",
   "instHMul",
   "Int.instAddGroupInt",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.instIsDomainRealSemiring",
   "Not",
   "add_zero",
   "congrArg",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Real.instLinearOrderedFieldReal",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "CanLift.prf",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Int.linearOrderedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "zpow_ofNat",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "ZeroHomClass.toFunLike",
   "instHPow",
   "Preorder.toLT",
   "Nat.monoid",
   "MulZeroClass.toZero",
   "add_lt_of_neg_of_le",
   "Eq.symm",
   "EisensteinSeries.square_zero",
   "Real.instMonoidReal",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "AddGroup.toSubNegMonoid",
   "Real.instZeroReal",
   "Semiring.toOne",
   "CharP.ofCharZero",
   "Real.semiring",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.Eise_on_zero_square",
  "constType":
  "∀ (k : ℤ),\n  0 ≤ k →\n    ∀ (z : UpperHalfPlane),\n      1 ≤ k →\n        ∀ x ∈ EisensteinSeries.square 0,\n          (Complex.abs ((↑x.1 * ↑z + ↑x.2) ^ k))⁻¹ ≤ (Complex.abs (↑(EisensteinSeries.rfunct z) ^ k * 0 ^ k))⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["instHSub",
   "Distrib.toAdd",
   "OfNat.ofNat",
   "Prod.snd",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "instHAdd",
   "LipschitzWith.uniformContinuous",
   "HAdd.hAdd",
   "HSub.hSub",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedAddCommGroup",
   "One.toOfNat1",
   "instNNRealSemiring",
   "Prod.fst",
   "UniformAddGroup",
   "LipschitzWith.prod_fst",
   "SeminormedAddGroup.toAddGroup",
   "AddGroup.toSubNegMonoid",
   "instNNRealOne",
   "UniformAddGroup.mk",
   "NonUnitalNonAssocSemiring.toDistrib",
   "SubNegMonoid.toSub",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LipschitzWith.prod_snd",
   "LipschitzWith.sub",
   "Prod.pseudoEMetricSpaceMax",
   "Prod",
   "SeminormedAddCommGroup.toSeminormedAddGroup",
   "NNReal",
   "PseudoMetricSpace.toPseudoEMetricSpace"],
  "name": "SeminormedAddCommGroup.to_uniformAddGroup",
  "constType":
  "∀ {E : Type u_6} [inst : SeminormedAddCommGroup E], UniformAddGroup E",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Real.instLinearOrderedFieldReal",
   "PartialOrder.toPreorder",
   "AbsoluteValue",
   "Real",
   "Real.instLEReal",
   "abv_sum_le_sum_abv",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Preorder.toLE",
   "AbsoluteValue.subadditiveHomClass",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Complex.instSemiringComplex",
   "Semiring.toNonAssocSemiring",
   "Finset",
   "AbsoluteValue.isAbsoluteValue",
   "LinearOrderedField.toLinearOrderedSemifield",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Complex.abs",
   "Finset.sum",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "Real.orderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "SubadditiveHomClass.toFunLike",
   "LE.le",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NormedCommRing.toSeminormedCommRing",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedCommSemiring.toOrderedSemiring",
   "OrderedSemiring.toSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Real.instAddCommMonoidReal",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.complex_abs_sum_le",
  "constType":
  "∀ {ι : Type u_1} (s : Finset ι) (f : ι → ℂ),\n  Complex.abs (Finset.sum s fun i => f i) ≤ Finset.sum s fun i => Complex.abs (f i)",
  "constCategory": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "inferInstance",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Ring"],
  "name": "Mathlib.Meta.NormNum.instAddMonoidWithOne",
  "constType": "{α : Type u_1} → [inst : Ring α] → AddMonoidWithOne α",
  "constCategory": "Definition"},
 {"references": ["OrderedAddCommMonoid", "LinearOrderedAddCommMonoid"],
  "name": "LinearOrderedAddCommMonoid.toOrderedAddCommMonoid",
  "constType":
  "{α : Type u_3} → [self : LinearOrderedAddCommMonoid α] → OrderedAddCommMonoid α",
  "constCategory": "Definition"},
 {"references":
  ["MulHomClass",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "Semiring",
   "OrderedRing",
   "IsDomain",
   "AbsoluteValue",
   "MonoidWithZeroHomClass",
   "MulHomClass.toFunLike",
   "AbsoluteValue.mulHomClass",
   "NonUnitalNonAssocSemiring.toMul",
   "MonoidWithZeroHomClass.mk",
   "NonAssocSemiring.toMulZeroOneClass",
   "MulHomClass.mk",
   "AbsoluteValue.monoidWithZeroHomClass.proof_2",
   "AbsoluteValue.map_one",
   "AbsoluteValue.monoidWithZeroHomClass.proof_1",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "OrderedRing.toOrderedSemiring",
   "Nontrivial",
   "MonoidHomClass.mk"],
  "name": "AbsoluteValue.monoidWithZeroHomClass",
  "constType":
  "{R : Type u_1} →\n  {S : Type u_2} →\n    [inst : Semiring R] →\n      [inst_1 : OrderedRing S] →\n        [inst_2 : IsDomain S] → [inst_3 : Nontrivial R] → MonoidWithZeroHomClass (AbsoluteValue R S) R S",
  "constCategory": "Definition"},
 {"references":
  ["Real.orderedAddCommGroup",
   "AddCommSemigroup.toAddCommMagma",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Real.instMulReal",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.instAddMonoidReal",
   "Semifield.toCommGroupWithZero",
   "Nat.cast_zero",
   "Preorder.toLE",
   "Eq",
   "AddZeroClass.toZero",
   "Eq.mpr",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "Real.strictOrderedSemiring",
   "upper_half_im_pow_pos",
   "LinearOrderedField.toLinearOrderedSemifield",
   "UpperHalfPlane",
   "Std.Classes.Order._auxLemma.3",
   "HDiv.hDiv",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Nat",
   "Real.instLinearOrderedSemiringReal",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Eq.trans",
   "HPow.hPow",
   "instHDiv",
   "add_comm",
   "Real.partialOrder",
   "Real.instRingReal",
   "Real.instAddCommSemigroupReal",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Real.normedCommRing",
   "AddCommMagma.toAdd",
   "add_pos_of_nonneg_of_pos",
   "Complex.im",
   "instHMul",
   "AddCancelMonoid.toIsCancelAdd",
   "div_pos",
   "LT.lt",
   "Eq.mp",
   "Real.instAddGroupReal",
   "MonoidWithZero.toZero",
   "congrArg",
   "congrFun",
   "AddZeroClass.toAdd",
   "LinearOrderedSemifield.toSemifield",
   "CommMonoidWithZero.toZero",
   "Real.instLinearOrderedFieldReal",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "Subtype.val",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "AddMonoid.toAddZeroClass",
   "StarOrderedRing.toExistsAddOfLE",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "LinearOrderedField.toDiv",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "Zero.toOfNat0",
   "AddMonoidWithOne.toNatCast",
   "Preorder.toLT",
   "instHPow",
   "AddMonoid.toZero",
   "AddGroup.toAddCancelMonoid",
   "Monoid.toNatPow",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "instOfNatNat",
   "Eq.symm",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "_private.Modformsported.ForMathlib.EisensteinSeries.bounds.0.EisensteinSeries.lb._eq_1",
   "pow_two_nonneg",
   "id",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Real.instMonoidReal",
   "IsCancelAdd.toIsLeftCancelAdd",
   "Real.instLTReal",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "pow_pos",
   "LE.le",
   "StrictOrderedSemiring.toSemiring",
   "Complex.re",
   "EisensteinSeries.lb",
   "Real.instZeroReal",
   "NormedCommRing.toSeminormedCommRing",
   "LinearOrderedSemifield.toDiv",
   "Eq.ndrec",
   "StrictOrderedSemiring.toPartialOrder",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "letFun",
   "Real.instPreorderReal",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex"],
  "name": "EisensteinSeries.lb_pos",
  "constType": "∀ (z : UpperHalfPlane), 0 < EisensteinSeries.lb z",
  "constCategory": "Theorem"},
 {"references": ["Top", "CompleteLattice"],
  "name": "CompleteLattice.toTop",
  "constType": "{α : Type u_9} → [self : CompleteLattice α] → Top α",
  "constCategory": "Definition"},
 {"references":
  ["AddGroupWithOne.toAddMonoidWithOne",
   "OfNat.ofNat",
   "instAddNat",
   "AddGroupWithOne.toIntCast",
   "instHAdd",
   "HAdd.hAdd",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Int.cast",
   "Int.negSucc",
   "AddGroupWithOne",
   "instOfNatNat",
   "Int.cast_negSucc",
   "Nat",
   "Eq.symm"],
  "name": "Mathlib.Data.Int.Cast.Basic._auxLemma.3",
  "constType":
  "∀ {R : Type u} [inst : AddGroupWithOne R] (n : ℕ), -↑(n + 1) = ↑(Int.negSucc n)",
  "constCategory": "Theorem"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid", "CanonicallyOrderedCommSemiring"],
  "name": "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
  "constType":
  "{α : Type u_2} → [self : CanonicallyOrderedCommSemiring α] → CanonicallyOrderedAddCommMonoid α",
  "constCategory": "Definition"},
 {"references": ["Iff.intro", "Iff", "congr_arg", "Function.Injective", "Eq"],
  "name": "Function.Injective.eq_iff",
  "constType":
  "∀ {α : Sort u_1} {β : Sort u_2} {f : α → β}, Function.Injective f → ∀ {a b : α}, f a = f b ↔ a = b",
  "constCategory": "Theorem"},
 {"references":
  ["min_le_iff",
   "Min.min",
   "DistribLattice.toLattice",
   "Or",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "propext",
   "instDistribLattice",
   "LinearOrder.toMin",
   "SemilatticeInf.toPartialOrder",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name": "Mathlib.Order.MinMax._auxLemma.3",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b c : α}, (min a b ≤ c) = (a ≤ c ∨ b ≤ c)",
  "constCategory": "Theorem"},
 {"references":
  ["inferInstance", "Complex.commRing", "Ring", "CommRing.toRing", "Complex"],
  "name": "Complex.instRingComplex",
  "constType": "Ring ℂ",
  "constCategory": "Definition"},
 {"references":
  ["AddZeroClass.toAdd",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "AddGroupWithOne.toIntCast",
   "HAdd.hAdd",
   "Int.rawCast",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Ring.toNonAssocRing",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "zero_add",
   "AddZeroClass.toZero",
   "Semiring.toNonAssocSemiring",
   "one_mul",
   "Ring.toNeg",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Nat.addMonoid",
   "InvolutiveNeg.toNeg",
   "Ring",
   "HasDistribNeg.toInvolutiveNeg",
   "instOfNatNat",
   "Int.cast_negSucc",
   "Nat",
   "neg_mul",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "NonUnitalNonAssocRing.toMul",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "instAddNat",
   "Int.negOfNat",
   "MulOneClass.toOne",
   "instHAdd",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "One.toOfNat1",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toSemiring",
   "instHMul",
   "Eq.ndrec",
   "of_eq_true",
   "AddMonoidWithOne.toOne",
   "Int.negSucc",
   "Int.cast",
   "HMul.hMul",
   "congrArg",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.neg_one_mul",
  "constType":
  "∀ {R : Type u_1} [inst : Ring R] {a b : R}, Int.rawCast (Int.negOfNat 1) * a = b → -a = b",
  "constCategory": "Theorem"},
 {"references":
  ["Monad",
   "ReaderT",
   "ReaderT.bind",
   "ReaderT.instApplicativeReaderT",
   "Monad.mk",
   "Bind.mk"],
  "name": "ReaderT.instMonadReaderT",
  "constType":
  "{ρ : Type u} → {m : Type u → Type v} → [inst : Monad m] → Monad (ReaderT ρ m)",
  "constCategory": "Definition"},
 {"references":
  ["AddGroupWithOne.mk",
   "Semiring.toNonUnitalSemiring",
   "Semiring.natCast_zero",
   "Semiring.natCast_succ",
   "Ring.intCast_negSucc",
   "AddCommMonoid.toAddMonoid",
   "Ring.intCast_ofNat",
   "Ring.toSemiring",
   "Ring.zsmul_neg'",
   "Semiring.toNatCast",
   "Ring.zsmul_zero'",
   "Semiring.toOne",
   "Ring.zsmul",
   "Ring.toNeg",
   "Ring.toIntCast",
   "Ring.zsmul_succ'",
   "Ring",
   "Ring.toSub",
   "AddGroupWithOne",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Ring.add_left_neg",
   "AddMonoidWithOne.mk",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Ring.sub_eq_add_neg"],
  "name": "Ring.toAddGroupWithOne",
  "constType": "{R : Type u} → [self : Ring R] → AddGroupWithOne R",
  "constCategory": "Definition"},
 {"references": ["DivInvMonoid", "Div"],
  "name": "DivInvMonoid.toDiv",
  "constType": "{G : Type u} → [self : DivInvMonoid G] → Div G",
  "constCategory": "Definition"},
 {"references":
  ["Nonempty.intro", "Inhabited", "Nonempty", "Inhabited.default"],
  "name": "instNonempty",
  "constType": "∀ {α : Sort u} [inst : Inhabited α], Nonempty α",
  "constCategory": "Definition"},
 {"references":
  ["HPow.hPow",
   "DivisionRing.toDivisionSemiring",
   "DivisionRing",
   "OfNat.ofNat",
   "DivisionSemiring.toGroupWithZero",
   "Odd.neg_zpow",
   "DivisionRing.toRing",
   "GroupWithZero.toDivisionMonoid",
   "Eq.refl",
   "DivInvMonoid.Pow",
   "Neg.neg",
   "One.toOfNat1",
   "Eq",
   "Semiring.toOne",
   "InvOneClass.toOne",
   "DivisionSemiring.toSemiring",
   "Eq.mpr",
   "Eq.ndrec",
   "Ring.toNeg",
   "DivInvOneMonoid.toInvOneClass",
   "instHPow",
   "one_zpow",
   "DivisionMonoid.toDivInvMonoid",
   "Int.instSemiringInt",
   "Odd",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "DivisionRing.toDivInvMonoid",
   "id"],
  "name": "Odd.neg_one_zpow",
  "constType":
  "∀ {α : Type u_1} [inst : DivisionRing α] {n : ℤ}, Odd n → (-1) ^ n = -1",
  "constCategory": "Theorem"},
 {"references":
  ["instHMul",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.neg_mul",
   "HasDistribNeg.toInvolutiveNeg",
   "HMul.hMul",
   "Neg.neg",
   "HasDistribNeg",
   "Mul",
   "Eq"],
  "name": "neg_mul",
  "constType":
  "∀ {α : Type u} [inst : Mul α] [inst_1 : HasDistribNeg α] (a b : α), -a * b = -(a * b)",
  "constCategory": "Theorem"},
 {"references": ["InvolutiveInv", "Inv"],
  "name": "InvolutiveInv.toInv",
  "constType": "{G : Type u_2} → [self : InvolutiveInv G] → Inv G",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "div_eq_inv_mul",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "mul_div_assoc'",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "pow_one",
   "Complex.Complex.addGroupWithOne",
   "Mathlib.Tactic.Ring.inv_mul",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "HDiv.hDiv",
   "InvOneClass.toInv",
   "HPow.hPow",
   "Complex.instZeroComplex",
   "instHDiv",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "MulOneClass.toOne",
   "UpperHalfPlane.coe",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Complex.instAddComplex",
   "CommMagma.toMul",
   "DivisionRing.toInv",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "congr",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Field.toDiv",
   "Mathlib.Tactic.Ring.atom_pf'",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "Inv.inv",
   "congrFun",
   "CommMonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Complex.instInvComplex",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "Complex.instSemiringComplex",
   "Monoid.toNatPow",
   "Mathlib.Tactic.Ring.inv_single",
   "div_div_eq_mul_div",
   "CommGroupWithZero.toDivisionCommMonoid",
   "DivInvMonoid.toDiv",
   "Complex.instCommSemiringComplex",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.mul_add",
   "Field.toSemifield",
   "Mathlib.Tactic.Ring.inv_congr",
   "One.toOfNat1",
   "NormedField.toNormedCommRing",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "div_add_div_same",
   "NormedCommRing.toSeminormedCommRing",
   "Nat.commSemiring",
   "Mathlib.Meta.NormNum.isRat_inv_pos",
   "Mathlib.Tactic.Ring.zero_mul",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.one_mul",
   "letFun",
   "DivisionMonoid.toDivInvMonoid",
   "Semifield.toDivisionSemiring",
   "div_add'",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "MulOneClass.toMul",
   "Monoid.toOne",
   "MulZeroOneClass.toMulOneClass",
   "div_zpow",
   "HAdd.hAdd",
   "Mathlib.Tactic.RingNF.add_assoc_rev",
   "Eq",
   "Mathlib.Tactic.RingNF.mul_assoc_rev",
   "Mathlib.Tactic.Ring.div_pf",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "Mathlib.Meta.NormNum.IsRat.to_isInt",
   "UpperHalfPlane",
   "Nat",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "Mathlib.Tactic.RingNF.nat_rawCast_1",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Nat.rawCast",
   "Complex.charZero",
   "DivisionSemiring.toDiv",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.div_congr",
   "Mathlib.Tactic.Ring.add_congr",
   "DivInvMonoid.toInv",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "of_eq_true",
   "DivInvOneMonoid.toInvOneClass",
   "mul_one",
   "congrArg",
   "add_zero",
   "NormedField.toNormedDivisionRing",
   "Int.ofNat",
   "DivisionRing.toRing",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Zero.toOfNat0",
   "mul_comm",
   "one_mul",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "instHPow",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "id",
   "eq_self",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.IsNat.to_isRat",
   "NonUnitalNonAssocSemiring.toMul",
   "Semiring.toOne",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "DivisionSemiring.toSemiring",
   "inv_eq_one_div",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex.instMulComplex"],
  "name": "EisensteinSeries.Moebius_aux_lem",
  "constType":
  "∀ (k : ℤ) (a b c d i1 i2 : ℂ) (z : UpperHalfPlane),\n  c * ↑z + d ≠ 0 →\n    ((i1 * ((a * ↑z + b) / (c * ↑z + d)) + i2) ^ k)⁻¹ =\n      (c * ↑z + d) ^ k * (((i1 * a + i2 * c) * ↑z + (i1 * b + i2 * d)) ^ k)⁻¹",
  "constCategory": "Theorem"},
 {"references": ["Eq.refl", "Eq"],
  "name": "Eq.rec",
  "constType":
  "{α : Sort u_1} →\n  {a : α} → {motive : (a_1 : α) → a = a_1 → Sort u} → motive a (_ : a = a) → {a_1 : α} → (t : a = a_1) → motive a_1 t",
  "constCategory": "Other"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "IsROrC.toNormedAlgebra",
   "Complex.instDecidableEqComplex",
   "Complex.I_re",
   "ZeroHom.mk",
   "Real.normedField",
   "Real",
   "Complex.partialOrder",
   "Real.isROrC",
   "Real.instAddMonoidReal",
   "AddCommMonoid.toAddMonoid",
   "DenselyNormedField.toNormedField",
   "IsROrC",
   "AddMonoid.toAddZeroClass",
   "Complex.instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing",
   "Field.toCommRing",
   "NormedField.toField",
   "Complex.ofReal_re",
   "AddZeroClass.toZero",
   "Complex.instCompleteSpaceComplexToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex",
   "Complex.zero_re",
   "Complex.instIsROrCComplex.proof_2",
   "Complex.conj_I",
   "Complex.re_add_im",
   "Complex.zero_im",
   "Complex.instIsROrCComplex.proof_5",
   "AddMonoidHom.mk",
   "Complex.I",
   "Complex.instDenselyNormedFieldComplex",
   "Complex.add_re",
   "Complex.instIsROrCComplex.proof_6",
   "Complex.instIsROrCComplex.proof_3",
   "Ring.toSemiring",
   "Complex.ofReal_im",
   "Complex.re",
   "Complex.mul_im",
   "Complex.im",
   "Complex.instIsROrCComplex.proof_4",
   "Complex.mul_re",
   "CommRing.toRing",
   "Complex.instIsROrCComplex.proof_1",
   "Complex",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "IsROrC.mk",
   "Complex.add_im",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Complex.instNormedAlgebraComplexToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplex"],
  "name": "Complex.instIsROrCComplex",
  "constType": "IsROrC ℂ",
  "constCategory": "Definition"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Monoid.toOne",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Preorder.toLE",
   "Eq",
   "Zero.toOfNat0",
   "PProd",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "PUnit",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "pow_nonneg.match_1",
   "Nat.succ",
   "id",
   "HPow.hPow",
   "Nat.below",
   "Nat.brecOn",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "instAddNat",
   "instHAdd",
   "Unit",
   "OrderedSemiring.zeroLEOneClass",
   "One.toOfNat1",
   "Monoid.toMulOneClass",
   "LE.le",
   "pow_zero",
   "OrderedSemiring",
   "instHMul",
   "Nat.rec",
   "PProd.fst",
   "Eq.ndrec",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "zero_le_one",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "pow_succ",
   "MonoidWithZero.toZero",
   "OrderedSemiring.toPosMulMono",
   "OrderedSemiring.toPartialOrder",
   "mul_nonneg"],
  "name": "pow_nonneg",
  "constType":
  "∀ {α : Type u} [inst : OrderedSemiring α] {a : α}, 0 ≤ a → ∀ (n : ℕ), 0 ≤ a ^ n",
  "constCategory": "Theorem"},
 {"references": ["Abs"],
  "name": "Abs.abs",
  "constType": "{α : Type u_1} → [self : Abs α] → α → α",
  "constCategory": "Definition"},
 {"references": ["EStateM.Result"],
  "name": "EStateM.Result.error",
  "constType": "{ε σ α : Type u} → ε → σ → EStateM.Result ε σ α",
  "constCategory": "Other"},
 {"references":
  ["Zero.toOfNat0",
   "OfNat.ofNat",
   "propext",
   "GroupWithZero",
   "MonoidWithZero.toZero",
   "GroupWithZero.toMonoidWithZero",
   "inv_eq_zero",
   "GroupWithZero.toInv",
   "Inv.inv",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.mdifferentiable._auxLemma.6",
  "constType":
  "∀ {G₀ : Type u_3} [inst : GroupWithZero G₀] {a : G₀}, (a⁻¹ = 0) = (a = 0)",
  "constCategory": "Theorem"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "inferInstance",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "Real.strictOrderedSemiring",
   "Real"],
  "name": "Real.orderedCancelAddCommMonoid",
  "constType": "OrderedCancelAddCommMonoid ℝ",
  "constCategory": "Definition"},
 {"references": [],
  "name": "Real",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["NormedAddCommGroup.toAddCommGroup",
   "AddCommSemigroup.toAddCommMagma",
   "NontriviallyNormedField",
   "NormedAddCommGroup",
   "NontriviallyNormedField.toNormedField",
   "nhds",
   "instHAdd",
   "HAdd.hAdd",
   "PseudoMetricSpace.toUniformSpace",
   "AddCommGroup.toAddCommMonoid",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "NormedSpace",
   "AddCommMagma.toAdd",
   "HasDerivAt",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "UniformSpace.toTopologicalSpace",
   "AddCommMonoid.toAddCommSemigroup",
   "HasDerivAtFilter.add_const"],
  "name": "HasDerivAt.add_const",
  "constType":
  "∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] {F : Type v} [inst_1 : NormedAddCommGroup F]\n  [inst_2 : NormedSpace 𝕜 F] {f : 𝕜 → F} {f' : F} {x : 𝕜},\n  HasDerivAt f f' x → ∀ (c : F), HasDerivAt (fun x => f x + c) f' x",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "Mathlib.Tactic.Ring.one_pow",
   "CommSemiring.toSemiring",
   "Mathlib.Tactic.Ring.mul_congr",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "PartialOrder.toPreorder",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Real.instLEReal",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.instMulReal",
   "Mathlib.Tactic.Ring.pow_zero",
   "Mathlib.Tactic.Ring.pow_one_cast",
   "Nat.cast_zero",
   "Preorder.toLE",
   "Eq",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Eq.mpr",
   "Mathlib.Tactic.Ring.pow_one",
   "Semiring.toNonAssocSemiring",
   "Mathlib.Tactic.Ring.pow_bit0",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "Real.instCommSemiringReal",
   "Mathlib.Tactic.Ring.pow_nat",
   "Std.Classes.Order._auxLemma.3",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "Nat",
   "Mathlib.Tactic.Ring.pow_add",
   "Real.instLinearOrderedSemiringReal",
   "Eq.trans",
   "instOfNat",
   "HPow.hPow",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Real.partialOrder",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "Nat.rawCast",
   "Real.instRingReal",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "Mathlib.Tactic.Ring.coeff_one",
   "Real.normedCommRing",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Eq.mp",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "MonoidWithZero.toZero",
   "congrArg",
   "Mathlib.Tactic.Ring.mul_one",
   "Mathlib.Tactic.Ring.add_overlap_pf",
   "congrFun",
   "CommMonoidWithZero.toZero",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "Real.natCast",
   "Mathlib.Meta.NormNum.isNat_add",
   "Real",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "StarOrderedRing.toExistsAddOfLE",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Zero.toOfNat0",
   "AddMonoidWithOne.toNatCast",
   "instHPow",
   "AddMonoid.toZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "Eq.symm",
   "pow_two_nonneg",
   "id",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Real.instMonoidReal",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "instHAdd",
   "Mathlib.Tactic.Ring.mul_pow",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.single_pow",
   "NonUnitalNonAssocSemiring.toMul",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "StrictOrderedSemiring.toSemiring",
   "LE.le",
   "Real.instZeroReal",
   "NormedCommRing.toSeminormedCommRing",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Eq.ndrec",
   "Mathlib.Tactic.Ring.zero_mul",
   "StrictOrderedSemiring.toPartialOrder",
   "Real.instStarOrderedRingRealToNonUnitalSemiringToNonUnitalCommSemiringToNonUnitalCommRingCommRingPartialOrder",
   "letFun",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Mathlib.Tactic.Ring.one_mul",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.atom_pf",
   "Nat.semiring"],
  "name": "EisensteinSeries.ineq1",
  "constType":
  "∀ (x y d : ℝ), 0 ≤ d ^ 2 * (x ^ 2 + y ^ 2) ^ 2 + 2 * d * x * (x ^ 2 + y ^ 2) + x ^ 2",
  "constCategory": "Theorem"},
 {"references":
  ["OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Subtype.val",
   "Semiring.toMonoidWithZero",
   "NonUnitalNonAssocSemiring.toMul",
   "LE.le",
   "Preorder.toLE",
   "Subtype.property",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "CovariantClass.mk",
   "MonoidWithZero.toZero",
   "OrderedSemiring.mul_le_mul_of_nonneg_right",
   "MulPosMono",
   "Subtype",
   "OrderedSemiring.toPartialOrder"],
  "name": "OrderedSemiring.toMulPosMono",
  "constType": "∀ {α : Type u} [inst : OrderedSemiring α], MulPosMono α",
  "constCategory": "Definition"},
 {"references": ["Real", "Complex"],
  "name": "Complex.im",
  "constType": "ℂ → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["Or.resolve_left",
   "Ne",
   "OfNat.ofNat",
   "LT.lt",
   "instOfNatNat",
   "Nat",
   "instLTNat",
   "Nat.eq_zero_or_pos",
   "GT.gt",
   "Eq"],
  "name": "Nat.pos_of_ne_zero",
  "constType": "∀ {n : ℕ}, n ≠ 0 → 0 < n",
  "constCategory": "Theorem"},
 {"references": ["HSub.mk", "HSub", "Sub.sub", "Sub"],
  "name": "instHSub",
  "constType": "{α : Type u_1} → [inst : Sub α] → HSub α α α",
  "constCategory": "Definition"},
 {"references":
  ["DistribLattice.toLattice",
   "Or",
   "PartialOrder.toPreorder",
   "LinearOrder",
   "Lattice.toSemilatticeInf",
   "propext",
   "instDistribLattice",
   "LinearOrder.toMax",
   "Max.max",
   "SemilatticeInf.toPartialOrder",
   "le_max_iff",
   "LE.le",
   "Preorder.toLE",
   "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.8",
  "constType":
  "∀ {α : Type u} [inst : LinearOrder α] {a b c : α}, (a ≤ max b c) = (a ≤ b ∨ a ≤ c)",
  "constCategory": "Theorem"},
 {"references":
  ["PartialOrder.toPreorder",
   "Filter.map",
   "Filter.instPartialOrderFilter",
   "Filter",
   "LE.le",
   "Preorder.toLE"],
  "name": "Filter.Tendsto",
  "constType":
  "{α : Type u} → {β : Type v} → (α → β) → Filter α → Filter β → Prop",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "instOfNatInt",
   "AddGroupWithOne.toIntCast",
   "neg_zero",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Eq.refl",
   "neg_neg",
   "AddGroupWithOne.toAddGroup",
   "Eq",
   "Zero.toOfNat0",
   "Nat.add",
   "Eq.mpr",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "InvolutiveNeg.toNeg",
   "AddGroupWithOne",
   "instOfNatNat",
   "Int.instNegInt",
   "Int.cast_negSucc",
   "Nat",
   "Nat.succ",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "id",
   "AddGroupWithOne.toAddMonoidWithOne",
   "instAddNat",
   "instHAdd",
   "Unit",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toInvolutiveNeg",
   "Int.cast_ofNat",
   "Int.cast_zero",
   "Int.cast_neg.match_1",
   "Eq.ndrec",
   "instNatCastInt",
   "Int.negSucc",
   "Int.cast",
   "NegZeroClass.toZero",
   "NegZeroClass.toNeg",
   "Int"],
  "name": "Int.cast_neg",
  "constType": "∀ {R : Type u} [inst : AddGroupWithOne R] (n : ℤ), ↑(-n) = -↑n",
  "constCategory": "Theorem"},
 {"references":
  ["Decidable.isFalse",
   "Decidable",
   "Decidable.isTrue",
   "Not",
   "Decidable.rec"],
  "name": "Decidable.casesOn",
  "constType":
  "{p : Prop} →\n  {motive : Decidable p → Sort u} →\n    (t : Decidable p) → ((h : ¬p) → motive (isFalse h)) → ((h : p) → motive (isTrue h)) → motive t",
  "constCategory": "Definition"},
 {"references":
  ["AddGroupWithOne.mk",
   "Complex.Complex.addGroupWithOne.proof_6",
   "OfNat.ofNat",
   "Real.natCast",
   "SubNegMonoid.toNeg",
   "Real",
   "NatCast.mk",
   "Complex.Complex.addGroupWithOne.proof_7",
   "Zero.toOfNat0",
   "SubNegMonoid.toSub",
   "Nat.cast",
   "Complex.Complex.addGroupWithOne.proof_3",
   "Complex.Complex.addGroupWithOne.proof_2",
   "AddGroupWithOne",
   "AddCommGroup.toAddGroup",
   "Nat",
   "AddMonoidWithOne.mk",
   "Complex.instOneComplex",
   "Complex.Complex.addGroupWithOne.proof_5",
   "Complex.Complex.addGroupWithOne.proof_9",
   "Complex.Complex.addGroupWithOne.proof_1",
   "Complex.addCommGroup",
   "One.mk",
   "One.toOfNat1",
   "Real.intCast",
   "AddGroup.toSubNegMonoid",
   "Real.instZeroReal",
   "IntCast.mk",
   "Int.cast",
   "Complex.mk",
   "Complex.Complex.addGroupWithOne.proof_4",
   "Complex.Complex.addGroupWithOne.proof_8",
   "SubNegMonoid.toAddMonoid",
   "SubNegMonoid.zsmul",
   "Complex",
   "AddCommGroup",
   "Int"],
  "name": "Complex.Complex.addGroupWithOne",
  "constType": "AddGroupWithOne ℂ",
  "constCategory": "Definition"},
 {"references": ["Iff"],
  "name": "Iff.mpr",
  "constType": "∀ {a b : Prop}, (a ↔ b) → b → a",
  "constCategory": "Definition"},
 {"references":
  ["EStateM",
   "Lean.Macro.Context.mk",
   "Lean.Macro.Context",
   "instMonadReaderOfReaderT",
   "Lean.Macro.Context.currMacroScope",
   "ReaderT.instMonadReaderT",
   "Lean.MacroM",
   "Lean.MonadRef",
   "Lean.Macro.Context.ref",
   "Pure.pure",
   "ReaderT.instApplicativeReaderT",
   "Monad.toBind",
   "Lean.Syntax",
   "MonadReader.read",
   "Lean.Macro.Context.methods",
   "EStateM.instMonadEStateM",
   "instMonadWithReaderOfReaderT",
   "instMonadWithReader",
   "instMonadReader",
   "Lean.Macro.State",
   "Lean.Macro.Context.mainModule",
   "Lean.MonadRef.mk",
   "Lean.Macro.Exception",
   "Lean.Macro.Context.maxRecDepth",
   "Lean.Macro.Context.currRecDepth",
   "Bind.bind",
   "MonadWithReader.withReader",
   "Applicative.toPure"],
  "name": "Lean.Macro.instMonadRefMacroM",
  "constType": "Lean.MonadRef Lean.MacroM",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "TopologicalSpace.Opens",
   "Complex.instNormedFieldComplex",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "upper_half_plane_isOpen",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "TopologicalSpace.Opens.mk",
   "SetLike.instMembership",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Coe",
   "UpperHalfPlane",
   "Complex",
   "UpperHalfPlane.upperHalfSpace",
   "EisensteinSeries.holExtn",
   "Coe.mk",
   "UniformSpace.toTopologicalSpace",
   "Subtype"],
  "name":
  "EisensteinSeries.instCoeForAllUpperHalfPlaneComplexForAllSubtypeMemOpensToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexInstMembershipInstSetLikeOpensMkUpperHalfSpaceUpper_half_plane_isOpen",
  "constType":
  "Coe (UpperHalfPlane → ℂ) (↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen } → ℂ)",
  "constCategory": "Definition"},
 {"references":
  ["instHMul",
   "MulOneClass.toMul",
   "instHDiv",
   "DivInvMonoid",
   "HMul.hMul",
   "mul_div_assoc",
   "HDiv.hDiv",
   "DivInvMonoid.toMonoid",
   "Eq.symm",
   "Monoid.toMulOneClass",
   "Eq",
   "DivInvMonoid.toDiv"],
  "name": "mul_div_assoc'",
  "constType":
  "∀ {G : Type u_3} [inst : DivInvMonoid G] (a b c : G), a * (b / c) = a * b / c",
  "constCategory": "Theorem"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "Real",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "Real.pseudoMetricSpace",
   "NormedField.toNormedCommRing",
   "instOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderReal",
   "_private.Mathlib.Data.Real.Basic.0.Real.lt",
   "Complex.im",
   "Zero.toOfNat0",
   "Real.instZeroReal",
   "Real.linearOrder",
   "NormedCommRing.toSeminormedCommRing",
   "OrderTopology.to_orderClosedTopology",
   "SeminormedCommRing.toSeminormedRing",
   "isOpen_Ioi",
   "UpperHalfPlane.upperHalfSpace",
   "Complex",
   "IsOpen.preimage",
   "UniformSpace.toTopologicalSpace",
   "IsOpen",
   "Complex.continuous_im"],
  "name": "upper_half_plane_isOpen",
  "constType": "IsOpen UpperHalfPlane.upperHalfSpace",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "NormedAddCommGroup",
   "NontriviallyNormedField",
   "NontriviallyNormedField.toNormedField",
   "DifferentiableWithinAt",
   "Set",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "NormedSpace",
   "Set.instMembershipSet"],
  "name": "DifferentiableOn",
  "constType":
  "(𝕜 : Type u_1) →\n  [inst : NontriviallyNormedField 𝕜] →\n    {E : Type u_2} →\n      [inst_1 : NormedAddCommGroup E] →\n        [inst_2 : NormedSpace 𝕜 E] →\n          {F : Type u_3} → [inst_3 : NormedAddCommGroup F] → [inst : NormedSpace 𝕜 F] → (E → F) → Set E → Prop",
  "constCategory": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat",
   "Nat.rawCast",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "rfl"],
  "name": "Mathlib.Meta.NormNum.IsNat.of_raw",
  "constType":
  "∀ (α : Type u_1) [inst : AddMonoidWithOne α] (n : ℕ), Mathlib.Meta.NormNum.IsNat (Nat.rawCast n) n",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "NormedAddCommGroup",
  "constType": "Type u_9 → Type u_9",
  "constCategory": "Other"},
 {"references":
  ["HPow.hPow",
   "Complex.instNormedFieldComplex",
   "NormedDivisionRing.toDivisionRing",
   "instHPow",
   "DivInvMonoid.Pow",
   "Complex",
   "NormedField.toNormedDivisionRing",
   "DivisionRing.toDivInvMonoid",
   "Int"],
  "name": "EisensteinSeries.powfun",
  "constType": "ℤ → ℂ → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["RingHomClass.mk",
   "RingHom",
   "MulOneClass.toMul",
   "RingHom.instRingHomClass.proof_3",
   "MulZeroOneClass.toMulOneClass",
   "RingHomClass",
   "MulOneClass.toOne",
   "FunLike.mk",
   "RingHom.instRingHomClass.proof_2",
   "NonAssocSemiring.toMulZeroOneClass",
   "MulHomClass.mk",
   "NonAssocSemiring",
   "OneHom.toFun",
   "RingHom.instRingHomClass.proof_1",
   "MonoidHom.toOneHom",
   "RingHom.map_zero'",
   "RingHom.map_add'",
   "RingHom.toMonoidHom",
   "MonoidHomClass.mk"],
  "name": "RingHom.instRingHomClass",
  "constType":
  "{α : Type u_2} → {β : Type u_3} → {x : NonAssocSemiring α} → {x_1 : NonAssocSemiring β} → RingHomClass (α →+* β) α β",
  "constCategory": "Definition"},
 {"references": ["OrderedSemiring", "PartialOrder"],
  "name": "OrderedSemiring.toPartialOrder",
  "constType": "{α : Type u} → [self : OrderedSemiring α] → PartialOrder α",
  "constCategory": "Definition"},
 {"references":
  ["AddGroupNorm.toNormedAddCommGroup",
   "Complex.abs",
   "NormedAddCommGroup",
   "Complex.addCommGroup",
   "AbsoluteValue.add_le'",
   "AddGroupNorm.mk",
   "AbsoluteValue",
   "Real",
   "AddGroupSeminorm.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "Real.orderedSemiring",
   "Complex.instNormedAddCommGroupComplex.proof_1",
   "AbsoluteValue.toMulHom",
   "Complex.instNormedAddCommGroupComplex.proof_2",
   "Complex.instSemiringComplex",
   "MulHom.toFun",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Complex",
   "AddCommGroup.toAddGroup",
   "Complex.instNormedAddCommGroupComplex.proof_3"],
  "name": "Complex.instNormedAddCommGroupComplex",
  "constType": "NormedAddCommGroup ℂ",
  "constCategory": "Definition"},
 {"references": ["Eq.rec", "Eq.refl", "Eq"],
  "name": "Eq.casesOn",
  "constType":
  "{α : Sort u_1} →\n  {a : α} → {motive : (a_1 : α) → a = a_1 → Sort u} → {a_1 : α} → (t : a = a_1) → motive a (_ : a = a) → motive a_1 t",
  "constCategory": "Definition"},
 {"references":
  ["ModularFormClass.modularForm",
   "OfNat.ofNat",
   "SlashInvariantFormClass.toFunLike",
   "Eq.refl",
   "instDecidableEqFin",
   "ModularFormClass.toSlashInvariantFormClass",
   "Fin.fintype",
   "FunLike.coe",
   "FunLike.ext_iff",
   "ModularForm",
   "Eq",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "Eq.mpr",
   "Eq.ndrec",
   "Matrix.SpecialLinearGroup",
   "Function.Injective",
   "SlashInvariantFormClass.slashInvariantForm",
   "propext",
   "SlashInvariantForm",
   "Eq.mp",
   "letFun",
   "Subgroup",
   "Complex",
   "instOfNatNat",
   "UpperHalfPlane",
   "Nat",
   "Int",
   "Fin",
   "Int.instCommRingInt",
   "ModularForm.toSlashInvariantForm",
   "id"],
  "name": "EisensteinSeries.toSIF_injective",
  "constType":
  "∀ (k : ℤ) (Γ : Subgroup (Matrix.SpecialLinearGroup (Fin 2) ℤ)), Function.Injective ModularForm.toSlashInvariantForm",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormComplex",
   "PartialOrder.toPreorder",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "AbsoluteValue",
   "Real",
   "Real.instLEReal",
   "Eq.refl",
   "SeminormedRing.toPseudoMetricSpace",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Preorder.toLE",
   "norm_tsum_le_tsum_norm",
   "Eq",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "SeminormedCommRing.toSeminormedRing",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "Summable",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "id",
   "Complex.abs",
   "PseudoMetricSpace.toUniformSpace",
   "Real.pseudoMetricSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "tsum",
   "FunLike.coe",
   "NormedField.toNormedCommRing",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "LE.le",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Norm.norm",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex.norm_eq_abs",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Real.instAddCommMonoidReal",
   "OrderedSemiring.toPartialOrder"],
  "name": "abs_tsum'",
  "constType":
  "∀ {α : Type u} {f : α → ℂ},\n  (Summable fun i => Complex.abs (f i)) → Complex.abs (∑' (i : α), f i) ≤ ∑' (i : α), Complex.abs (f i)",
  "constCategory": "Theorem"},
 {"references": ["AddMonoid.nsmul", "SMul", "SMul.mk", "Nat", "AddMonoid"],
  "name": "AddMonoid.toNatSMul",
  "constType": "{M : Type u_2} → [inst : AddMonoid M] → SMul ℕ M",
  "constCategory": "Definition"},
 {"references":
  ["SeminormedAddCommGroup.mk",
   "NonUnitalSeminormedRing.dist_eq",
   "NonUnitalSeminormedRing.toNorm",
   "SeminormedAddCommGroup",
   "NonUnitalSeminormedRing",
   "NonUnitalSeminormedRing.toNonUnitalRing",
   "NonUnitalRing.toNonUnitalNonAssocRing",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "NonUnitalSeminormedRing.toPseudoMetricSpace"],
  "name": "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
  "constType":
  "{α : Type u_1} → [inst : NonUnitalSeminormedRing α] → SeminormedAddCommGroup α",
  "constCategory": "Definition"},
 {"references": ["StrictOrderedSemiring", "Semiring"],
  "name": "StrictOrderedSemiring.toSemiring",
  "constType": "{α : Type u} → [self : StrictOrderedSemiring α] → Semiring α",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "NonUnitalNonAssocRing.toMul",
   "NontriviallyNormedField",
   "NormedAlgebra.toNormedSpace'",
   "NontriviallyNormedField.toNormedField",
   "nhds",
   "Function.comp",
   "PseudoMetricSpace.toUniformSpace",
   "HasDerivAt.continuousAt",
   "SeminormedRing.toPseudoMetricSpace",
   "NormedCommRing.toNormedRing",
   "NormedField.toNormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "HasDerivAt",
   "instHMul",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "NormedField.toNormedSpace",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "HasDerivAtFilter.comp",
   "NormedAlgebra",
   "UniformSpace.toTopologicalSpace",
   "NonUnitalNormedRing.toNormedAddCommGroup"],
  "name": "HasDerivAt.comp",
  "constType":
  "∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] (x : 𝕜) {𝕜' : Type u_1} [inst_1 : NontriviallyNormedField 𝕜']\n  [inst_2 : NormedAlgebra 𝕜 𝕜'] {h : 𝕜 → 𝕜'} {h₂ : 𝕜' → 𝕜'} {h' h₂' : 𝕜'},\n  HasDerivAt h₂ h₂' (h x) → HasDerivAt h h' x → HasDerivAt (h₂ ∘ h) (h₂' * h') x",
  "constCategory": "Theorem"},
 {"references": ["String", "Lean.Name", "Lean.Name.anonymous", "Lean.Name.str"],
  "name": "Lean.Name.mkStr4",
  "constType": "String → String → String → String → Lean.Name",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "AddMonoid.toAddZeroClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "CommSemiring",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "Nat.cast_one",
   "eq_self",
   "HPow.hPow",
   "instHAdd",
   "Nat.rawCast",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "HMul.hMul",
   "mul_one",
   "add_zero",
   "congrArg",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.pow_atom",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (a : R) (b : ℕ), a ^ b = a ^ b * Nat.rawCast 1 + 0",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Complex.ofReal'",
   "Complex.ofReal_pow",
   "Complex.instSemiringComplex",
   "Real.instMonoidReal",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Real",
   "Semiring.toMonoidWithZero",
   "Monoid.toNatPow",
   "Complex",
   "Nat",
   "Eq.symm",
   "Eq"],
  "name": "Mathlib.Data.Complex.Basic._auxLemma.11",
  "constType": "∀ (r : ℝ) (n : ℕ), ↑r ^ n = ↑(r ^ n)",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "Complex.instNormedFieldComplex",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Complex.instZeroComplex",
   "OfNat.ofNat",
   "TopologicalSpace.Opens.carrier",
   "Set.Elem",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "IsHolomorphicOn",
   "Complex",
   "OpenSubs",
   "const_hol",
   "NormedField.toNormedCommRing",
   "UniformSpace.toTopologicalSpace"],
  "name": "zero_hol",
  "constType": "∀ (D : OpenSubs), IsHolomorphicOn fun x => 0",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Subtype.val",
   "One.toOfNat1",
   "Matrix.adjugate",
   "Inv",
   "CommRing",
   "Inv.mk",
   "Eq",
   "Matrix.det",
   "Semiring.toOne",
   "CommRing.toCommSemiring",
   "Fintype",
   "Matrix.SpecialLinearGroup",
   "DecidableEq",
   "Matrix",
   "Matrix.SpecialLinearGroup.hasInv.proof_1",
   "Subtype.mk"],
  "name": "Matrix.SpecialLinearGroup.hasInv",
  "constType":
  "{n : Type u} →\n  [inst : DecidableEq n] →\n    [inst_1 : Fintype n] → {R : Type v} → [inst_2 : CommRing R] → Inv (Matrix.SpecialLinearGroup n R)",
  "constCategory": "Definition"},
 {"references":
  ["CommMagma",
   "CommMagma.mk",
   "NonUnitalNonAssocCommSemiring",
   "NonUnitalNonAssocCommSemiring.mul_comm",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocCommSemiring.toCommMagma",
  "constType":
  "{α : Type u} → [self : NonUnitalNonAssocCommSemiring α] → CommMagma α",
  "constCategory": "Definition"},
 {"references":
  ["Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "OfNat.ofNat",
   "NormedAddCommGroup",
   "HasDerivAtFilter.proof_2",
   "DifferentiableOn",
   "NontriviallyNormedField.toNormedField",
   "AddCommGroup.toAddCommMonoid",
   "ite",
   "Iff",
   "Set.Elem",
   "HasFDerivAtFilter",
   "DifferentiableWithinAt",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Complex.instOneComplex",
   "MulActionWithZero.toMulAction",
   "ContinuousSemilinearMapClass.toContinuousMapClass",
   "fderivWithin_def",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "ContinuousLinearMap.smulRight_one_one",
   "eq_of_heq",
   "dif_pos",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Set.instSDiffSet",
   "SDiff.sdiff",
   "Module.toMulActionWithZero",
   "eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "NormedSpace.toModule",
   "ContinuousLinearMap.zero",
   "SetLike.coe",
   "congrFun",
   "Exists",
   "HEq",
   "Subtype.val",
   "Set",
   "Semiring.toMonoidWithZero",
   "Eq.refl",
   "IsHolomorphicOn",
   "Exists.intro",
   "heq_of_eq",
   "dite_congr",
   "RingHom.id",
   "True",
   "NormedField.toField",
   "Subtype.property",
   "Decidable",
   "ContinuousLinearMap.smulRight",
   "HasDerivAtFilter",
   "UniformSpace.toTopologicalSpace",
   "if_neg",
   "Semiring.toModule",
   "Filter.instCompleteLatticeFilter",
   "Bot.bot",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "extendByZero",
   "Field.toSemifield",
   "One.toOfNat1",
   "FunLike.coe",
   "HasFDerivWithinAt.of_nhdsWithin_eq_bot",
   "NormedField.toNormedCommRing",
   "_private.Modformsported.ModForms.HolomorphicFunctions.0.IsHolomorphicOn._eq_1",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "letFun",
   "Semifield.toDivisionSemiring",
   "HasDerivWithinAt.differentiableWithinAt",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Subtype.mk",
   "NonUnitalNormedRing.toNormedAddCommGroup",
   "fderivWithin",
   "DifferentiableWithinAt.hasFDerivWithinAt",
   "ContinuousMapClass.toFunLike",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "_private.Modformsported.ModForms.HolomorphicFunctions.0.DifferentiableOn._eq_1",
   "OpenSubs",
   "dite",
   "CompleteLattice.toBot",
   "Eq",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "HasDerivWithinAt",
   "MonoidWithZero.toMonoid",
   "NormedField.toNormedSpace",
   "Filter",
   "Classical.propDecidable",
   "Eq.mpr_prop",
   "ContinuousLinearMap.continuousSemilinearMapClass",
   "Set.instMembershipSet",
   "Iff.intro",
   "True.intro",
   "TopologicalSpace.Opens.carrier",
   "ContinuousLinearMap",
   "HEq.refl",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "HEq.casesOn",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "Eq.mp",
   "Singleton.singleton",
   "Not",
   "congrArg",
   "NormedAddCommGroup.toAddCommGroup",
   "Classical.choose_spec",
   "TopologicalSpace.Opens",
   "Classical.choose",
   "SeminormedRing.toPseudoMetricSpace",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "NormedSpace",
   "_private.Mathlib.Tactic.Congr!.0.heq_imp_of_eq_imp",
   "Zero.toOfNat0",
   "Set.instSingletonSet",
   "IsScalarTower.left",
   "AddMonoid.toZero",
   "nhdsWithin",
   "Eq.symm",
   "id",
   "Membership.mem",
   "NontriviallyNormedField",
   "HasDerivAtFilter.proof_1",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "Eq.casesOn",
   "Complex.instNormedAddCommGroupComplex",
   "HasFDerivWithinAt",
   "DenselyNormedField.toNontriviallyNormedField",
   "ContinuousLinearMap.one"],
  "name": "isHolomorphicOn_iff_differentiableOn",
  "constType":
  "∀ (D : OpenSubs) (f : ↑D.carrier → ℂ), DifferentiableOn ℂ (extendByZero f) D.carrier ↔ IsHolomorphicOn f",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Iff.rfl",
   "Subtype.val",
   "Set",
   "Eq.refl",
   "Set.image_univ",
   "Set.univ",
   "Set.instMembershipSet",
   "Eq",
   "Set.range",
   "Subtype.isCompact_iff",
   "Eq.mpr",
   "Iff",
   "Eq.ndrec",
   "Set.Elem",
   "propext",
   "Subtype.range_coe",
   "TopologicalSpace",
   "instTopologicalSpaceSubtype",
   "Set.image",
   "IsCompact",
   "Subtype",
   "id"],
  "name": "isCompact_iff_isCompact_univ",
  "constType":
  "∀ {X : Type u} [inst : TopologicalSpace X] {s : Set X}, IsCompact s ↔ IsCompact Set.univ",
  "constCategory": "Theorem"},
 {"references":
  ["MulOneClass.toMul",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Monoid.toOne",
   "mul_le_mul",
   "HAdd.hAdd",
   "Semiring.toMonoidWithZero",
   "Preorder.toLE",
   "True",
   "Eq",
   "pow_nonneg",
   "Zero.toOfNat0",
   "PProd",
   "Semiring.toNonAssocSemiring",
   "Eq.mpr",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "PUnit",
   "Monoid.toNatPow",
   "instOfNatNat",
   "Nat",
   "Eq.trans",
   "Nat.succ",
   "id",
   "HPow.hPow",
   "Nat.below",
   "Nat.brecOn",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "instAddNat",
   "Mathlib.Order.Basic._auxLemma.1",
   "instHAdd",
   "Unit",
   "LE.le.trans",
   "One.toOfNat1",
   "Monoid.toMulOneClass",
   "LE.le",
   "pow_zero",
   "OrderedSemiring",
   "instHMul",
   "Nat.rec",
   "PProd.fst",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "congr",
   "pow_succ",
   "OrderedSemiring.toMulPosMono",
   "MonoidWithZero.toZero",
   "zero_pow_le_one.match_1",
   "OrderedSemiring.toPosMulMono",
   "congrArg",
   "OrderedSemiring.toPartialOrder"],
  "name": "pow_le_pow_left",
  "constType":
  "∀ {R : Type u_2} [inst : OrderedSemiring R] {a b : R}, 0 ≤ a → a ≤ b → ∀ (n : ℕ), a ^ n ≤ b ^ n",
  "constCategory": "Theorem"},
 {"references":
  ["Zero.toOfNat0",
   "instHMul",
   "OfNat.ofNat",
   "MulZeroClass.toZero",
   "HMul.hMul",
   "MulZeroClass",
   "MulZeroClass.toMul",
   "Eq"],
  "name": "MulZeroClass.zero_mul",
  "constType": "∀ {M₀ : Type u} [self : MulZeroClass M₀] (a : M₀), 0 * a = 0",
  "constCategory": "Definition"},
 {"references":
  ["instLocallyFiniteOrderIntToPreorderToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRing",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Mathlib.Algebra.Order.Monoid.Lemmas._auxLemma.19",
   "Finset.instSProd",
   "HAdd.hAdd",
   "Finset.Icc",
   "Int.instMaxInt",
   "implies_congr",
   "Preorder.toLE",
   "Eq",
   "AddZeroClass.toZero",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Eq.mpr",
   "SemilatticeSup.toSup",
   "Int.instDecidableEqInt",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "EisensteinSeries.square",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Eq.trans",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Algebra.Order.ZeroLEOne._auxLemma.2",
   "Prod.snd",
   "Lattice.toSemilatticeInf",
   "OrderedSemiring.zeroLEOneClass",
   "instDistribLattice",
   "Finset.instMembershipFinset",
   "Prod.fst",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.4",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.2",
   "Int.instAddInt",
   "DistribLattice.toLattice",
   "And",
   "IsLeftCancelAdd.contravariant_add_le_of_contravariant_add_lt",
   "EisensteinSeries.square_eq",
   "Int.instAddGroupInt",
   "OrderedCancelAddCommMonoid.toContravariantClassLeft",
   "AddCancelMonoid.toIsCancelAdd",
   "of_eq_true",
   "LT.lt",
   "LinearOrder.toMax",
   "Eq.mp",
   "Not",
   "LinearOrder.toPartialOrder",
   "congrArg",
   "Int",
   "Int.instLEInt",
   "congrFun",
   "AddZeroClass.toAdd",
   "LinearOrderedRing.toStrictOrderedRing",
   "instOfNatInt",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "Eq.refl",
   "Int.linearOrderedCommRing",
   "AddMonoid.toAddZeroClass",
   "Mathlib.Init.Order.Defs._auxLemma.2",
   "Abs.abs",
   "True",
   "Mathlib.Order.MinMax._auxLemma.4",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "forall_congr",
   "Preorder.toLT",
   "SProd.sprod",
   "AddGroup.toAddCancelMonoid",
   "Finset",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Finset.filter",
   "Int.instNegInt",
   "Int.instLinearOrderInt",
   "NeZero.charZero_one",
   "Lattice.toSemilatticeSup",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "id",
   "Neg.toHasAbs",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "IsCancelAdd.toIsLeftCancelAdd",
   "instHAdd",
   "Disjoint",
   "SemilatticeInf.toPartialOrder",
   "Neg.neg",
   "Finset.partialOrder",
   "LE.le",
   "Semiring.toOne",
   "Finset.instOrderBotFinsetToLEToPreorderPartialOrder",
   "Modformsported.ForMathlib.EisensteinSeries.lattice_functions._auxLemma.3",
   "StrictOrderedSemiring.to_charZero",
   "Eq.ndrec",
   "OrderedCommSemiring.toOrderedSemiring",
   "Int.instSemiringInt",
   "Max.max",
   "Prod",
   "Int.instAddMonoidInt"],
  "name": "EisensteinSeries.square_disj",
  "constType":
  "∀ {n : ℤ}, Disjoint (EisensteinSeries.square (n + 1)) (Finset.Icc (-n) n ×ˢ Finset.Icc (-n) n)",
  "constCategory": "Theorem"},
 {"references": ["Complex", "Int"],
  "name":
  "Int.cast._at.SlashInvariantForm.instIntCastSlashInvariantFormOfNatIntInstOfNatInt._spec_1",
  "constType": "ℤ → ℂ",
  "constCategory": "Axiom"},
 {"references":
  ["LinearOrderedSemifield",
   "LinearOrderedSemifield.toInv",
   "LinearOrderedSemifield.zpow",
   "LinearOrderedSemifield.zpow_neg'",
   "LinearOrderedSemifield.mul_inv_cancel",
   "CommSemiring.mk",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Semifield",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemifield.div_eq_mul_inv",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "LinearOrderedSemifield.inv_zero",
   "LinearOrderedSemifield.toDiv",
   "StrictOrderedSemiring.toNontrivial",
   "Semifield.mk",
   "LinearOrderedSemifield.zpow_succ'",
   "LinearOrderedSemifield.zpow_zero'",
   "StrictOrderedCommSemiring.mul_comm"],
  "name": "LinearOrderedSemifield.toSemifield",
  "constType":
  "{α : Type u_2} → [self : LinearOrderedSemifield α] → Semifield α",
  "constCategory": "Definition"},
 {"references": ["NormedAddCommGroup", "AddCommGroup"],
  "name": "NormedAddCommGroup.toAddCommGroup",
  "constType":
  "{E : Type u_9} → [self : NormedAddCommGroup E] → AddCommGroup E",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "CommSemiring.toSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "MulZeroOneClass.toMulOneClass",
   "Nat.rawCast",
   "One.toOfNat1",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toMulZeroOneClass",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "True",
   "Eq",
   "instHMul",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring",
   "HMul.hMul",
   "mul_one",
   "instOfNatNat",
   "Nat",
   "congrArg",
   "Eq.trans",
   "Nat.cast_one",
   "congrFun"],
  "name": "Mathlib.Tactic.Ring.mul_one",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (a : R), a * Nat.rawCast 1 = a",
  "constCategory": "Theorem"},
 {"references": ["outParam", "Singleton"],
  "name": "Singleton.singleton",
  "constType":
  "{α : outParam (Type u)} → {β : Type v} → [self : Singleton α β] → α → β",
  "constCategory": "Definition"},
 {"references":
  ["InvOneClass.mk",
   "DivInvOneMonoid",
   "Monoid.toOne",
   "DivInvOneMonoid.inv_one",
   "InvOneClass",
   "DivInvMonoid.toMonoid",
   "DivInvOneMonoid.toDivInvMonoid",
   "DivInvMonoid.toInv"],
  "name": "DivInvOneMonoid.toInvOneClass",
  "constType": "{G : Type u_2} → [self : DivInvOneMonoid G] → InvOneClass G",
  "constCategory": "Definition"},
 {"references":
  ["SMulZeroClass.mk",
   "Zero",
   "MulAction.toSMul",
   "SMulWithZero",
   "MonoidWithZero.toMonoid",
   "MulActionWithZero.smul_zero",
   "MulActionWithZero",
   "MulActionWithZero.zero_smul",
   "MonoidWithZero.toZero",
   "SMulWithZero.mk",
   "MulActionWithZero.toMulAction",
   "MonoidWithZero"],
  "name": "MulActionWithZero.toSMulWithZero",
  "constType":
  "(R : Type u_1) →\n  (M : Type u_3) → [inst : MonoidWithZero R] → [inst_1 : Zero M] → [m : MulActionWithZero R M] → SMulWithZero R M",
  "constCategory": "Definition"},
 {"references":
  ["Applicative",
   "Applicative.toSeqRight",
   "Monad",
   "ReaderT",
   "Monad.toApplicative",
   "Unit",
   "SeqLeft.seqLeft",
   "ReaderT.instFunctorReaderT",
   "Applicative.toSeqLeft",
   "Applicative.mk",
   "Seq.seq",
   "Pure.mk",
   "Unit.unit",
   "Seq.mk",
   "Applicative.toSeq",
   "SeqRight.mk",
   "ReaderT.pure",
   "SeqLeft.mk",
   "SeqRight.seqRight"],
  "name": "ReaderT.instApplicativeReaderT",
  "constType":
  "{ρ : Type u} → {m : Type u → Type v} → [inst : Monad m] → Applicative (ReaderT ρ m)",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "Complex.instNormedFieldComplex",
   "Exists",
   "Complex.instZeroComplex",
   "Complex.instDenselyNormedFieldComplex",
   "Subtype.val",
   "NontriviallyNormedField.toNormedField",
   "Set",
   "extendByZero",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "OpenSubs",
   "IsHolomorphicOn",
   "NormedField.toNormedCommRing",
   "Set.instMembershipSet",
   "Eq",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "TopologicalSpace.Opens.carrier",
   "Set.Elem",
   "HasDerivWithinAt",
   "NormedField.toNormedSpace",
   "Complex",
   "Complex.instNormedAddCommGroupComplex",
   "UniformSpace.toTopologicalSpace",
   "DenselyNormedField.toNontriviallyNormedField"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.mdifferentiable.0.IsHolomorphicOn._eq_1",
  "constType":
  "∀ {D : OpenSubs} (f : ↑D.carrier → ℂ),\n  IsHolomorphicOn f = ∀ (z : ↑D.carrier), ∃ f', HasDerivWithinAt (extendByZero f) f' D.carrier ↑z",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Multiset",
   "Finset",
   "Finset.val",
   "Membership.mk",
   "Membership",
   "Multiset.instMembershipMultiset"],
  "name": "Finset.instMembershipFinset",
  "constType": "{α : Type u_1} → Membership α (Finset α)",
  "constCategory": "Definition"},
 {"references":
  ["eq_self",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocRing.toMul",
   "mul_neg",
   "Neg.neg",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "True",
   "Eq",
   "instHMul",
   "Ring.toNeg",
   "of_eq_true",
   "InvolutiveNeg.toNeg",
   "Ring",
   "HasDistribNeg.toInvolutiveNeg",
   "HMul.hMul",
   "congrArg",
   "Eq.trans",
   "congrFun"],
  "name": "Mathlib.Tactic.RingNF.mul_neg",
  "constType": "∀ {R : Type u_1} [inst : Ring R] (a b : R), a * -b = -(a * b)",
  "constCategory": "Theorem"},
 {"references": ["_obj", "EisensteinSeries.MoebiusPerm"],
  "name": "EisensteinSeries.MoebiusEquiv._elambda_1._cstage2",
  "constType": "_obj → _obj → _obj",
  "constCategory": "Definition"},
 {"references":
  ["NNReal.toReal",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Iff.rfl",
   "_private.Mathlib.Data.Real.Sqrt.0.Real.sqrt._eq_1",
   "Real",
   "Real.instLEReal",
   "Real.toNNReal",
   "instNNRealStrictOrderedSemiring",
   "Eq.refl",
   "FunLike.coe",
   "Real.sqrt",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "RelHomClass.toFunLike",
   "Zero.toOfNat0",
   "Real.instZeroReal",
   "RelIso.instRelHomClassRelIso",
   "Eq.mpr",
   "Eq.ndrec",
   "NNReal.sqrt",
   "Iff",
   "StrictOrderedSemiring.toPartialOrder",
   "propext",
   "RelIso",
   "Real.toNNReal_le_toNNReal_iff",
   "NNReal.coe_le_coe",
   "NNReal",
   "NNReal.sqrt_le_sqrt_iff",
   "id"],
  "name": "Real.sqrt_le_sqrt_iff",
  "constType": "∀ {x y : ℝ}, 0 ≤ y → (Real.sqrt x ≤ Real.sqrt y ↔ x ≤ y)",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Semiring.toMonoidWithZero",
   "LE.le",
   "True",
   "Preorder.toLE",
   "Eq",
   "OrderedSemiring",
   "Zero.toOfNat0",
   "pow_nonneg",
   "eq_true",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "OrderedSemiring.toSemiring",
   "Monoid.toNatPow",
   "MonoidWithZero.toZero",
   "Nat",
   "OrderedSemiring.toPartialOrder"],
  "name": "Mathlib.Algebra.Order.Ring.Defs._auxLemma.1",
  "constType":
  "∀ {α : Type u} [inst : OrderedSemiring α] {a : α}, 0 ≤ a → ∀ (n : ℕ), (0 ≤ a ^ n) = True",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Filter",
  "constType": "Type u_1 → Type u_1",
  "constCategory": "Other"},
 {"references":
  ["Distrib.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "CommSemiring.toSemiring",
   "CommMonoidWithZero.toZero",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "HAdd.hAdd",
   "Eq.refl",
   "Nat.cast_zero",
   "Eq",
   "Zero.toOfNat0",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "CommSemiring",
   "AddMonoid.toZero",
   "instOfNatNat",
   "Nat",
   "CommSemiring.toCommMonoidWithZero",
   "AddCommMonoid.toAddCommSemigroup",
   "id",
   "Mathlib.Meta.NormNum.IsNat.out",
   "instHAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMagma.toAdd",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq.ndrec",
   "Mathlib.Meta.NormNum.IsNat",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "add_add_add_comm"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] {a₁ b₁ a₂ b₂ c : R},\n  Mathlib.Meta.NormNum.IsNat (a₁ + b₁) 0 → a₂ + b₂ = c → a₁ + a₂ + (b₁ + b₂) = c",
  "constCategory": "Theorem"},
 {"references": ["Ring", "IntCast"],
  "name": "Ring.toIntCast",
  "constType": "{R : Type u} → [self : Ring R] → IntCast R",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "Complex.instNormedFieldComplex",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "AbsoluteValue",
   "Real.instLEReal",
   "HAdd.hAdd",
   "dite",
   "DivInvMonoid.Pow",
   "Preorder.toLE",
   "Semiring.toNatCast",
   "Eq",
   "Real.decidableEq",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "NormedDivisionRing.toDivisionRing",
   "Ring.toIntCast",
   "UpperHalfPlane",
   "Real.instInvReal",
   "Nat",
   "EisensteinSeries.square",
   "DivisionRing.toDivInvMonoid",
   "HPow.hPow",
   "Complex.abs",
   "Prod.snd",
   "UpperHalfPlane.coe",
   "Finset.instMembershipFinset",
   "Complex.instAddComplex",
   "Prod.fst",
   "Real.orderedSemiring",
   "SubadditiveHomClass.toFunLike",
   "NonUnitalNonAssocSemiring.toDistrib",
   "instHMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Int.cast",
   "Not",
   "Int",
   "NormedField.toNormedDivisionRing",
   "Int.instLEInt",
   "Inv.inv",
   "instOfNatInt",
   "Real.natCast",
   "Real",
   "EisensteinSeries.Eise_on_square_is_bounded_Case2",
   "EisensteinSeries.rfunct",
   "EisensteinSeries.Complex_abs_square_left_ne",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "instLENat",
   "instHPow",
   "Finset",
   "instOfNatNat",
   "Membership.mem",
   "Complex.ofReal'",
   "instHAdd",
   "Complex.instRingComplex",
   "FunLike.coe",
   "LE.le",
   "EisensteinSeries.Eise_on_square_is_bounded_Case1",
   "instNatCastInt",
   "OrderedSemiring.toSemiring",
   "letFun",
   "HMul.hMul",
   "Complex",
   "Prod",
   "Complex.instMulComplex",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.Eise_on_square_is_bounded",
  "constType":
  "∀ (k : ℤ),\n  0 ≤ k →\n    ∀ (z : UpperHalfPlane) (n : ℕ),\n      ∀ x ∈ EisensteinSeries.square ↑n,\n        1 ≤ n → (Complex.abs ((↑x.1 * ↑z + ↑x.2) ^ k))⁻¹ ≤ (Complex.abs (↑(EisensteinSeries.rfunct z) ^ k * ↑n ^ k))⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["Membership.mem",
   "Finset.ext_iff",
   "Iff",
   "Finset",
   "Finset.instMembershipFinset",
   "Iff.mpr",
   "Eq"],
  "name": "Finset.ext",
  "constType":
  "∀ {α : Type u_1} {s₁ s₂ : Finset α}, (∀ (a : α), a ∈ s₁ ↔ a ∈ s₂) → s₁ = s₂",
  "constCategory": "Theorem"},
 {"references":
  ["Semiring.toNonUnitalSemiring",
   "NonUnitalRing.mk",
   "NormedRing.toNorm",
   "NormedRing.toNonUnitalNormedRing.proof_6",
   "AddCommMonoid.toAddMonoid",
   "NormedRing.toNonUnitalNormedRing.proof_7",
   "Ring.toNeg",
   "NormedRing.toNonUnitalNormedRing.proof_3",
   "NormedRing.dist_eq",
   "Ring.toSub",
   "NormedRing.toNonUnitalNormedRing.proof_2",
   "NormedRing.toNonUnitalNormedRing.proof_11",
   "NonUnitalNormedRing",
   "NormedRing.toNonUnitalNormedRing.proof_10",
   "NormedRing.toRing",
   "AddCommGroup.mk",
   "NormedRing.toNonUnitalNormedRing.proof_5",
   "NormedRing.toNonUnitalNormedRing.proof_1",
   "NormedRing.toNonUnitalNormedRing.proof_9",
   "NormedRing.norm_mul",
   "AddGroup.mk",
   "NormedRing.toMetricSpace",
   "NonUnitalNonAssocSemiring.toMul",
   "Ring.toSemiring",
   "NonUnitalNonAssocRing.mk",
   "SubNegMonoid.mk",
   "NormedRing",
   "Ring.zsmul",
   "NormedRing.toNonUnitalNormedRing.proof_4",
   "NormedRing.toNonUnitalNormedRing.proof_8",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNormedRing.mk",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring"],
  "name": "NormedRing.toNonUnitalNormedRing",
  "constType": "{α : Type u_1} → [β : NormedRing α] → NonUnitalNormedRing α",
  "constCategory": "Definition"},
 {"references":
  ["OfNat.ofNat",
   "Real.instLinearOrderedFieldReal",
   "instSubNat",
   "Real.natCast",
   "Real.instMulReal",
   "Real",
   "EisensteinSeries.rfunct",
   "LinearOrderedField.toDiv",
   "Zero.toOfNat0",
   "Nat.cast",
   "instHPow",
   "Monoid.toNatPow",
   "instOfNatNat",
   "HDiv.hDiv",
   "Real.instInvReal",
   "UniformSpace.toTopologicalSpace",
   "Nat",
   "instOfNat",
   "HPow.hPow",
   "instHSub",
   "instHDiv",
   "Real.instMonoidReal",
   "Real.instLTReal",
   "PseudoMetricSpace.toUniformSpace",
   "HSub.hSub",
   "Real.pseudoMetricSpace",
   "tsum",
   "EisensteinSeries.AbsEisenBound.proof_1",
   "Real.instZeroReal",
   "instHMul",
   "EisensteinSeries.lbpoint",
   "LT.lt",
   "HMul.hMul",
   "Real.instAddCommMonoidReal",
   "Inv.inv"],
  "name": "EisensteinSeries.AbsEisenBound",
  "constType": "ℝ → (B : ℝ) → 0 < B → ℕ → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["NontriviallyNormedField",
   "OfNat.ofNat",
   "nhds",
   "NontriviallyNormedField.toNormedField",
   "hasDerivAtFilter_id",
   "PseudoMetricSpace.toUniformSpace",
   "Field.toSemifield",
   "SeminormedRing.toPseudoMetricSpace",
   "One.toOfNat1",
   "NormedField.toNormedCommRing",
   "HasDerivAt",
   "NormedField.toField",
   "Semiring.toOne",
   "DivisionSemiring.toSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "NormedCommRing.toNonUnitalNormedCommRing",
   "NormedField.toNormedSpace",
   "NonUnitalNormedCommRing.toNonUnitalNormedRing",
   "Semifield.toDivisionSemiring",
   "UniformSpace.toTopologicalSpace",
   "NonUnitalNormedRing.toNormedAddCommGroup",
   "id"],
  "name": "hasDerivAt_id",
  "constType":
  "∀ {𝕜 : Type u} [inst : NontriviallyNormedField 𝕜] (x : 𝕜), HasDerivAt id 1 x",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "Multiset.card",
   "OfNat.ofNat",
   "instHSMul",
   "AddCommMonoid.toAddMonoid",
   "AddMonoid.toAddZeroClass",
   "True",
   "Eq",
   "Zero.toOfNat0",
   "Nat.addMonoid",
   "AddMonoid.toZero",
   "HSMul.hSMul",
   "Finset",
   "Multiset",
   "Finset.val",
   "nsmul_zero",
   "Nat",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Multiset.sum_replicate",
   "Multiset.map_const'",
   "Eq.trans",
   "AddCommMonoid",
   "eq_self",
   "AddHomClass.toFunLike",
   "Finset.sum",
   "Multiset.sum",
   "FunLike.coe",
   "Multiset.replicate",
   "AddMonoid.toNatSMul",
   "Multiset.map",
   "of_eq_true",
   "AddMonoidHomClass.toAddHomClass",
   "AddMonoidHom.addMonoidHomClass",
   "congrArg",
   "Multiset.instCanonicallyOrderedAddCommMonoidMultiset",
   "AddMonoidHom",
   "congrFun",
   "OrderedAddCommMonoid.toAddCommMonoid"],
  "name": "Finset.sum_const_zero",
  "constType":
  "∀ {β : Type u} {α : Type v} {s : Finset α} [inst : AddCommMonoid β], (Finset.sum s fun _x => 0) = 0",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "add_assoc",
   "CommSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "AddMonoid.toAddSemigroup",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HAdd.hAdd",
   "CommSemiring",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Eq.symm",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq"],
  "name": "Mathlib.Tactic.RingNF.add_assoc_rev",
  "constType":
  "∀ {R : Type u_1} [inst : CommSemiring R] (a b c : R), a + (b + c) = a + b + c",
  "constCategory": "Theorem"},
 {"references":
  ["Lean.MonadRef.withRef",
   "Monad",
   "Lean.replaceRef",
   "Lean.MonadRef",
   "Bind.bind",
   "Lean.MonadRef.getRef",
   "Monad.toBind",
   "Lean.Syntax"],
  "name": "Lean.withRef",
  "constType":
  "{m : Type → Type} → [inst : Monad m] → [inst : Lean.MonadRef m] → {α : Type} → Lean.Syntax → m α → m α",
  "constCategory": "Definition"},
 {"references": ["True.intro", "forall_true_left", "propext", "True", "Eq"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.bounded_at_infty._auxLemma.3",
  "constType": "∀ (p : True → Prop), (∀ (x : True), p x) = p True.intro",
  "constCategory": "Theorem"},
 {"references":
  ["AddZeroClass.toAdd",
   "neg_le_neg_iff",
   "instHAdd",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Neg.neg",
   "AddMonoid.toAddZeroClass",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "LE.le",
   "Eq",
   "Function.swap",
   "AddGroup",
   "propext",
   "CovariantClass",
   "SubNegMonoid.toAddMonoid",
   "LE",
   "NegZeroClass.toNeg",
   "SubtractionMonoid.toSubNegZeroMonoid"],
  "name": "Mathlib.Algebra.Order.Group.Defs._auxLemma.34",
  "constType":
  "∀ {α : Type u} [inst : AddGroup α] [inst_1 : LE α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1]\n  [inst_3 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] {a b : α}, (-a ≤ -b) = (b ≤ a)",
  "constCategory": "Theorem"},
 {"references":
  ["EStateM.dummyRestore",
   "PUnit",
   "EStateM.Backtrackable",
   "EStateM.dummySave",
   "EStateM.Backtrackable.mk"],
  "name": "EStateM.nonBacktrackable",
  "constType": "{σ : Type u} → EStateM.Backtrackable PUnit.{u + 1} σ",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "Real.instAddMonoidReal",
   "instDecidableEqFin",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "UpperHalfPlane.denom",
   "Nat.cast_zero",
   "Mathlib.Meta.NormNum.isInt_add",
   "MulZeroClass.toMul",
   "UpperHalfPlane.re",
   "Complex.Complex.addGroupWithOne",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "IsDomain.to_noZeroDivisors",
   "Mathlib.Tactic.Ring.neg_congr",
   "StrictOrderedCommSemiring.toCommSemiring",
   "Subgroup",
   "Subtype",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Mathlib.Analysis.Complex.UpperHalfPlane.Basic._auxLemma.4",
   "HPow.hPow",
   "instHSub",
   "Or",
   "Complex.instZeroComplex",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Matrix.mem_glpos",
   "Matrix.GeneralLinearGroup.det",
   "Matrix.semiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "UpperHalfPlane.coe",
   "Real.instRingReal",
   "MonoidHom",
   "Complex.instAddComplex",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Real.normedCommRing",
   "Complex.im",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Units.instGroupUnits",
   "False.elim",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "congr",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Analysis.Complex.UpperHalfPlane.Basic._auxLemma.5",
   "MonoidWithZero.toZero",
   "Int",
   "Fin",
   "SetLike.coe",
   "congrFun",
   "Subtype.prop",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Subtype.val",
   "Set",
   "Real",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Int.rawCast",
   "Eq.refl",
   "AddMonoid.toAddZeroClass",
   "Matrix.det",
   "UpperHalfPlane.im",
   "Real.instAddCommGroupReal",
   "zero_add",
   "AddMonoid.toAddSemigroup",
   "Monoid.toNatPow",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Complex.ofReal'",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Or.inr",
   "Real.instLTReal",
   "MonoidHomClass.toMulHomClass",
   "Neg.neg",
   "MulHomClass.toFunLike",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "NormedField.toNormedCommRing",
   "Mathlib.Tactic.Ring.neg_add",
   "Units",
   "CommRing.toCommSemiring",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "SeminormedRing.toRing",
   "Or.inl",
   "Real.linearOrderedCommRing",
   "Real.instPreorderReal",
   "letFun",
   "Mathlib.Tactic.Ring.atom_pf",
   "NegZeroClass.toNeg",
   "Linarith.lt_of_eq_of_lt",
   "Subgroup.instSetLikeSubgroup",
   "Real.orderedAddCommGroup",
   "MulOneClass.toMul",
   "HAdd.hAdd",
   "Real.instAddReal",
   "Real.instMulReal",
   "Real.commRing",
   "MonoidHom.monoidHomClass",
   "MulZeroClass.mul_zero",
   "SetLike.instMembership",
   "Eq",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "Iff.mp",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "UpperHalfPlane",
   "sub_zero",
   "Nat",
   "Eq.trans",
   "StrictOrderedRing.toPartialOrder",
   "Ne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "congr_arg",
   "neg_neg_of_pos",
   "Nat.rawCast",
   "Fin.fintype",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Or.casesOn",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Real.orderedSemiring",
   "Mathlib.Tactic.Ring.add_congr",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Set.instMembershipSet",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Mathlib.Tactic.Ring.of_eq",
   "Units.instMulOneClassUnits",
   "Real.instIsDomainRealSemiring",
   "Eq.mp",
   "Fin.instOfNatFin",
   "CommRing.toRing",
   "congrArg",
   "add_zero",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "UpperHalfPlane.denom.proof_1",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "CommRing.toNonUnitalCommRing",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "Matrix.GeneralLinearGroup",
   "MulZeroClass.zero_mul",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Ring.toNonAssocRing",
   "Zero.toOfNat0",
   "instHPow",
   "Preorder.toLT",
   "Matrix",
   "Ring.toSub",
   "MulZeroClass.toZero",
   "instOfNatNat",
   "CommSemiring.toCommMonoidWithZero",
   "id",
   "Membership.mem",
   "NeZero.succ",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "False",
   "AddSemigroup.toAdd",
   "instHAdd",
   "HSub.hSub",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "GT.gt",
   "Matrix.det_fin_two",
   "Real.instZeroReal",
   "StrictOrderedCommRing.toCommRing",
   "Units.val",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "Matrix.GLPos",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Mathlib.Algebra.GroupWithZero.Defs._auxLemma.1",
   "Complex.instMulComplex",
   "OrderedSemiring.toPartialOrder"],
  "name": "UpperHalfPlane.denom_ne_zero",
  "constType":
  "∀ (g : ↥(Matrix.GLPos (Fin 2) ℝ)) (z : UpperHalfPlane), UpperHalfPlane.denom g z ≠ 0",
  "constCategory": "Theorem"},
 {"references": ["Int.ofNat", "NatCast", "Nat", "Int", "NatCast.mk"],
  "name": "instNatCastInt",
  "constType": "NatCast ℤ",
  "constCategory": "Definition"},
 {"references":
  ["Ne",
   "OfNat.ofNat",
   "instHDiv",
   "MulOneClass.toMul",
   "div_eq_mul_inv",
   "mul_ne_zero",
   "Eq.refl",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toDivInvMonoid",
   "GroupWithZero.toMonoidWithZero",
   "Monoid.toMulOneClass",
   "Eq",
   "DivInvMonoid.toInv",
   "GroupWithZero.toDiv",
   "Zero.toOfNat0",
   "instHMul",
   "Eq.mpr",
   "Eq.ndrec",
   "GroupWithZero",
   "HMul.hMul",
   "HDiv.hDiv",
   "GroupWithZero.noZeroDivisors",
   "MonoidWithZero.toZero",
   "inv_ne_zero",
   "DivInvMonoid.toDiv",
   "id",
   "Inv.inv"],
  "name": "div_ne_zero",
  "constType":
  "∀ {G₀ : Type u_3} [inst : GroupWithZero G₀] {a b : G₀}, a ≠ 0 → b ≠ 0 → a / b ≠ 0",
  "constCategory": "Theorem"},
 {"references":
  ["HPow.hPow",
   "Nat.cast",
   "MonoidWithZero.toMonoid",
   "instHPow",
   "Semiring",
   "Semiring.toMonoidWithZero",
   "Nat.monoid",
   "Monoid.toNatPow",
   "Nat.cast_pow",
   "Nat",
   "Eq.symm",
   "Eq",
   "Semiring.toNatCast"],
  "name": "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.10",
  "constType":
  "∀ {R : Type u₁} [inst : Semiring R] (n m : ℕ), ↑n ^ m = ↑(n ^ m)",
  "constCategory": "Theorem"},
 {"references": ["outParam", "FunLike"],
  "name": "FunLike.coe",
  "constType":
  "{F : Sort u_1} → {α : outParam (Sort u_2)} → {β : outParam (α → Sort u_3)} → [self : FunLike F α β] → F → (a : α) → β a",
  "constCategory": "Definition"},
 {"references":
  ["DivisionRing",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "DivisionRing.toInv",
   "Inv.inv",
   "Eq"],
  "name": "Mathlib.Tactic.Ring.inv_congr",
  "constType":
  "∀ {R : Type u_1} [inst : DivisionRing R] {a a' b : R}, a = a' → a'⁻¹ = b → a⁻¹ = b",
  "constCategory": "Theorem"},
 {"references": ["MulHomClass", "outParam", "FunLike", "Mul"],
  "name": "MulHomClass.toFunLike",
  "constType":
  "{F : Type u_9} →\n  {M : outParam (Type u_10)} →\n    {N : outParam (Type u_11)} → [inst : Mul M] → [inst_1 : Mul N] → [self : MulHomClass F M N] → FunLike F M fun x => N",
  "constCategory": "Definition"},
 {"references":
  ["TopologicalSpace.t2Space_of_metrizableSpace",
   "inferInstance",
   "UpgradedPolishSpace.toMetricSpace",
   "T2Space",
   "TopologicalSpace",
   "upgradePolishSpace",
   "PolishSpace",
   "MetricSpace.toMetrizableSpace"],
  "name": "PolishSpace.t2Space",
  "constType":
  "∀ (α : Type u_3) [inst : TopologicalSpace α] [inst_1 : PolishSpace α], T2Space α",
  "constCategory": "Definition"},
 {"references":
  ["NormedRing.toNonUnitalNormedRing",
   "NonUnitalNormedRing.toNonUnitalSeminormedRing",
   "semi_normed_top_ring",
   "NormedDivisionRing.toNormedRing",
   "NormedRing.toSeminormedRing",
   "NormedDivisionRing.toDivisionRing",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "TopologicalDivisionRing",
   "NormedDivisionRing.to_hasContinuousInv₀",
   "TopologicalDivisionRing.mk",
   "UniformSpace.toTopologicalSpace",
   "NormedDivisionRing"],
  "name": "NormedDivisionRing.to_topologicalDivisionRing",
  "constType":
  "∀ {α : Type u_1} [inst : NormedDivisionRing α], TopologicalDivisionRing α",
  "constCategory": "Definition"},
 {"references":
  ["Distrib.toAdd",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "add_nonpos",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "upper_half_plane_isOpen",
   "Real.instAddMonoidReal",
   "Iff.mpr",
   "Nat.cast_zero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Complex.abs_ofReal",
   "Dist.dist",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Real.linearOrder",
   "SubNegMonoid.toSub",
   "And.right",
   "SemilatticeSup.toSup",
   "Mathlib.Tactic.Ring.neg_congr",
   "le_of_not_gt",
   "Real.decidableLT",
   "UpperHalfPlane.upperHalfSpace",
   "Linarith.lt_of_lt_of_eq",
   "Subtype",
   "instHSub",
   "HPow.hPow",
   "Complex.instSubComplex",
   "Complex.abs",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "neg_eq_zero",
   "instDistribLattice",
   "Complex.abs_im_le_abs",
   "SeminormedAddGroup.toPseudoMetricSpace",
   "PseudoMetricSpace.toUniformSpace",
   "Real.instRingReal",
   "SubadditiveHomClass.toFunLike",
   "Complex.im",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "eq_true",
   "False.elim",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Complex.sub_im",
   "Norm.norm",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "LinearOrder.toPartialOrder",
   "MonoidWithZero.toZero",
   "UpperHalfPlane.im_pos",
   "Int",
   "abs_sub_comm",
   "congrFun",
   "AddZeroClass.toAdd",
   "AddCommGroup.toDivisionAddCommMonoid",
   "CommMonoidWithZero.toZero",
   "sub_nonpos_of_le",
   "Subtype.val",
   "Real",
   "Set",
   "GE.ge",
   "Semiring.toMonoidWithZero",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Eq.refl",
   "Int.rawCast",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "AddMonoid.toAddZeroClass",
   "SeminormedAddGroup.toAddGroup",
   "IsCancelAdd.toIsRightCancelAdd",
   "TopologicalSpace.Opens.mk",
   "Abs.abs",
   "True",
   "Mathlib.Tactic.Ring.sub_pf",
   "Real.instAddCommGroupReal",
   "UpperHalfPlane.im",
   "Subtype.pseudoMetricSpace",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "Mathlib.Topology.MetricSpace.PseudoMetric._auxLemma.10",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "Mathlib.Init.Order.Defs._auxLemma.1",
   "Monoid.toNatPow",
   "Lattice.toSemilatticeSup",
   "UniformSpace.toTopologicalSpace",
   "Decidable.byContradiction",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Neg.toHasAbs",
   "Complex.ofReal'",
   "neg_nonpos_of_nonneg",
   "NonUnitalNonAssocRing.toMul",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "add_lt_of_le_of_neg",
   "Neg.neg",
   "FunLike.coe",
   "dist_eq_norm",
   "NormedField.toNormedCommRing",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "LE.le",
   "NormedCommRing.toSeminormedCommRing",
   "sub_neg_of_lt",
   "Set.instHasSubsetSet",
   "Eq.ndrec",
   "Real.instPreorderReal",
   "letFun",
   "NegZeroClass.toNeg",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Algebra.Order.Group.Defs._auxLemma.34",
   "Real.orderedAddCommGroup",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "AddGroup.toHasOrderedSub",
   "_private.Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly.0.Metric.closedBall._eq_1",
   "TopologicalSpace.Opens.instSetLikeOpens",
   "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
   "Metric.closedBall",
   "Real.instAddReal",
   "Real.instSubReal",
   "AbsoluteValue",
   "Real.instLEReal",
   "HAdd.hAdd",
   "Mathlib.Algebra.Order.Sub.Defs._auxLemma.1",
   "AddGroup.toSubtractionMonoid",
   "Real.instSupReal",
   "abs_of_nonneg",
   "Preorder.toLE",
   "SetLike.instMembership",
   "Eq",
   "AddZeroClass.toZero",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "add_nonneg",
   "Real.instCommSemiringReal",
   "MonoidWithZero.toMonoid",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "le_trans",
   "Nat",
   "Eq.trans",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "setOf",
   "Real.partialOrder",
   "Nat.rawCast",
   "HasSubset.Subset",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Set.instMembershipSet",
   "DistribLattice.toLattice",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Std.Classes.Order._auxLemma.4",
   "TopologicalSpace.Opens.carrier",
   "Mathlib.Tactic.Ring.of_eq",
   "Real.orderedAddCommMonoid",
   "AddCancelMonoid.toIsCancelAdd",
   "of_eq_true",
   "Eq.mp",
   "Real.instAddGroupReal",
   "Not",
   "SeminormedAddCommGroup.toSeminormedAddGroup",
   "congrArg",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "TopologicalSpace.Opens",
   "Linarith.lt_irrefl",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "lt_zero_of_zero_gt",
   "SeminormedRing.toPseudoMetricSpace",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "SeminormedAddGroup.toNorm",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Ring.toNonAssocRing",
   "Real.instNegReal",
   "Zero.toOfNat0",
   "Preorder.toLT",
   "instHPow",
   "add_lt_of_neg_of_le",
   "CommSemiring.toCommMonoidWithZero",
   "id",
   "sub_eq_zero_of_eq",
   "Membership.mem",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "False",
   "IsCancelAdd.toIsLeftCancelAdd",
   "LT.lt.le",
   "instHAdd",
   "AddSemigroup.toAdd",
   "HSub.hSub",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "AddGroup.toSubNegMonoid",
   "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
   "Complex.re",
   "GT.gt",
   "Real.instZeroReal",
   "EisensteinSeries.upperHalfSpaceSlice",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "PseudoMetricSpace.toDist",
   "dist_self",
   "SubNegMonoid.toAddMonoid",
   "OrderedSemiring.toSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "HMul.hMul",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "NegZeroClass.toZero",
   "OrderedSemiring.toPartialOrder"],
  "name": "EisensteinSeries.ball_in_upper_half",
  "constType":
  "∀ (z : ↥{ carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }) (A B ε : ℝ),\n  0 < ε →\n    ε < B →\n      Metric.closedBall z ε ⊆ EisensteinSeries.upperHalfSpaceSlice A B →\n        Metric.closedBall (↑z) ε ⊆\n          { carrier := UpperHalfPlane.upperHalfSpace, is_open' := upper_half_plane_isOpen }.carrier",
  "constCategory": "Theorem"},
 {"references": ["LinearOrderedRing", "LinearOrderedCommRing"],
  "name": "LinearOrderedCommRing.toLinearOrderedRing",
  "constType":
  "{α : Type u} → [self : LinearOrderedCommRing α] → LinearOrderedRing α",
  "constCategory": "Definition"},
 {"references":
  ["NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "Complex.instNormedFieldComplex",
   "PseudoMetricSpace.toUniformSpace",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "tsum",
   "NormedField.toNormedCommRing",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "Eq",
   "NormedCommRing.toSeminormedCommRing",
   "SeminormedCommRing.toSeminormedRing",
   "Eisenstein_tsum",
   "eise",
   "Prod",
   "UpperHalfPlane",
   "Complex",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "UniformSpace.toTopologicalSpace",
   "Int",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring"],
  "name":
  "_private.Modformsported.ForMathlib.EisensteinSeries.basic.0.Eisenstein_tsum._eq_1",
  "constType":
  "∀ (k : ℤ) (z : UpperHalfPlane), Eisenstein_tsum k z = ∑' (x : ℤ × ℤ), eise k z x",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Group",
  "constType": "Type u → Type u",
  "constCategory": "Other"},
 {"references":
  ["instHSub",
   "AddZeroClass.toAdd",
   "OfNat.ofNat",
   "instHAdd",
   "HAdd.hAdd",
   "HSub.hSub",
   "LT",
   "AddGroup.toSubtractionMonoid",
   "sub_pos",
   "AddMonoid.toAddZeroClass",
   "SubNegZeroMonoid.toNegZeroClass",
   "AddGroup.toSubNegMonoid",
   "Eq",
   "Zero.toOfNat0",
   "SubNegMonoid.toSub",
   "Function.swap",
   "AddGroup",
   "propext",
   "LT.lt",
   "CovariantClass",
   "SubNegMonoid.toAddMonoid",
   "NegZeroClass.toZero",
   "SubtractionMonoid.toSubNegZeroMonoid"],
  "name":
  "Modformsported.ForMathlib.EisensteinSeries.partial_sum_tendsto_uniformly._auxLemma.11",
  "constType":
  "∀ {α : Type u} [inst : AddGroup α] [inst_1 : LT α]\n  [inst_2 : CovariantClass α α (Function.swap fun x x_1 => x + x_1) fun x x_1 => x < x_1] {a b : α},\n  (0 < a - b) = (b < a)",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "AlternatingMap.funLike",
   "FunLike.coe",
   "Matrix.detRowAlternating",
   "CommRing",
   "CommRing.toCommSemiring",
   "Fintype",
   "Pi.addCommMonoid",
   "DecidableEq",
   "Matrix",
   "AlternatingMap",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Pi.module",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toModule"],
  "name": "Matrix.det",
  "constType":
  "{n : Type u_2} → [inst : DecidableEq n] → [inst : Fintype n] → {R : Type v} → [inst : CommRing R] → Matrix n n R → R",
  "constCategory": "Definition"},
 {"references":
  ["Int.cast_one",
   "LinearOrderedSemifield.toSemifield",
   "Real.instLinearOrderedFieldReal",
   "OfNat.ofNat",
   "instOfNatInt",
   "AddGroupWithOne.toIntCast",
   "Real",
   "Eq.refl",
   "DivInvMonoid.Pow",
   "Semifield.toCommGroupWithZero",
   "True",
   "Real.instOneReal",
   "Real.instNegReal",
   "Eq",
   "instHPow",
   "Int.cast_neg",
   "DivisionCommMonoid.toDivisionMonoid",
   "Real.instPowReal",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Int.instNegInt",
   "Real.instInvReal",
   "InvOneClass.toInv",
   "DivisionRing.toDivInvMonoid",
   "Eq.trans",
   "CommGroupWithZero.toDivisionCommMonoid",
   "eq_self",
   "HPow.hPow",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "zpow_one",
   "AddGroupWithOne.toNeg",
   "Neg.neg",
   "One.toOfNat1",
   "Real.rpow_int_cast",
   "Real.instRingReal",
   "Real.intCast",
   "Real.instDivisionRingReal",
   "Eq.ndrec",
   "AddMonoidWithOne.toOne",
   "of_eq_true",
   "Int.cast",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvMonoid",
   "Eq.mp",
   "zpow_neg",
   "congrArg",
   "DivisionMonoid.toDivInvOneMonoid",
   "Int",
   "congrFun",
   "Inv.inv"],
  "name": "Real.rpow_neg_one",
  "constType": "∀ (x : ℝ), x ^ (-1) = x⁻¹",
  "constCategory": "Theorem"},
 {"references":
  ["Distrib.toAdd",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "Complex.instNormedFieldComplex",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "PartialOrder.toPreorder",
   "DivInvMonoid.Pow",
   "Mathlib.Meta.NormNum.isInt_add",
   "Nat.cast_zero",
   "Semiring.toNatCast",
   "Complex.Complex.addGroupWithOne",
   "SubNegMonoid.toSub",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Nat.cast",
   "IsDomain.to_noZeroDivisors",
   "Mathlib.Tactic.Ring.neg_congr",
   "Complex.instField",
   "NormedDivisionRing.toDivisionRing",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Linarith.lt_of_lt_of_eq",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "HPow.hPow",
   "instHSub",
   "Complex.abs",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "AbsoluteValue.pos",
   "Real.instRingReal",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "SubadditiveHomClass.toFunLike",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "AddMonoidWithOne.toOne",
   "CanonicallyOrderedCommSemiring.toNoZeroDivisors",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "LT.lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "MonoidWithZero.toZero",
   "Int",
   "congrFun",
   "AddZeroClass.toAdd",
   "CommMonoidWithZero.toZero",
   "AddCommGroup.toDivisionAddCommMonoid",
   "sub_nonpos_of_le",
   "instOfNatInt",
   "Real",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Semiring.toMonoidWithZero",
   "Int.rawCast",
   "Eq.refl",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "Mathlib.Tactic.Ring.sub_congr",
   "EisensteinSeries.rfunct",
   "AddMonoid.toAddZeroClass",
   "IsCancelAdd.toIsRightCancelAdd",
   "Mathlib.Tactic.Ring.sub_pf",
   "AbsoluteValue.subadditiveHomClass",
   "Complex.instSemiringComplex",
   "AddMonoidWithOne.toNatCast",
   "AddMonoid.toAddSemigroup",
   "AddGroup.toAddCancelMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Monoid.toNatPow",
   "zero_lt_one",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "Complex.ofReal'",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "NonUnitalNonAssocRing.toMul",
   "Not.intro",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.cast_pos",
   "mul_ne_zero",
   "Complex.instRingComplex",
   "Neg.neg",
   "One.toOfNat1",
   "FunLike.coe",
   "SubNegZeroMonoid.toNegZeroClass",
   "Mathlib.Tactic.Ring.neg_add",
   "DivInvMonoid.toMonoid",
   "LE.le",
   "pow_ne_zero",
   "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.10",
   "Eq.ndrec",
   "instNatCastInt",
   "Mathlib.Tactic.Ring.atom_pf",
   "Int.instAddMonoidInt",
   "NegZeroClass.toNeg",
   "EisensteinSeries.rfunct_ne_zero",
   "AbsoluteValue",
   "HAdd.hAdd",
   "AddGroup.toSubtractionMonoid",
   "Preorder.toLE",
   "Eq",
   "Eq.mpr",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toMonoid",
   "Mathlib.Tactic.Zify._auxLemma.1",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "UpperHalfPlane",
   "Nat",
   "Eq.trans",
   "DivisionRing.toDivInvMonoid",
   "Nat.cast_one",
   "StrictOrderedRing.toPartialOrder",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Ne",
   "neg_neg_of_pos",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.rawCast",
   "Complex.charZero",
   "Int.instCommSemiringInt",
   "Nat.canonicallyOrderedCommSemiring",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Real.orderedSemiring",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "Mathlib.Tactic.Ring.add_congr",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Mathlib.Tactic.Ring.neg_mul",
   "instHMul",
   "Mathlib.Tactic.Ring.cast_zero",
   "Int.instAddGroupInt",
   "Mathlib.Tactic.Ring.of_eq",
   "AddCancelMonoid.toIsCancelAdd",
   "Real.instIsDomainRealSemiring",
   "Eq.mp",
   "Not",
   "congrArg",
   "NormedField.toNormedDivisionRing",
   "Int.instLEInt",
   "OrderedAddCommGroup.toAddCommGroup",
   "Int.ofNat",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "Linarith.lt_irrefl",
   "LinearOrderedRing.toStrictOrderedRing",
   "Real.natCast",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Mathlib.Data.Complex.Basic._auxLemma.1",
   "Mathlib.Tactic.Zify._auxLemma.2",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Int.linearOrderedCommRing",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "Ring.toNonAssocRing",
   "zpow_ofNat",
   "Zero.toOfNat0",
   "Int.instRingInt",
   "instLENat",
   "instHPow",
   "Preorder.toLT",
   "AddMonoid.toZero",
   "Nat.monoid",
   "Mathlib.Data.Complex.Basic._auxLemma.11",
   "instOfNatNat",
   "NeZero.charZero_one",
   "add_lt_of_neg_of_le",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.symm",
   "id",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Real.instMonoidWithZeroReal",
   "Real.instMonoidReal",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoidWithOne.toAddMonoid",
   "HSub.hSub",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "NonUnitalNonAssocSemiring.toMul",
   "AddGroup.toSubNegMonoid",
   "Real.instZeroReal",
   "Semiring.toOne",
   "Field.isDomain",
   "StrictOrderedSemiring.to_charZero",
   "OrderedCommSemiring.toOrderedSemiring",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "OrderedSemiring.toSemiring",
   "Int.instSemiringInt",
   "HMul.hMul",
   "Complex",
   "NegZeroClass.toZero",
   "Complex.instMulComplex",
   "OrderedSemiring.toPartialOrder",
   "Nat.semiring"],
  "name": "EisensteinSeries.rfunct_mul_n_pos",
  "constType":
  "∀ (k : ℕ) (z : UpperHalfPlane) (n : ℕ), 1 ≤ n → 0 < Complex.abs (↑(EisensteinSeries.rfunct z) ^ ↑k * ↑n ^ ↑k)",
  "constCategory": "Theorem"},
 {"references": ["Int.cast", "Ring.toIntCast", "Ring", "Int"],
  "name": "Int.rawCast",
  "constType": "{α : Type u_1} → [inst : Ring α] → ℤ → α",
  "constCategory": "Definition"},
 {"references": ["Zero", "CommMonoidWithZero"],
  "name": "CommMonoidWithZero.toZero",
  "constType": "{M₀ : Type u_4} → [self : CommMonoidWithZero M₀] → Zero M₀",
  "constCategory": "Definition"},
 {"references":
  ["ModularForm.instZero",
   "ModularFormClass.modularForm",
   "OfNat.ofNat",
   "Subgroup.instTopSubgroup",
   "instDecidableEqFin",
   "AddCommGroup.toAddCommMonoid",
   "Modformsported.ForMathlib.EisensteinSeries.ModularForm._auxLemma.1",
   "ModularFormClass.toSlashInvariantFormClass",
   "Pi.instZero",
   "ModularForm",
   "SetLike.instMembership",
   "Eq",
   "Zero.toOfNat0",
   "Matrix.SpecialLinearGroup.instGroupSpecialLinearGroup",
   "AddCommGroup.intModule",
   "Subgroup",
   "UpperHalfPlane",
   "instOfNatNat",
   "Nat",
   "Odd",
   "Int.instCommRingInt",
   "eq_self",
   "Membership.mem",
   "Complex.instZeroComplex",
   "Top.top",
   "Matrix.SpecialLinearGroup.instNegSpecialLinearGroup",
   "Fin.fintype",
   "Neg.neg",
   "One.toOfNat1",
   "Matrix.SpecialLinearGroup.hasOne",
   "ModularForm.instAddCommGroupModularForm",
   "Matrix.SpecialLinearGroup",
   "of_eq_true",
   "Int.instSemiringInt",
   "Complex",
   "EisensteinSeries.SlashInvariantForm_neg_one_in_lvl_odd_wt_eq_zero",
   "Int",
   "UpperHalfPlane.instFactEvenNatInstAddNatCardFinOfNatInstOfNatNatFintype",
   "Fin",
   "Subgroup.instSetLikeSubgroup"],
  "name": "EisensteinSeries.ModularForms_Top_Odd_Wt_eq_zero",
  "constType": "∀ (k : ℤ), Odd k → ∀ (f : ModularForm ⊤ k), f = 0",
  "constCategory": "Theorem"},
 {"references":
  ["Real.orderedAddCommGroup",
   "Complex.ofReal_nat_cast",
   "Complex.instNormedFieldComplex",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "PartialOrder.toPreorder",
   "Real.isROrC",
   "instLTNat",
   "Eq",
   "Semiring.toNatCast",
   "Real.instOneReal",
   "IsROrC.charZero_isROrC",
   "Semiring.toNonAssocSemiring",
   "SeminormedCommRing.toSeminormedRing",
   "Eq.mpr",
   "Nat.cast",
   "Complex.instField",
   "MonoidWithZero.toMonoid",
   "HDiv.hDiv",
   "Nat",
   "Eq.trans",
   "Complex.instOneComplex",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Nat.cast_one",
   "HPow.hPow",
   "instHDiv",
   "Real.partialOrder",
   "Nat.cast_lt",
   "zeta_eq_tsum_one_div_nat_cpow",
   "OrderedSemiring.zeroLEOneClass",
   "PseudoMetricSpace.toUniformSpace",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "Real.instRingReal",
   "Real.orderedSemiring",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "of_eq_true",
   "AddMonoidWithOne.toOne",
   "propext",
   "LT.lt",
   "Field.toDiv",
   "congrArg",
   "congrFun",
   "Real.natCast",
   "Real",
   "Semiring.toMonoidWithZero",
   "SeminormedRing.toPseudoMetricSpace",
   "Eq.refl",
   "NonUnitalSeminormedCommRing.toNonUnitalCommRing",
   "True",
   "Complex.instSemiringComplex",
   "Complex.ofReal_re",
   "AddMonoidWithOne.toNatCast",
   "Complex.instPowComplex",
   "instHPow",
   "Preorder.toLT",
   "Monoid.toNatPow",
   "instOfNatNat",
   "UniformSpace.toTopologicalSpace",
   "Eq.symm",
   "Complex.cpow_nat_cast",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "id",
   "eq_self",
   "Complex.ofReal'",
   "funext",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Real.instLTReal",
   "One.toOfNat1",
   "tsum",
   "NormedField.toNormedCommRing",
   "Complex.re",
   "NormedCommRing.toSeminormedCommRing",
   "Eq.ndrec",
   "Real.semiring",
   "riemannZeta",
   "SeminormedCommRing.toNonUnitalSeminormedCommRing",
   "Complex",
   "NonUnitalNonAssocSemiring.toAddCommMonoid"],
  "name": "zeta_nat_eq_tsum_of_gt_one",
  "constType": "∀ {k : ℕ}, 1 < k → riemannZeta ↑k = ∑' (n : ℕ), 1 / ↑n ^ k",
  "constCategory": "Theorem"},
 {"references": [],
  "name": "Lean.Syntax",
  "constType": "Type",
  "constCategory": "Other"},
 {"references":
  ["NormedAddCommGroup",
   "NontriviallyNormedField",
   "NontriviallyNormedField.toNormedField",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "TopologicalSpace",
   "NormedSpace"],
  "name": "ModelWithCorners",
  "constType":
  "(𝕜 : Type u_1) →\n  [inst : NontriviallyNormedField 𝕜] →\n    (E : Type u_2) →\n      [inst_1 : NormedAddCommGroup E] →\n        [inst : NormedSpace 𝕜 E] → (H : Type u_3) → [inst : TopologicalSpace H] → Type (max u_2 u_3)",
  "constCategory": "Other"},
 {"references": ["Lean.MonadRef", "Lean.MonadQuotation"],
  "name": "Lean.MonadQuotation.toMonadRef",
  "constType":
  "{m : Type → Type} → [self : Lean.MonadQuotation m] → Lean.MonadRef m",
  "constCategory": "Definition"},
 {"references": ["UniformSpace", "PseudoMetricSpace"],
  "name": "PseudoMetricSpace.toUniformSpace",
  "constType": "{α : Type u} → [self : PseudoMetricSpace α] → UniformSpace α",
  "constCategory": "Definition"},
 {"references":
  ["Lattice.toInf",
   "LinearOrder.toLattice",
   "DistribLattice",
   "LinearOrder",
   "instDistribLattice.proof_1",
   "DistribLattice.mk",
   "inferInstanceAs",
   "Lattice.mk",
   "Lattice",
   "Lattice.le_inf",
   "Lattice.toSemilatticeSup",
   "Lattice.inf_le_right",
   "Lattice.inf_le_left"],
  "name": "instDistribLattice",
  "constType": "{α : Type u} → [inst : LinearOrder α] → DistribLattice α",
  "constCategory": "Definition"},
 {"references":
  ["Zero.toOfNat0",
   "Zero",
   "outParam",
   "OfNat.ofNat",
   "eq_true",
   "LE",
   "FunLike.coe",
   "NonnegHomClass.toFunLike",
   "NonnegHomClass",
   "NonnegHomClass.map_nonneg",
   "LE.le",
   "True",
   "Eq"],
  "name": "Mathlib.Algebra.Order.Hom.Basic._auxLemma.1",
  "constType":
  "∀ {F : Type u_7} {α : outParam (Type u_8)} {β : outParam (Type u_9)} [inst : Zero β] [inst_1 : LE β]\n  [self : NonnegHomClass F α β] (f : F) (a : α), (0 ≤ f a) = True",
  "constCategory": "Theorem"},
 {"references":
  ["Subtype.val", "Subtype.ext", "rfl", "Subtype.mk", "Subtype", "Eq"],
  "name": "Subtype.coe_eta",
  "constType":
  "∀ {α : Sort u_1} {p : α → Prop} (a : { a // p a }) (h : p ↑a), { val := ↑a, property := h } = a",
  "constCategory": "Theorem"},
 {"references":
  ["Zero",
   "OfNat.ofNat",
   "One",
   "DecidableEq",
   "Matrix",
   "One.mk",
   "One.toOfNat1",
   "Matrix.diagonal"],
  "name": "Matrix.one",
  "constType":
  "{n : Type u_3} → {α : Type v} → [inst : DecidableEq n] → [inst : Zero α] → [inst : One α] → One (Matrix n n α)",
  "constCategory": "Definition"},
 {"references":
  ["instHMul",
   "Int.cast",
   "instHAdd",
   "Ring.toIntCast",
   "HAdd.hAdd",
   "HMul.hMul",
   "Complex.instRingComplex",
   "Complex",
   "Complex.instAddComplex",
   "Complex.instMulComplex",
   "Int"],
  "name": "EisensteinSeries.trans",
  "constType": "ℤ → ℤ → ℂ → ℂ",
  "constCategory": "Definition"},
 {"references":
  ["Membership.mem",
   "And",
   "Exists",
   "setOf",
   "Set",
   "Eq",
   "Set.instMembershipSet"],
  "name": "Set.image",
  "constType": "{α : Type u_1} → {β : Type u_2} → (α → β) → Set α → Set β",
  "constCategory": "Definition"},
 {"references":
  ["NormedAddCommGroup.toAddCommGroup",
   "Exists",
   "NontriviallyNormedField",
   "NormedAddCommGroup",
   "NontriviallyNormedField.toNormedField",
   "SeminormedAddCommGroup.toPseudoMetricSpace",
   "Set",
   "PseudoMetricSpace.toUniformSpace",
   "AddCommGroup.toAddCommMonoid",
   "Field.toSemifield",
   "NormedSpace",
   "RingHom.id",
   "NormedField.toField",
   "DivisionSemiring.toSemiring",
   "Semiring.toNonAssocSemiring",
   "ContinuousLinearMap",
   "NormedAddCommGroup.toSeminormedAddCommGroup",
   "Semifield.toDivisionSemiring",
   "NormedSpace.toModule",
   "UniformSpace.toTopologicalSpace",
   "HasFDerivWithinAt"],
  "name": "DifferentiableWithinAt",
  "constType":
  "(𝕜 : Type u_1) →\n  [inst : NontriviallyNormedField 𝕜] →\n    {E : Type u_2} →\n      [inst_1 : NormedAddCommGroup E] →\n        [inst_2 : NormedSpace 𝕜 E] →\n          {F : Type u_3} → [inst_3 : NormedAddCommGroup F] → [inst : NormedSpace 𝕜 F] → (E → F) → Set E → E → Prop",
  "constCategory": "Definition"},
 {"references": ["SemilatticeSup", "Sup"],
  "name": "SemilatticeSup.toSup",
  "constType": "{α : Type u} → [self : SemilatticeSup α] → Sup α",
  "constCategory": "Definition"},
 {"references":
  ["Decidable.casesOn", "Bool.false", "Bool.true", "Decidable", "Not", "Bool"],
  "name": "Decidable.decide",
  "constType": "(p : Prop) → [h : Decidable p] → Bool",
  "constCategory": "Definition"},
 {"references": ["Real", "Dist"],
  "name": "Dist.dist",
  "constType": "{α : Type u_3} → [self : Dist α] → α → α → ℝ",
  "constCategory": "Definition"},
 {"references":
  ["AddCommSemigroup.toAddCommMagma",
   "ZeroLEOneClass",
   "Nat.cast_le",
   "PartialOrder.toPreorder",
   "instHAdd",
   "HAdd.hAdd",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMagma.toAdd",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "LE.le",
   "Preorder.toLE",
   "Eq",
   "PartialOrder",
   "AddCommMonoidWithOne.toAddCommMonoid",
   "instLENat",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast",
   "CharZero",
   "AddMonoidWithOne.toOne",
   "propext",
   "AddMonoid.toZero",
   "CovariantClass",
   "Nat",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCommMonoidWithOne"],
  "name": "Mathlib.Data.Nat.Cast.Order._auxLemma.8",
  "constType":
  "∀ {α : Type u_1} [inst : AddCommMonoidWithOne α] [inst_1 : PartialOrder α]\n  [inst_2 : CovariantClass α α (fun x x_1 => x + x_1) fun x x_1 => x ≤ x_1] [inst_3 : ZeroLEOneClass α]\n  [inst_4 : CharZero α] {m n : ℕ}, (↑m ≤ ↑n) = (m ≤ n)",
  "constCategory": "Theorem"},
 {"references":
  ["CommSemiring.toSemiring",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "Real",
   "Real.commRing",
   "Semiring.toMonoidWithZero",
   "Matrix.GeneralLinearGroup",
   "LinearOrderedCommRing.toStrictOrderedCommRing",
   "instDecidableEqFin",
   "MonoidHom.monoidHomClass",
   "Ring.toNonAssocRing",
   "SetLike.instMembership",
   "Matrix.SpecialLinearGroup.monoid",
   "Int.castRingHom",
   "MonoidWithZero.toMonoid",
   "Subgroup.toSubmonoid",
   "Matrix",
   "Subgroup",
   "instOfNatNat",
   "Nat",
   "Subtype",
   "Int.instCommRingInt",
   "Submonoid.toMulOneClass",
   "Membership.mem",
   "Matrix.SpecialLinearGroup.map",
   "MonoidHomClass.toMulHomClass",
   "Matrix.semiring",
   "MulHomClass.toFunLike",
   "Fin.fintype",
   "MonoidHom",
   "FunLike.coe",
   "DivInvMonoid.toMonoid",
   "Monoid.toMulOneClass",
   "Units.instGroupUnits",
   "CommRing.toCommSemiring",
   "Matrix.SpecialLinearGroup",
   "StrictOrderedCommRing.toCommRing",
   "Real.linearOrderedCommRing",
   "Matrix.SpecialLinearGroup.toGLPos",
   "CommRing.toRing",
   "Matrix.GLPos",
   "Group.toDivInvMonoid",
   "Int",
   "Fin",
   "Subgroup.instSetLikeSubgroup"],
  "name": "UpperHalfPlane.coe'",
  "constType":
  "Matrix.SpecialLinearGroup (Fin 2) ℤ → ↥(Matrix.GLPos (Fin 2) ℝ)",
  "constCategory": "Definition"},
 {"references": ["NontriviallyNormedField", "NormedField"],
  "name": "NontriviallyNormedField.toNormedField",
  "constType":
  "{α : Type u_5} → [self : NontriviallyNormedField α] → NormedField α",
  "constCategory": "Definition"},
 {"references": ["SProd", "SProd.mk", "Finset", "Finset.product", "Prod"],
  "name": "Finset.instSProd",
  "constType":
  "{α : Type u_1} → {β : Type u_2} → SProd (Finset α) (Finset β) (Finset (α × β))",
  "constCategory": "Definition"}]